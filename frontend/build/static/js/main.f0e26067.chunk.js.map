{"version":3,"sources":["assets/logo.svg","components/Button.jsx","api/index.js","UserContext.jsx","components/NavigationBar.jsx","components/Form.jsx","components/Separator.jsx","components/Container.jsx","components/Card.jsx","hooks/index.js","routes/Auth.jsx","components/Modal.jsx","components/Calculator/CalculatorForm.jsx","components/Calculator/CalculatorDisplay.jsx","components/Calculator/index.jsx","components/TotalBalance.jsx","assets/empty-table.svg","components/ReceiptsTable/ReceiptsTableData.jsx","components/ReceiptsTable/PeopleModal.jsx","components/ReceiptsTable/index.jsx","components/Spinner.jsx","routes/Home.jsx","assets/spaceman.svg","routes/NoMatch.jsx","routes/Settings/canvasUtils.js","routes/Settings/ProfilePane.jsx","routes/Settings/PasswordPane.jsx","routes/Settings/index.jsx","assets/inkpot.svg","routes/User.jsx","routes/ForgotPassword.jsx","styles/GlobalStyles.jsx","styles/Themes.jsx","components/App.jsx","styles/useDarkMode.jsx","index.js"],"names":["StyledButton","styled","Button","props","$primary","$google","$facebook","StyledIconButtonSpan","span","attrs","className","theme","text","$delete","API","axios","create","baseURL","login","formData","post","withCredentials","signUp","logout","get","getAuthenticatedUser","forgotPassword","resetPassword","token","updatePassword","put","getUser","id","updateUser","userObject","createCalculation","newCalculation","getCalculation","deleteCalculation","delete","updateCalculation","calculationObject","_id","UserContext","createContext","UserProvider","useState","setUserObject","loadingUserObject","setLoadingUserObject","getAuthenticatedUserObject","a","api","res","data","useEffect","Provider","value","children","Avatar","createAvatarComponent","sources","SrcSource","GoogleSource","FacebookSource","ValueSource","StyledNavbar","Navbar","navbar","StyledNavbarBrand","Brand","NavigationBar","useContext","themeContext","ThemeContext","showDropdown","setShowDropdown","status","window","location","href","fixed","expand","variant","Toggle","aria-controls","to","alt","src","logo","width","height","Collapse","Nav","Link","size","Item","onClick","toggleTheme","emoji","NavDropdown","title","profileImage","googleId","facebookId","name","firstName","lastName","round","alignRight","show","onMouseEnter","onMouseLeave","as","Divider","pathname","state","isSignup","isSignUp","FormTextField","label","xs","md","lg","inputGroupPrepend","inputGroupAppend","inputGroupSize","useField","field","meta","Form","Group","Label","htmlFor","InputGroup","Control","isInvalid","touched","error","feedback","Feedback","type","Separator","div","Wrapper","Container","fluid","SignInContainer","StyledCard","$main","body","useDocumentTitle","retainOnUnmount","defaultTitle","useRef","document","defaultTitleCurrent","current","defaultFormData","email","password","confirmPassword","Auth","history","useHistory","setIsSignUp","errorMessage","setErrorMessage","validationSchema","yup","max","required","test","this","parent","handleSubmit","push","response","message","Card","Body","block","open","Alert","onClose","dismissible","initialValues","onSubmit","values","setSubmitting","isSubmitting","noValidate","Row","Col","isResetPassword","disabled","prevIsSignup","StyledModal","Modal","taxRate","number","CalculatorForm","showModal","setShowModal","handleCloseModal","onChange","event","onInputChange","receipt","purchaseDate","storeName","Prepend","Text","total","min","placeholder","DropdownButton","toggleButton","buyer","people","map","person","idx","Dropdown","onSelect","onBuyerChange","OverlayTrigger","placement","delay","hide","overlay","Tooltip","e","onDeductionInputChange","deduction","isTaxed","amountWithTax","amount","itemName","Append","personIdx","onDeductionAdd","Check","Input","checked","onHide","Header","closeButton","Title","initialTaxRate","err","console","log","localStorage","setItem","setTaxRate","dummyEvent","target","handleTaxRateSubmit","autoFocus","onFocus","select","onKeyPress","key","CalculatorDisplay","modalOpenIndex","setModalOpenIndex","toFixed","deductions","length","calculateDeductionsSum","sharedTotal","settlement","doesOwe","Math","abs","ListGroup","item","action","style","color","onDeductionDelete","Footer","Calculator","forwardRef","ref","defaultReceiptState","isBuyer","setReceipt","defaultDeductionState","setDeduction","list","reduce","acc","calculateBalanceOwed","receiptToCalculate","updatedPeople","sharedCost","numPeople","i","personDeductionTotal","splitReceiptCost","selfAmount","selfDoesOwe","formatFloat","formattedFloat","indexOf","substr","handleBuyerChange","selectedPerson","prevReceipt","useImperativeHandle","updatedCalculations","JSON","stringify","getItem","onAdd","preventDefault","prevValue","dropDownValue","prevDeduction","idxToDelete","filter","ele","TotalBalance","receipts","self","otherPerson","totalAmount","cellColorGreen","cellColorOrange","generateTotalBalance","ReceiptsTableData","formatMonetaryCell","content","parseFloat","cellStyle","whiteSpace","textOverflow","overflow","dataField","editable","editMode","sort","formatter","cell","dateObj","Date","getUTCMonth","slice","getUTCDate","getUTCFullYear","csvFormatter","editor","Type","DATE","cellContent","csvType","Number","row","rowIndex","colIndex","wordWrap","align","searchable","headerStyle","colum","formatExtraData","index","extraData","onDeleteReceipt","of","EditPeopleModal","onCloseModal","onUpdatePeople","remove","isUsersCalculation","uuidv1","ReceiptsTable","calculations","includes","columns","printComponentRef","SearchBar","Search","ExportCSVButton","onExport","cellEdit","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","onEditReceipt","editTitle","setEditTitle","toggleEditTitle","prevEditTitle","showPeopleModal","setShowPeopleModal","handleShowPeopleModal","keyField","bootstrap4","exportCSV","fileName","ignoreFooter","search","toolkitprops","sm","onOutsideClick","onSaveCalculationObject","defaultValue","onEditCalculationTitle","searchProps","csvProps","trigger","documentTitle","baseProps","bordered","condensed","noDataIndication","searchText","emptyTable","PeopleModal","StyledSpinner","Spinner","animation","Home","defaultCalculationObject","useMemo","initialState","setState","cbRef","setStateCallback","useCallback","cb","useStateCallback","setCalculationObject","prevState","usePrevious","showAlert","setShowAlert","setEditMode","calculatorRef","useParams","updateCalculationObject","latestCalcObjectState","getCalculationObject","some","calculationId","newReceipt","prevCalcObj","prevReceipts","idToDelete","updatedReceipts","NoMatch","spaceman","createImage","url","Promise","resolve","reject","image","Image","addEventListener","setAttribute","getRadianAngle","degreeValue","PI","getCroppedImage","imageSrc","pixelCrop","rotation","canvas","createElement","ctx","getContext","maxSize","safeArea","sqrt","translate","rotate","drawImage","getImageData","putImageData","x","y","toDataURL","getRotatedImage","toBlob","file","URL","createObjectURL","ORIENTATION_TO_ANGLE","readFile","reader","FileReader","result","readAsDataURL","ProfilePane","imageSource","setImageSource","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","hiddenFileInput","formRef","editImageButtonStyle","border","borderColor","background","position","bottom","right","borderRadius","defaultUserSettings","handleFileChange","files","imageDataUrl","getOrientation","orientation","onCropComplete","croppedArea","setCroppedImage","croppedImage","setFieldValue","innerRef","resetForm","handleSubmitUserSettings","then","order","display","justifyContent","flex","bsPrefix","Menu","click","confirm","File","accept","hidden","aspect","cropShape","showGrid","onCropChange","onZoomChange","padding","flexDirection","alignItems","column","step","tooltip","marginLeft","currentPassword","newPassword","confirmNewPassword","defaultPassword","PasswordPane","handleSubmitPassword","errors","isValid","Settings","setDocumentTitle","userSettings","handleSelect","eventKey","AlertMessage","Tab","defaultActiveKey","borderRight","Content","Pane","User","userProfile","setUserProfile","calculationIdToDelete","setCalculationIdToDelete","loading","setLoading","getUserObject","deleteCalculationObject","currentCalculations","calculation","events","columnIndex","isDummyField","paddingRight","handleEditPressed","handleShowModal","inkpot","ForgotPassword","setIsResetPassword","isDone","setIsDone","schema","GlobalStyles","createGlobalStyle","tabPane","lightTheme","darkTheme","App","setTheme","mountedComponent","setMountedComponent","setMode","localTheme","useDarkMode","themeToggler","themeMode","avatarRedirectUrl","exact","path","component","ReactDOM","render","getElementById"],"mappings":"0NAAe,MAA0B,iC,4DCG5BA,EAAeC,YAAOC,IAAPD,CAAH,0IAIrB,SAACE,GAAD,OACAA,EAAMC,UAAN,4SAgBA,SAACD,GAAD,OACAA,EAAME,SAAN,8PAeA,SAACF,GAAD,OACAA,EAAMG,WAAN,0PAaSC,EAAuBN,IAAOO,KAAKC,OAAM,iBAAO,CAC3DC,UAAW,+BADuBT,CAAH,gIAGtB,qBAAGU,MAAkBC,QAQ5B,SAACT,GAAD,OACAA,EAAMU,SAAN,yH,SChEEC,E,OAAMC,EAAMC,OAAO,CAAEC,QAAS,0BAIvBC,EAAQ,SAACC,GAAD,OACnBL,EAAIM,KAAK,cAAeD,EAAU,CAAEE,iBAAiB,KAC1CC,EAAS,SAACH,GAAD,OACpBL,EAAIM,KAAK,eAAgBD,EAAU,CAAEE,iBAAiB,KAC3CE,EAAS,kBAAMT,EAAIU,IAAI,eAAgB,CAAEH,iBAAiB,KAC1DI,EAAuB,kBAClCX,EAAIU,IAAI,gBAAiB,CAAEH,iBAAiB,KACjCK,EAAiB,SAACP,GAAD,OAAcL,EAAIM,KAAK,eAAgBD,IACxDQ,EAAgB,SAACR,EAAUS,GAAX,OAC3Bd,EAAIM,KAAJ,sBAAwBQ,GAAST,IACtBU,EAAiB,SAACV,GAAD,OAC5BL,EAAIgB,IAAJ,cAAuBX,EAAU,CAAEE,iBAAiB,KAGzCU,EAAU,SAACC,GAAD,OAAQlB,EAAIU,IAAI,SAAWQ,IACrCC,EAAa,SAACC,GAAD,OACxBpB,EAAIgB,IAAI,iBAAkBI,EAAY,CAAEb,iBAAiB,KAG9Cc,EAAoB,SAACC,GAAD,OAC/BtB,EAAIM,KAAK,sBAAuBgB,EAAgB,CAAEf,iBAAiB,KACxDgB,EAAiB,SAACL,GAAD,OAAQlB,EAAIU,IAAJ,uBAAwBQ,KACjDM,EAAoB,SAACN,GAAD,OAC/BlB,EAAIyB,OAAJ,uBAA2BP,EAA3B,WAAwC,CAAEX,iBAAiB,KAChDmB,EAAoB,SAACC,GAAD,OAC/B3B,EAAIgB,IAAJ,uBAAwBW,EAAkBC,IAA1C,SAAsDD,EAAmB,CACvEpB,iBAAiB,K,OC7BRsB,EAAcC,0BAEdC,EAAe,SAAC1C,GAC3B,MAAoC2C,qBAApC,mBAAOZ,EAAP,KAAmBa,EAAnB,KACA,EAAkDD,oBAAS,GAA3D,mBAAOE,EAAP,KAA0BC,EAA1B,KAFqC,SAItBC,IAJsB,2EAIrC,4BAAAC,EAAA,sEACoBC,IADpB,QACQC,EADR,QAGUC,MACNP,EAAcM,EAAIC,MAEpBL,GAAqB,GANvB,4CAJqC,sBAiBrC,OAJAM,qBAAU,WACRL,MACC,IAGD,cAACP,EAAYa,SAAb,CACEC,MAAO,CACLvB,aACAa,gBACAC,oBACAE,8BALJ,SAQG/C,EAAMuD,Y,qDCVPC,EAASC,YAAsB,CACnCC,QAAS,CAACC,IAAWC,IAAcC,IAAgBC,OAG/CC,EAAejE,YAAOkE,IAAPlE,CAAH,sJACI,qBAAGU,MAAkByD,UAOrCC,EAAoBpE,YAAOkE,IAAOG,MAAdrE,CAAH,8EA+IRsE,I,UAAAA,GA1If,SAAuBpE,GACrB,IAAQ+B,EAAesC,qBAAW7B,GAA1BT,WACFuC,EAAeD,qBAAWE,KAGhC,EAAwC5B,oBAAS,GAAjD,mBAAO6B,EAAP,KAAqBC,EAArB,KAL4B,4CAa5B,sBAAAzB,EAAA,sEACoBC,IADpB,OAGqB,MAHrB,OAGUyB,SACNC,OAAOC,SAASC,KAAO,KAJ3B,4CAb4B,sBAqB5B,OACE,eAACd,EAAD,CAAce,MAAM,MAAMC,OAAO,KAAKC,QAAQ,OAA9C,UACE,cAACjB,EAAakB,OAAd,CACE1E,UAAU,gBACV2E,gBAAc,qBAGhB,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,eAACjB,EAAD,WACE,qBACEkB,IAAI,OACJC,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPjF,UAAU,kCACT,IAPL,oBAYF,eAACwD,EAAa0B,SAAd,CAAuB5D,GAAG,mBAA1B,UAEE,cAAC6D,EAAA,EAAD,CAAKnF,UAAU,UAAf,SAEE,cAAC,gBAAD,CAAe4E,GAAG,IAAlB,SACE,cAACO,EAAA,EAAIC,KAAL,UACE,cAAC9F,EAAD,CAAcI,UAAQ,EAAC2F,KAAK,KAA5B,SACE,sBAAKrF,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQA,UAAU,SADpB,qBASR,eAACmF,EAAA,EAAD,CAAKnF,UAAU,OAAf,UAEE,cAACmF,EAAA,EAAIG,KAAL,CAAUtF,UAAU,iCAApB,SACE,wBAAQA,UAAU,UAAUuF,QAAS9F,EAAM+F,YAA3C,SACGzB,EAAa0B,UAKjBjE,EAEG,eAACkE,EAAA,EAAD,CACEC,MACE,cAAC1C,EAAD,CACE6B,IAAKtD,EAAWoE,aAChBC,SAAUrE,EAAWqE,SACrBC,WAAYtE,EAAWsE,WACvBC,KAAI,UAAKvE,EAAWwE,UAAhB,YAA6BxE,EAAWyE,UAC5CC,OAAO,EACPb,KAAK,KACLrF,UAAU,SAGdsB,GAAG,0BACH6E,YAAU,EACVC,KAAMnC,EACNoC,aA7Ed,WACEnC,GAAgB,IA6EJoC,aA3Ed,WACEpC,GAAgB,IA2EJlE,UAAU,OAjBZ,UAmBE,cAAC0F,EAAA,EAAYJ,KAAb,CAAkBiB,GAAInB,OAAMR,GAAI,SAAWpD,EAAWQ,IAAtD,6BAIA,cAAC0D,EAAA,EAAYJ,KAAb,CAAkBiB,GAAInB,OAAMR,GAAG,iBAA/B,sBAIA,cAACc,EAAA,EAAYc,QAAb,IACA,cAACd,EAAA,EAAYJ,KAAb,CAAkBC,QAhGJ,2CAgGd,wBAIJ,qCACE,cAAC,gBAAD,CACEX,GAAI,CACF6B,SAAU,SACVC,MAAO,CAAEC,UAAU,IAHvB,SAME,cAACxB,EAAA,EAAIC,KAAL,UACE,cAAC9F,EAAD,CACE+F,KAAK,KACLZ,QAAQ,gBACRzE,UAAU,OAHZ,wBAUJ,cAAC,gBAAD,CACE4E,GAAI,CACF6B,SAAU,UACVC,MAAO,CAAEE,UAAU,IAHvB,SAME,cAACzB,EAAA,EAAIC,KAAL,UACE,cAAC9F,EAAD,CAAc+F,KAAK,KAAKZ,QAAQ,QAAQzE,UAAU,OAAlD,sC,kFC9JL6G,GAAgB,SAAC,GAUvB,IATLC,EASI,EATJA,MACAP,EAQI,EARJA,GACAQ,EAOI,EAPJA,GACAC,EAMI,EANJA,GACAC,EAKI,EALJA,GACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,eACG3H,EACC,sGAIJ,EAAsB4H,aAAS5H,GAA/B,mBAAO6H,EAAP,KAAcC,EAAd,KACA,OACE,eAACC,GAAA,EAAKC,MAAN,CAAYlB,GAAIA,EAAIQ,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAAxC,UACGH,GAAS,cAACU,GAAA,EAAKE,MAAN,CAAYC,QAASlI,EAAMsG,KAA3B,SAAkCe,IAC5C,eAACc,GAAA,EAAD,CAAYvC,KAAM+B,EAAlB,UACGF,EACD,cAACM,GAAA,EAAKK,QAAN,6BACMP,GADN,IAGEQ,UAAWP,EAAKQ,SAAWR,EAAKS,MAChCC,SAAUV,EAAKS,OACXvI,IAEL8H,EAAKQ,SAAWR,EAAKS,MACpB,cAACR,GAAA,EAAKK,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SACGZ,EAAKS,QAEN,KACHb,SCnCIiB,GAAY7I,IAAO8I,IAAV,sU,SCCTC,GAAU/I,YAAOgJ,MAAWxI,OAAM,iBAAO,CACpDyI,MAAO,OACPxI,UAAW,UAFUT,CAAH,8CAOPkJ,GAAkBlJ,YAAOgJ,KAAPhJ,CAAH,sGCRfmJ,GAAanJ,IAAO8I,IAAV,8PAIJ,SAAC5I,GAAD,OAAYA,EAAMkJ,MAAQ,OAAS,OAIhC,qBAAG1I,MAAkB2I,QAChC,qBAAG3I,MAAkBC,Q,kBCuBzB,SAAS2I,GAAiBlD,GAAiC,IAA1BmD,EAAyB,wDACzDC,EAAeC,iBAAOC,SAAStD,OAErC9C,qBAAU,WACRoG,SAAStD,MAAQA,IAChB,CAACA,IAEJ9C,qBAAU,WACR,IAAMqG,EAAsBH,EAAaI,QACzC,OAAO,WACAL,IACHG,SAAStD,MAAQuD,MAIpB,IC7BL,IAAME,GAAkB,CACtBpD,UAAW,GACXC,SAAU,GACVoD,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAoNJC,I,GAAAA,GAjNf,SAAc/J,GACZ,MAAsDqE,qBAAW7B,GAAzDI,EAAR,EAAQA,cAAeG,EAAvB,EAAuBA,2BAEjBiH,EAAUC,eAEhB,EAAgCtH,mBAAS3C,EAAMmH,UAA/C,mBAAOA,EAAP,KAAiB+C,EAAjB,KACA,EAAwCvH,qBAAxC,mBAAOwH,EAAP,KAAqBC,EAArB,KAGMC,EAAmBlD,EACrBmD,KAAW,CACT/D,UAAW+D,OAERC,IAAI,GAAI,iCACRC,SAAS,YACZhE,SAAU8D,OAEPC,IAAI,GAAI,iCACRC,SAAS,YACZZ,MAAOU,OAAaV,MAAM,yBAAyBY,SAAS,YAC5DX,SAAUS,OAAaE,SAAS,YAChCV,gBAAiBQ,OAEdG,KAAK,kBAAmB,wBAAwB,SAAUnH,GACzD,OAAOoH,KAAKC,OAAOd,WAAavG,OAGtCgH,KAAW,CACTV,MAAOU,OAAaV,MAAM,yBAAyBY,SAAS,YAC5DX,SAAUS,OAAaE,SAAS,cAWtC,SAASI,EAAa5J,GAChBmG,EAzCa,oCA0CfhG,CAAOH,GA1CQ,oCA4CfD,CAAMC,GA5CS,4CAgDnB,WAAsBA,GAAtB,mBAAAgC,EAAA,+EAEsBC,EAAWjC,GAFjC,OAEUkC,EAFV,OAGIN,EAAcM,EAAIC,KAAKpB,YACvBgB,IACAiH,EAAQa,KAAK,KALjB,iDAOI,UAAI,KAAIC,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,UACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SARxC,0DAhDmB,kEA4DnB,WAAqB/J,GAArB,mBAAAgC,EAAA,+EAEsBC,EAAUjC,GAFhC,OAEUkC,EAFV,OAGIN,EAAcM,EAAIC,KAAKpB,YACvBgB,IACAiH,EAAQa,KAAK,KALjB,iDAOI,UAAI,KAAIC,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,UACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SARxC,0DA5DmB,sBAoFnB,OAnDA3H,qBAAU,WACR8G,EAAYlK,EAAMmH,YACjB,CAACnH,EAAMmH,WAGViC,GAAiB,kBAAD,OAAmBjC,EAAW,UAAY,WA+CxD,eAAC6B,GAAD,WACE,eAACgC,GAAA,EAAKC,KAAN,WACE,qBACE1K,UAAU,uBACV8E,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPJ,IAAI,SAKN,eAACvF,EAAD,CACEK,SAAO,EACP0F,KAAK,KACLsF,OAAK,EACL3K,UAAU,OACVuF,QA9BR,WACEnB,OAAOwG,KAAK,oCAAqC,UAwB7C,UAOE,mBAAG5K,UAAU,kBAAqB,IACjC4G,EAAW,YAAc,WAR5B,iBAWA,eAACtH,EAAD,CAAcM,WAAS,EAACyF,KAAK,KAAKsF,OAAK,EAACpF,QAhC9C,WACEnB,OAAOwG,KAAK,sCAAuC,UA+B/C,UACE,mBAAG5K,UAAU,2BACZ4G,EAAW,YAAc,WAF5B,oBAKA,cAACwB,GAAD,CAAWpI,UAAU,OAArB,gBAGC4J,GACC,eAACiB,GAAA,EAAD,CACEpG,QAAQ,SACRqG,QAAS,kBAAMjB,EAAgB,OAC/BkB,aAAW,EACX/K,UAAU,4BAJZ,UAME,cAAC,KAAD,CAAkBA,UAAU,SAC3B4J,KAIL,cAAClB,GAAD,UACE,cAAC,KAAD,CACEoB,iBAAkBA,EAClBkB,cAAe5B,GACf6B,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBd,EAAaa,GACbC,GAAc,IALlB,SAQG,gBAAGd,EAAH,EAAGA,aAAce,EAAjB,EAAiBA,aAAjB,OACC,eAAC5D,GAAA,EAAD,CAAM6D,YAAU,EAACJ,SAAUZ,EAA3B,UAEGzD,GACC,eAACY,GAAA,EAAK8D,IAAN,WACE,cAAC,GAAD,CACE/E,GAAIgF,KACJxF,KAAK,YACLe,MAAM,eAGR,cAAC,GAAD,CAAeP,GAAIgF,KAAKxF,KAAK,WAAWe,MAAM,iBAKlD,cAAC,GAAD,CAAef,KAAK,QAAQe,MAAM,QAAQqB,KAAK,UAG/C,cAAC,GAAD,CACEpC,KAAK,WACLe,MAAM,WACNqB,KAAK,cAGLvB,GACA,qBAAK5G,UAAU,OAAf,SACE,cAAC,OAAD,CACE4E,GAAI,CACF6B,SAAU,UACVC,MAAO,CAAE8E,iBAAiB,IAH9B,gCAWJ,cAAClM,EAAD,CACEI,UAAQ,EACRyI,KAAK,SACL9C,KAAK,KACLsF,OAAK,EACLc,SAAUL,EACVpL,UAAU,OANZ,SAQG4G,EAAW,UAAY,sBASpC,sBAAK5G,UAAU,mDAAf,UACG4G,EAAW,UAAY,QAD1B,oBAEE,cAAC,OAAD,CACEhC,GAAI,CACF6B,SAAUG,EAAW,SAAW,UAChCF,MAAO,CAAEE,UAAWA,IAHxB,SAME,cAACtH,EAAD,CAAcU,UAAU,OAAOyE,QAAQ,OAAOc,QAxHtD,WACEoE,GAAY,SAAC+B,GAAD,OAAmBA,MAuHzB,SACG9E,EAAW,SAAW,qB,mEClOtB+E,GAAcpM,YAAOqM,KAAPrM,CAAH,4SAEA,qBAAGU,MAAkB2I,QAChC,qBAAG3I,MAAkBC,QAYrB,qBAAGD,MAAkBC,QAIV,qBAAGD,MAAkB2I,QAChC,qBAAG3I,MAAkBC,QCN5B4J,GAAmBC,KAAW,CAClC8B,QAAS9B,OAENG,KACC,mBACA,oCACA,SAACnH,GAAD,OAAW,EAAIA,GAASA,GAAS,OAElCmH,KACC,wBACA,mDACA,SAAC4B,GAAD,MAAY,oBAAoB5B,KAAK4B,MAEtC7B,aA8PU8B,OA3Pf,SAAwBtM,GAEtB,IA0BMsE,EAAeD,qBAAWE,KAChC,EAAkC5B,oBAAS,GAA3C,mBAAO4J,EAAP,KAAkBC,EAAlB,KAMMC,EAAmB,WACvBD,GAAa,IAGf,OACE,qCACE,eAACzE,GAAA,EAAK8D,IAAN,WAEE,cAAC9D,GAAA,EAAKC,MAAN,CAAYlB,GAAIgF,KAAKtE,GAAG,IAAxB,SACE,cAACO,GAAA,EAAKK,QAAN,CACEf,MAAM,gBACNf,KAAK,eACLoG,SAAU,SAACC,GAAD,OAAW3M,EAAM4M,cAAcD,IACzCrJ,MAAOtD,EAAM6M,QAAQC,aACrBpE,KAAK,OACL8B,UAAQ,EACR5E,KAAK,SAKT,cAACmC,GAAA,EAAKC,MAAN,CAAYlB,GAAIgF,KAAKtE,GAAG,IAAxB,SACE,cAACO,GAAA,EAAKK,QAAN,CACEf,MAAM,aACNf,KAAK,YACLoG,SAAU,SAACC,GAAD,OAAW3M,EAAM4M,cAAcD,IACzCrJ,MAAOtD,EAAM6M,QAAQE,UACrBvC,UAAQ,EACR5E,KAAK,YAKX,eAACmC,GAAA,EAAK8D,IAAN,WAEE,eAAC9D,GAAA,EAAKC,MAAN,CAAYlB,GAAIgF,KAAKtE,GAAG,IAAxB,UACE,cAACO,GAAA,EAAKE,MAAN,4BACA,eAACE,GAAA,EAAD,CAAYvC,KAAK,KAAjB,UACE,cAACuC,GAAA,EAAW6E,QAAZ,UACE,cAAC7E,GAAA,EAAW8E,KAAZ,kBAEF,cAAClF,GAAA,EAAKK,QAAN,CACE9B,KAAK,QACLoG,SAAU,SAACC,GAAD,OAAW3M,EAAM4M,cAAcD,IACzCrJ,MAAOtD,EAAM6M,QAAQK,OAAS,GAC9BxE,KAAK,SACLyE,IAAI,OACJ3C,UAAQ,EACR4C,YAAY,eAMlB,eAACrF,GAAA,EAAKC,MAAN,CAAYlB,GAAIgF,KAAKtE,GAAG,IAAxB,UACE,cAACO,GAAA,EAAKE,MAAN,wBACA,cAACoF,GAAA,EAAD,CACE/G,KAAK,QACLV,KAAK,KACLZ,QAASV,EAAagJ,aACtBhK,MAAOtD,EAAM6M,QAAQU,MACrBrH,MAAOlG,EAAM6M,QAAQU,MALvB,SAOGvN,EAAM6M,QAAQW,OAAOC,KAAI,SAACC,EAAQC,GAAT,OACxB,cAACC,GAAA,EAAS/H,KAAV,CAEEgI,SAAU,kBAAM7N,EAAM8N,cAAcJ,IAFtC,SAIGA,EAAOpH,MAHHqH,cAUf,cAAC5F,GAAA,EAAK8D,IAAN,UAEE,eAAC9D,GAAA,EAAKC,MAAN,CAAYlB,GAAIgF,KAAhB,UACE,cAAC/D,GAAA,EAAKE,MAAN,yBACA,cAAC8F,GAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAAEtH,KAAM,EAAGuH,KAAM,GACxBC,QACE,cAACC,GAAA,EAAD,0DAJJ,SAOE,eAACjG,GAAA,EAAD,CAAYvC,KAAK,KAAjB,UACE,cAACuC,GAAA,EAAW6E,QAAZ,UACE,cAAC7E,GAAA,EAAW8E,KAAZ,kBAEF,cAAClF,GAAA,EAAKK,QAAN,CACE9B,KAAK,SACLoG,SAAU,SAAC2B,GAAD,OAAOrO,EAAMsO,uBAAuBD,IAC9C/K,MACEtD,EAAMuO,UAAUC,QACsB,SAAlCxO,EAAMuO,UAAUE,cACdzO,EAAMuO,UAAUE,cAChB,GACFzO,EAAMuO,UAAUG,QAAU,GAEhChG,KAAK,SACLyE,IAAI,IACJC,YAAY,SAEd,cAACrF,GAAA,EAAKK,QAAN,CACE9B,KAAK,WACLoG,SAAU,SAAC2B,GAAD,OAAOrO,EAAMsO,uBAAuBD,IAC9C/K,MAAOtD,EAAMuO,UAAUI,SACvBvB,YAAY,cAEd,cAACC,GAAA,EAAD,CACE/G,KAAK,YACLQ,GAAIqB,KAAWyG,OACf5J,QAASV,EAAagJ,aACtBhK,MAAOtD,EAAM6M,QAAQW,OAAOxN,EAAMuO,UAAUM,WAAWvI,KACvDJ,MAAOlG,EAAM6M,QAAQW,OAAOxN,EAAMuO,UAAUM,WAAWvI,KALzD,SAOGtG,EAAM6M,QAAQW,OAAOC,KAAI,SAACC,EAAQC,GAAT,OACxB,cAACC,GAAA,EAAS/H,KAAV,CAEEgI,SAAU,SAACQ,GAAD,OAAOrO,EAAMsO,uBAAuBD,EAAGX,IAFnD,SAIGA,EAAOpH,MAHHqH,QAOX,cAACxF,GAAA,EAAWyG,OAAZ,UACE,cAAC/O,EAAD,CACEmF,QAASV,EAAagJ,aACtBxH,QAAS,WACP9F,EAAMuO,UAAUG,QAAU1O,EAAM8O,kBAHpC,wBAYN,cAAC/G,GAAA,EAAKgH,MAAN,CAAYxO,UAAU,kBAAtB,SACE,sBAAKA,UAAU,4BAAf,UACE,cAACwH,GAAA,EAAKgH,MAAMC,MAAZ,CACEnN,GAAG,kBACH6G,KAAK,WACLuG,QAASjP,EAAMuO,UAAUC,QACzB9B,SAAU,SAAC2B,GACTrO,EAAMsO,uBAAuBD,MAGjC,eAACtG,GAAA,EAAKgH,MAAM9G,MAAZ,CAAkBC,QAAQ,kBAAkB3H,UAAU,OAAtD,oBACU,IACR,cAACV,EAAD,CACEmF,QAAQ,OACRzE,UAAU,iBACVuF,QA9JQ,SAAC+I,GACvBrC,GAAa,IA0JD,iBAMgB,IARlB,+BAiBR,eAACN,GAAD,CAAavF,KAAM4F,EAAW2C,OAAQzC,EAAkB7G,KAAK,KAA7D,UACE,cAACsG,GAAYiD,OAAb,CAAoBC,aAAW,EAA/B,SACE,cAAClD,GAAYmD,MAAb,8BAEF,cAACnD,GAAYjB,KAAb,UACE,cAAC,KAAD,CACEZ,iBAAkBA,GAClBkB,cAAe,CAAEa,QAASpM,EAAMsP,gBAChC9D,SAAU,SAACC,GAAD,OA/MQ,SAACW,GAC3B,GAAIpM,EAAM+B,WACR,IACEkB,EAAA,6BAAoBjD,EAAM+B,YAA1B,IAAsCqK,QAASA,KAC/C,MAAOmD,GACPC,QAAQC,IAAIF,QAGd5K,OAAO+K,aAAaC,QAAQ,UAAWvD,GAGzCK,IACAzM,EAAM4P,WAAWxD,GAGjB,IAAMyD,EAAa,CACjBC,OAAQ,CACNxJ,KAAM,KACNhD,MAAO,KACPoF,KAAM,WACNuG,QAASjP,EAAMuO,UAAUC,UAG7BxO,EAAMsO,uBAAuBuB,GAwLCE,CAAoBtE,EAAOW,UAHnD,SAKG,gBAAGxB,EAAH,EAAGA,aAAH,OACC,eAAC7C,GAAA,EAAD,CAAM6D,YAAU,EAACJ,SAAUZ,EAA3B,UACE,cAAC,GAAD,CACElC,KAAK,SACLpC,KAAK,UACL/F,UAAU,aACVyP,WAAS,EACTC,QAAS,SAAC5B,GACRA,EAAEyB,OAAOI,UAEXC,WAAY,SAAC9B,GACG,UAAVA,EAAE+B,KACJxF,KAGJnD,kBACE,cAACU,GAAA,EAAW6E,QAAZ,UACE,cAAC7E,GAAA,EAAW8E,KAAZ,oBAKN,cAACpN,EAAD,CACE6I,KAAK,SAGL1D,QAAQ,YACRzE,UAAU,wBALZ,iC,mBC/HD8P,OA/Hf,SAA2BrQ,GACzB,MAAkC2C,oBAAS,GAA3C,mBAAO4J,EAAP,KAAkBC,EAAlB,KACA,EAA4C7J,mBAAS,GAArD,mBAAO2N,EAAP,KAAuBC,EAAvB,KAOM9D,EAAmB,WACvBD,GAAa,IAGf,OACE,qCACE,8CAEA,eAAC1D,GAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,eAAC8C,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKvE,GAAI,EAAT,SACE,qDAEF,eAACuE,GAAA,EAAD,CAAKvE,GAAI,EAAGhH,UAAU,aAAtB,eACKP,EAAM6M,QAAQK,MAAMsD,QAAQ,SAIlCxQ,EAAM6M,QAAQW,OAAOC,KAAI,SAACC,EAAQC,GACjC,OAAOD,EAAO+C,WAAWC,OACvB,eAAC7E,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKvE,GAAI,EAAT,SACE,kCACW,IAARoG,EAAY,OAAZ,UAAwBD,EAAOpH,KAA/B,MADH,oBAIF,eAACwF,GAAA,EAAD,CAAKvE,GAAI,EAAGhH,UAAU,aAAtB,gBACM,IACJ,cAACwN,GAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAAEtH,KAAM,EAAGuH,KAAM,GACxBC,QAAS,cAACC,GAAA,EAAD,mBAHX,SAKE,cAACvO,EAAD,CACE+F,KAAK,KACLZ,QAAQ,OACRzE,UAAU,OACVuF,QAAS,kBA1CF+I,EA0CwBnB,EAAOC,IAzCtD4C,EAAkB1B,QAClBrC,GAAa,GAFS,IAACqC,GAsCT,SAMG7O,EAAM2Q,uBAAuBjD,EAAO+C,YAAYD,QAAQ,YAnBvD7C,GAwBR,QAGN,cAAChF,GAAD,CAAWpI,UAAU,SAErB,eAACsL,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKvE,GAAI,EAAT,SACE,qDAEF,eAACuE,GAAA,EAAD,CAAKvL,UAAU,aAAagH,GAAI,EAAhC,eACKvH,EAAM6M,QAAQ+D,YAAYJ,QAAQ,SAIzC,cAAC7H,GAAD,CAAWpI,UAAU,cAErB,eAACsL,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKvE,GAAI,EAAT,SACGvH,EAAM6M,QAAQgE,WAAWC,QAAzB,kBACc9Q,EAAM6M,QAAQU,MAD5B,KAEG,cAEN,cAACzB,GAAA,EAAD,CAAKvL,UAAU,aAAf,SACE,oCAAOwQ,KAAKC,IAAIhR,EAAM6M,QAAQgE,WAAWnC,QAAQ8B,QAAQ,cAM/D,eAACtE,GAAD,CAAavF,KAAM4F,EAAW2C,OAAQzC,EAAkB7G,KAAK,KAA7D,UACE,cAACsG,GAAYiD,OAAb,CAAoBC,aAAW,EAA/B,SACE,eAAClD,GAAYmD,MAAb,WACGrP,EAAM6M,QAAQW,OAAO8C,GAAgBhK,KADxC,qBAIF,cAAC4F,GAAYjB,KAAb,UACE,cAACgG,GAAA,EAAD,CAAWjM,QAAQ,QAAnB,SACGhF,EAAM6M,QAAQW,OAAO8C,GAAgBG,WAAWhD,KAC/C,SAACyD,EAAMvD,GAAP,OACE,cAACsD,GAAA,EAAUpL,KAAX,CAA0BsL,QAAM,EAAhC,SACE,qCACKD,EAAKxC,OAAO8B,QAAQ,GAAI,IAC1BU,EAAK1C,QACJ,sBAAM4C,MAAO,CAAEC,MAAO,QAAtB,iBACE,KAAM,IACTH,EAAKvC,SAAW,KAAOuC,EAAKvC,SAAW,KAAM,IAC9C,cAACvO,EAAD,CACEM,SAAO,EACPH,UAAU,cACVuF,QAAS,kBACP9F,EAAMsR,kBACJtR,EAAM6M,QAAQW,OAAO8C,GAAgB3C,IACrCA,IANN,SAUE,cAAC,IAAD,UAjBeA,UAyB7B,cAACzB,GAAYqF,OAAb,UACE,cAAC1R,EAAD,CAAcmF,QAAQ,YAAYc,QAAS2G,EAA3C,2BCiMK+E,GArTIC,sBAAW,SAACzR,EAAO0R,GACpC,IAAMpN,EAAeD,qBAAWE,KAE1BoN,EAAsB,CAC1B9P,GAAI,EACJiL,aAAc,GACdC,UAAW,GACXG,MAAO,EACP0D,YAAa,EACbrD,MAAOvN,EAAMsC,kBAAkBkL,OAAO,GAAGlH,KACzCuK,WAAY,CAAEnC,OAAQ,GACtBlB,OAAQxN,EAAMsC,kBAAkBkL,OAAOC,KAAI,SAACC,GAAD,MAAa,CACtDC,IAAKD,EAAOC,IACZrH,KAAMoH,EAAOpH,KACboI,OAAQ,EACRkD,QAAwB,IAAflE,EAAOC,IAChB8C,WAAY,QAIhB,EAA8B9N,mBAASgP,GAAvC,mBAAO9E,EAAP,KAAgBgF,EAAhB,KACA,EAA8BlP,mBAAS,MAAvC,mBAAOyJ,EAAP,KAAgBwD,EAAhB,KAEMkC,EAAwB,CAC5BjQ,GAAI,KACJ6M,OAAQ,EACRD,cAAe,EACfE,SAAU,GACVE,UAAW,EACXL,SAAS,GAGX,EAAkC7L,mBAASmP,GAA3C,mBAAOvD,EAAP,KAAkBwD,EAAlB,KAOA,SAASpB,EAAuBqB,GAC9B,OAAOA,EAAKC,QACV,SAACC,EAAKhB,GAAN,OACQ,EAANgB,EAA8D,GAAnDhB,EAAK1C,QAAU0C,EAAKzC,cAAgByC,EAAKxC,UACtD,GAIJ,SAASyD,EAAqBC,GAM5B,IAJA,IAAIC,EAAgBD,EAAmB5E,OACnC8E,EAAaF,EAAmBlF,MAC9BqF,EAAYH,EAAmB5E,OAAOkD,OAEnC8B,EAAI,EAAGA,EAAID,EAAWC,IAAK,CAClC,IAAI9E,EAAS2E,EAAcG,GAI3BH,EAAcG,GAAG9D,OAAShB,EAAOkE,QAAUQ,EAAmBlF,MAAQ,EAGtE,IAAMuF,EAAuB9B,EAAuBjD,EAAO+C,YAC3D4B,EAAcG,GAAG9D,QAAU,EAAI+D,EAC/BH,GAAc,EAAIG,EAGpB,IAAMC,EAAmBJ,EAAaC,EAItC,IAAKC,EAAI,EAAGA,EAAID,EAAWC,IACzBH,EAAcG,GAAG9D,SAAW,EAAIgE,GAAkBlC,QAAQ,GAI5D,IAAMmC,EAAaN,EAAc,GAAG3D,OAChCkE,EAAcD,EAAa,EAW/B,MAAO,CACL/B,YAAa0B,EACb9E,OAAQ6E,EACRxB,WAbiB,CACjB9F,QAAS6H,EAAW,kBACLR,EAAmB7E,MADd,aACwBwD,KAAKC,IAAI2B,GAAYnC,QAC3D,IAFc,oBAIHO,KAAKC,IAAI2B,GAAYnC,QAAQ,IAC9C9B,OAAQqC,KAAKC,IAAI2B,GAAYnC,QAAQ,GACrCM,QAAS8B,IA8Cb,SAASC,EAAYvP,GACnB,IAAIwP,EACFxP,EAAMyP,QAAQ,MAAQ,EAClBzP,EAAM0P,OAAO,EAAG1P,EAAMyP,QAAQ,MAC9BzP,EAAM0P,OAAO1P,EAAMyP,QAAQ,KAAM,GACjCzP,EAQN,OALEwP,GADEA,EAAiB,GACA,EAED,EA2BtB,SAASG,EAAkBC,GACzBrB,GAAW,SAACsB,GAEV,IADA,IAAId,EAAa,aAAOc,EAAY3F,QAC3BgF,EAAI,EAAGA,EAAIH,EAAc3B,OAAQ8B,IACxCH,EAAcG,GAAGZ,QAAUY,IAAMU,EAAevF,IAGlD,OAAO,6BACFwF,GADL,IAEE5F,MAAO2F,EAAe5M,KACtBkH,OAAQ6E,OA/Ide,8BAAoB1B,GAAK,iBAAO,CAC9BS,qBAAsBA,MA2DxB/O,qBAAU,WACR,IAAMiQ,EAAsBlB,EAAqBtF,GACjDgF,GAAW,SAACsB,GACV,OAAO,6BACFA,GACAE,QAIN,CACDxG,EAAQK,MACRL,EAAQ4D,WACR5D,EAAQU,MAER+F,KAAKC,UAAU1G,EAAQW,UAIzBpK,qBAAU,WACRyO,GAAW,SAACsB,GAEV,IADA,IAAId,EAAa,aAAOc,EAAY3F,QAC3BgF,EAAI,EAAGA,EAAIH,EAAc3B,OAAQ8B,IACxCH,EAAcG,GAAGlM,KAAOtG,EAAMsC,kBAAkBkL,OAAOgF,GAAGlM,KAGxD+L,EAAcG,GAAGZ,SACjBS,EAAcG,GAAGlM,OAAS6M,EAAY5F,OAEtC0F,EAAkBZ,EAAcG,IAGpC,OAAO,6BAAKW,GAAZ,IAAyB3F,OAAQ6E,SAGlC,CAACiB,KAAKC,UAAUvT,EAAMsC,kBAAkBkL,UA+H3C,IAAQzL,EAAesC,qBAAW7B,GAA1BT,WAWR,OARAqB,qBAAU,YACR,OAAIrB,QAAJ,IAAIA,OAAJ,EAAIA,EAAYqK,SACdwD,EAAW7N,EAAWqK,SACbzH,OAAO+K,aAAa8D,QAAQ,YACrC5D,EAAWjL,OAAO+K,aAAa8D,QAAQ,cAExC,CAACzR,IAGF,eAACgG,GAAA,EAAD,CACEyD,SAAU,SAACmB,GACT3M,EAAMyT,MAAM5G,GACZF,EAAM+G,iBACN7B,EAAWF,IAJf,UAOE,+CACA,uBACA,cAAC,GAAD,CACE9E,QAASA,EACT0B,UAAWA,EACX3B,cApIN,SAA2BD,GACzB,MAA8BA,EAAMmD,OAA5BxJ,EAAR,EAAQA,KAAMhD,EAAd,EAAcA,MAAOoF,EAArB,EAAqBA,KAErBmJ,GAAW,SAAC8B,GAEV,MAAa,WAATjL,EAEK,6BACFiL,GADL,mBAEGrN,EAAOuM,EAAYvP,KAKf,6BAAKqQ,GAAZ,mBAAwBrN,EAAOhD,QAuH/BwK,cAAemF,EACf3E,uBAvEN,SAAoC3B,GAA8B,IAAvBiH,EAAsB,uDAAN,KACzD7B,GAAa,SAAC8B,GAEZ,GAAID,EACF,OAAO,6BACFC,GADL,IAEEhF,UAAW+E,EAAcjG,MAI7B,MAAuChB,EAAMmD,OAArCxJ,EAAR,EAAQA,KAAMhD,EAAd,EAAcA,MAAOoF,EAArB,EAAqBA,KAAMuG,EAA3B,EAA2BA,QAE3B,GAAa,WAATvG,EAAmB,CACrB,IAAIgG,EAAS,EACTD,EAAgB,EAWpB,OARIoF,EAAcrF,QAEhBE,IADAD,EAAgBoE,EAAYvP,KACD8I,EAAU,IAAM,IAAIoE,QAAQ,GAGvD/B,IADAC,EAASmE,EAAYvP,KACM8I,EAAU,IAAM,IAAIoE,QAAQ,GAGlD,6BACFqD,GADL,IAEEnF,OAAQA,EACRD,cAAeA,IAEZ,GAAa,aAAT/F,EAAqB,CAC9B,IAAM+F,EAAqBoF,EAAcnF,QAAUtC,EAAU,IAAM,GAA7C,EAEtB,OAAO,6BACFyH,GADL,IAEEpF,cAAeA,EAAc+B,QAAQ,GACrChC,QAASS,IAGX,OAAO,6BAAK4E,GAAZ,mBAA4BvN,EAAOhD,QAiCnCwL,eAnGN,WACE+C,GAAW,SAACsB,GACV,IAAId,EAAa,aAAOc,EAAY3F,QAEpC,OADA6E,EAAc9D,EAAUM,WAAW4B,WAAW5F,KAAK0D,GAC5C,6BAAK4E,GAAZ,IAAyB3F,OAAQ6E,OAGnCN,EAAaD,IA6FTxC,eAAgBlD,EAChBwD,WAAYA,EACZ7N,WAAYA,IAGd,uBAEA,cAAC,GAAD,CACE8K,QAASA,EACT8D,uBAAwBA,EACxBW,kBAnGN,SAA+BzC,EAAWiF,GACxCjC,GAAW,SAACsB,GACV,IAAId,EAAa,aAAOc,EAAY3F,QAOpC,OANA6E,EAAcxD,GAAW4B,WAAa4B,EACpCxD,GACA4B,WAAWsD,QAAO,SAACC,EAAKrG,GACxB,OAAOA,IAAQmG,KAGV,6BAAKX,GAAZ,IAAyB3F,OAAQ6E,OAGnCN,EAAaD,MA2FX,cAACjS,EAAD,CACEmF,QAASV,EAAagJ,aACtB5E,KAAK,SACLwC,OAAK,EACL3K,UAAU,OAJZ,uB,iGChRS0T,OApCf,SAAsBjU,GACpB,IAAMsE,EAAeD,qBAAWE,KA2BhC,OAAOvE,EAAMsC,kBAAkB4R,SAASxD,OACtC,gCACE,gDA3BJ,SAA8B1Q,GAE5B,GAA8C,IAA1CA,EAAMsC,kBAAkBkL,OAAOkD,OAAc,CAC/C,IAAIyD,EAAOnU,EAAMsC,kBAAkBkL,OAAO,GACtC4G,EAAcpU,EAAMsC,kBAAkBkL,OAAO,GAEjD,OAAI2G,EAAKE,YAAc,EAEnB,qBAAIjD,MAAO,CAAEC,MAAO/M,EAAagQ,gBAAjC,UACGF,EAAY9N,KADf,cAEGyK,KAAKC,IAAIoD,EAAYC,aAAa7D,QAAQ,MAGtC4D,EAAYC,YAAc,EAEjC,qBAAIjD,MAAO,CAAEC,MAAO/M,EAAaiQ,iBAAjC,qBACWH,EAAY9N,KADvB,KAC+ByK,KAAKC,IAAImD,EAAKE,aAAa7D,QAAQ,MAK/D,MAONgE,CAAqBxU,MAEtB,M,qBCpCS,OAA0B,wC,qBCoI1ByU,OA5Hf,SAA2BzU,GACzB,IAAMsE,EAAeD,qBAAWE,KAEhC,SAASmQ,EAAmBC,GAC1B,OAAOA,EAAU,KAAOC,WAAWD,GAASnE,QAAQ,GAAK,GAG3D,IAAMqE,EAAY,CAChBC,WAAY,SACZC,aAAc,WACdC,SAAU,UAGZ,MAAO,CACL,CACEC,UAAW,eACXxU,KAAM,OACNiI,KAAM,OACNwM,SAAUlV,EAAMmV,SAChB/D,MAAOyD,EACPO,MAAM,EACNC,UAAW,SAACC,GACV,IAAIC,EAAUD,EAId,MAHoB,kBAATA,IACTC,EAAU,IAAIC,KAAKF,IAEf,GAAN,QAAW,KAAOC,EAAQE,cAAgB,IAAIC,OAAO,GAArD,aACE,IAAMH,EAAQI,cACdD,OAAO,GAFT,YAEeH,EAAQK,mBAEzBC,aAAc,SAACP,GACb,IAAIC,EAAUD,EAId,MAHoB,kBAATA,IACTC,EAAU,IAAIC,KAAKF,IAEf,GAAN,QAAW,KAAOC,EAAQE,cAAgB,IAAIC,OAAO,GAArD,aACE,IAAMH,EAAQI,cACdD,OAAO,GAFT,YAEeH,EAAQK,mBAEzBE,OAAQ,CACNpN,KAAMqN,QAAKC,OAGf,CACEf,UAAW,YACXxU,KAAM,OACN2Q,MAAOyD,EACPO,MAAM,EACNF,SAAUlV,EAAMmV,UAElB,CACEF,UAAW,QACXxU,KAAM,QACN2Q,MAAOyD,EACPO,MAAM,EACNF,UAAU,GAEZ,CACED,UAAW,QACXxU,KAAM,gBACNiI,KAAM,SACN0M,MAAM,EACNF,SAAUlV,EAAMmV,SAChB/D,MAAOyD,EACPQ,UAAW,SAACY,GACV,OAAOvB,EAAmBuB,IAE5BJ,aAAc,SAACI,GACb,OAAOvB,EAAmBuB,IAE5BC,QAASC,QAEX,CACElB,UAAW,qBACXxU,KAAM,aACN2U,MAAM,EACNF,UAAU,EACV9D,MAAO,SAAkBkE,EAAMc,EAAKC,EAAUC,GAC5C,MAAO,CACLxB,WAAY,SACZyB,SAAU,aACVlF,MAAO+E,EAAIvF,WAAWC,QAClBxM,EAAaiQ,gBACbjQ,EAAagQ,kBAIvB,CACEW,UAAW,KACXxU,KAAM,GACN+V,MAAO,SACPtB,UAAU,EACVuB,YAAY,EACZC,YAAa,SAACC,EAAOL,GACnB,MAAO,CAAE/Q,MAAO,OAElBqR,gBAAiB5W,EAAMmV,SACvBE,UAAW,SAACY,EAAaG,EAAKS,EAAOC,GACnC,OAAOA,EACL,qBAAKvW,UAAU,cAAf,SAOE,cAACH,EAAD,CACEM,SAAO,EACPH,UAAU,gBACVuF,QAAS,kBAAM9F,EAAM+W,gBAAgBX,EAAIvU,KAH3C,SAKE,cAAC,IAAD,QAGF,MAENqU,QAASC,OACTN,aAAc,SAACI,GACb,MAAO,O,UCjHT5L,GAAmBC,KAAW,CAClCkD,OAAQlD,OAAY0M,GAClB1M,KAAW,CACThE,KAAMgE,OAEHC,IAAI,GAAI,iCACRC,SAAS,iBAuGHyM,OAlGf,SAAyBjX,GACvB,OACE,eAACkM,GAAD,CAAavF,KAAM3G,EAAMuM,UAAW2C,OAAQlP,EAAMkX,aAActR,KAAK,KAArE,UACE,cAACsG,GAAYiD,OAAb,CAAoBC,aAAW,EAA/B,SACE,cAAClD,GAAYmD,MAAb,CAAmBvI,GAAI,KAAvB,6BAEF,cAACoF,GAAYjB,KAAb,UACE,cAAC,KAAD,CACEM,cAAe,CAAEiC,OAAQxN,EAAMsC,kBAAkBkL,QACjDnD,iBAAkBA,GAClBmB,SAAU,SAACC,GACTzL,EAAMmX,eAAe1L,EAAO+B,QAC5BxN,EAAMkX,gBALV,SAQG,gBAAGtM,EAAH,EAAGA,aAAca,EAAjB,EAAiBA,OAAjB,OACC,eAAC1D,GAAA,EAAD,CAAM6D,YAAU,EAAhB,UACE,cAAC,KAAD,CAAYtF,KAAK,SAAjB,SACG,gBAAG8Q,EAAH,EAAGA,OAAQvM,EAAX,EAAWA,KAAX,OACC,gCACGY,EAAO+B,OAAOC,KAAI,SAACC,EAAQC,GAAT,OACjB,cAACsD,GAAA,EAAD,CAAWjM,QAAQ,QAAnB,SACE,cAACiM,GAAA,EAAUpL,KAAX,CAAgBtF,UAAU,OAA1B,SACE,eAACwH,GAAA,EAAK8D,IAAN,WACE,cAAC,GAAD,CACEmE,WAAS,EACTlJ,GAAIgF,KACJxE,GAAI,GACJhB,KAAI,iBAAYqH,EAAZ,SACJsC,QAAS,SAAC5B,GACRA,EAAEyB,OAAOI,UAEXC,WAAY,SAAC9B,GACG,UAAVA,EAAE+B,KACJxF,OAMN,cAACkB,GAAA,EAAD,CAAKxE,GAAI,EAAT,WACKtH,EAAM6B,IACN7B,EAAMqX,oBACPrX,EAAMmV,WACJ,sBAAK5U,UAAU,kBAAf,UACW,IAARoN,GACC,mBAAGpN,UAAU,uBAAb,mBAEDoN,GAAO,GACN,cAACvN,EAAD,CACEM,SAAO,EACPoF,QAAS,WACPsR,EAAOzJ,IAHX,SAME,cAAC,IAAD,iBAlCcA,MA6ClC,cAAC9N,EAAD,CACEqL,OAAK,EACLlG,QAAQ,OACRc,QAAS,WACP+E,EAAK,CACH8C,IAAK2J,eACLhR,KAAM,GACN+N,YAAa,KAPnB,sCAgBN,cAACxU,EAAD,CACE6I,KAAK,SACL5C,QAAS8E,EACT5F,QAAQ,YACRzE,UAAU,wBAJZ,8BCyJCgX,OA3Of,SAAuBvX,GACrB,IAAMsE,EAAeD,qBAAWE,KACxBxC,EAAesC,qBAAW7B,GAA1BT,WACFiI,EAAUC,eAEVoN,EACJtV,GACAA,EAAWyV,cACXzV,EAAWyV,aAAaC,SAASzX,EAAMsC,kBAAkBC,KAGrDmV,EAAUjD,GAAkBzU,GAC5B2X,EAAoBpO,mBAClBqO,EAAcC,UAAdD,UACFE,EAAkB,SAAC9X,GAIvB,OACE,cAACH,EAAD,CAAcU,UAAU,SAASyE,QAAQ,OAAOc,QAJ9B,WAClB9F,EAAM+X,YAGN,SACE,sBAAKxX,UAAU,4BAAf,UACE,cAAC,IAAD,CAAWA,UAAU,SADvB,oBAMAyX,EAAWC,KAAgB,CAC/BC,KAAM,QACNC,YAAY,EACZC,cAAe,SAACC,EAAUC,EAAUlC,GAClCpW,EAAMuY,cAAcnC,MAKxB,EAAkCzT,oBAAS,GAA3C,mBAAO6V,EAAP,KAAkBC,EAAlB,KAEA,SAASC,IACPD,GAAa,SAACE,GAAD,OAAoBA,KAInC,MAA8ChW,oBAAS,GAAvD,mBAAOiW,EAAP,KAAwBC,EAAxB,KAEA,SAASC,EAAsBjK,GAC7BgK,GAAmB,GAMrB,OACE,qCACE,cAAC,KAAD,CACEE,SAAS,KACTC,YAAY,EACZ7V,KAAMnD,EAAMsC,kBAAkB4R,SAC9BwD,QAASA,EACTuB,UAAW,CACTC,SAAUlZ,EAAMsC,kBAAkB4D,MAAQ,OAC1CiT,cAAc,GAEhBC,QAAM,EATR,SAWG,SAACC,GAAD,OACC,qBAAK3H,IAAKiG,EAAV,SACE,eAAC7O,GAAA,EAAD,CAAWC,OAAK,EAACxI,UAAU,OAA3B,UAEE,eAACsL,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKxE,GAAI,GAAIgS,GAAI,EAAjB,SACE,qBAAK/Y,UAAU,gBAAf,SAEGiY,EACC,cAAC,KAAD,CACEe,eAAgB,SAAClL,GACfrO,EAAMwZ,0BACNf,GAAa,IAHjB,SAME,cAAC1Q,GAAA,EAAKC,MAAN,UACE,cAACD,GAAA,EAAKK,QAAN,CACE4H,WAAS,EACTyJ,aAAczZ,EAAMsC,kBAAkB4D,MACtCwG,SAAU,SAAC2B,GAAD,OAAOrO,EAAM0Z,uBAAuBrL,IAC9C8B,WAAY,SAAC9B,GACG,UAAVA,EAAE+B,MACJpQ,EAAMwZ,0BACNd,MAGJzI,QAAS,SAAC5B,GACRA,EAAEyB,OAAOI,gBAMjB,qCACE,oBACEpK,QAAS,WACH9F,EAAMmV,UAAUuD,KAFxB,SAKG1Y,EAAMsC,kBAAkB4D,QAE1BlG,EAAMmV,UACL,cAAC/U,EAAD,CACE0F,QAAS4S,EACTnY,UAAU,gBAFZ,SAIE,cAAC,KAAD,CAAQA,UAAU,kBAO9B,cAACuL,GAAA,EAAD,CAAKxE,GAAI,GAAIgS,GAAI,EAAjB,SAGGjC,IAAuBrX,EAAMmV,UAC5B,qBAAK5U,UAAU,cAAf,SACE,cAACV,EAAD,CACEmF,QAASV,EAAagJ,aACtB/M,UAAU,gBACVqF,KAAK,KACLE,QAAS,WACPkE,EAAQa,KAAR,uBACkB7K,EAAMsC,kBAAkBC,IAD1C,WALJ,SAUE,sBAAKhC,UAAU,4BAAf,UACE,cAAC,KAAD,CAAQA,UAAU,SADpB,oBASV,cAACsL,GAAA,EAAD,CAAKtL,UAAU,YAAf,SACE,cAACuL,GAAA,EAAD,CAAKxE,GAAI,GAAIgS,GAAI,EAAjB,SACE,cAACzZ,EAAD,CACEU,UAAU,mBACVyE,QAAQ,OACRc,QAASgT,EAHX,SAKE,sBAAKvY,UAAU,4BAAf,UACE,cAAC,KAAD,CAAkBA,UAAU,SAAU,IACrCP,EAAMsC,kBAAkBkL,OAAOkD,OAFlC,mBAQN,eAAC7E,GAAA,EAAD,CAAKtL,UAAU,qBAAf,UACE,cAACuL,GAAA,EAAD,CAAKxE,GAAI,GAAIgS,GAAI,EAAjB,SACE,qBAAK/Y,UAAU,cAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAACqX,EAAD,cACErX,UAAU,mBACN8Y,EAAaM,oBAKzB,cAAC7N,GAAA,EAAD,CAAKxE,GAAI,GAAIgS,GAAI,EAAjB,SACE,sBAAK/Y,UAAU,cAAf,UACE,cAACuX,EAAD,gBAAqBuB,EAAaO,WAClC,cAAC,KAAD,CACEC,QAAS,kBACP,cAACha,EAAD,CAAc+F,KAAK,KAAKZ,QAAQ,OAAhC,SACE,sBAAKzE,UAAU,4BAAf,UACE,cAAC,IAAD,CAASA,UAAU,SADrB,eAKJoU,QAAS,kBAAMgD,EAAkBjO,SACjCoQ,cAAe9Z,EAAMsC,kBAAkB4D,gBAK/C,cAAC2F,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAAC,KAAD,6BACMuN,EAAaU,WADnB,IAEE/B,SAAUA,EACVgC,UAAU,EACVC,WAAS,EACTC,iBAAkB,kBAChB,gCACE,oBAAI3Z,UAAU,OAAd,SACG8Y,EAAaM,YAAYQ,WACtB,oBACAna,EAAMmV,SACN,0BACA,yBAEN,qBACE5U,UAAU,uBACV8E,IAAK+U,GACL7U,MAAM,MACNC,OAAO,MACPJ,IAAI,4BAOhB,cAACyG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,8BACE,cAAC,GAAD,CAAcxJ,kBAAmBtC,EAAMsC,kCAUrD,cAAC+X,GAAD,6BACMra,GADN,IAEEuM,UAAWqM,EACXvB,mBAAoBA,EACpBH,aAtLN,WACE2B,GAAmB,W,UCtEVyB,GAAgB,WAC3B,OACE,qBAAK/Z,UAAU,wDAAf,SACE,cAACga,GAAA,EAAD,CAASC,UAAU,OAAOxV,QAAQ,eCqZzByV,OAzYf,SAAcza,GACZ,MAIIqE,qBAAW7B,GAHbT,EADF,EACEA,WACAc,EAFF,EAEEA,kBACAE,EAHF,EAGEA,2BAGI2X,EAA2BC,mBAAQ,WACvC,MAAO,CACLzU,MAAO,WACP3D,IAAK,KACL2R,SAAU,GACV1G,OAAQ,CACN,CACEG,IAAK,EACLrH,KAAM,KACN+N,YAAa,GAEf,CACE1G,IAAK,EACLrH,KAAM,SACN+N,YAAa,OAIlB,IAEH,EZ/BK,SAA0BuG,GAC/B,MAA0BjY,mBAASiY,GAAnC,mBAAO3T,EAAP,KAAc4T,EAAd,KACMC,EAAQvR,iBAAO,MAEfwR,EAAmBC,uBAAY,SAAC/T,EAAOgU,GAC3CH,EAAMpR,QAAUuR,EAChBJ,EAAS5T,KACR,IAUH,OARA7D,qBAAU,WAEJ0X,EAAMpR,UACRoR,EAAMpR,QAAQzC,GACd6T,EAAMpR,QAAU,QAEjB,CAACzC,IAEG,CAACA,EAAO8T,GYcmCG,CAChDR,GADF,mBAAOpY,EAAP,KAA0B6Y,EAA1B,KAGMC,EZ5CD,SAAqB9X,GAC1B,IAAMoO,EAAMnI,mBAIZ,OAHAnG,qBAAU,WACRsO,EAAIhI,QAAUpG,KAEToO,EAAIhI,QYuCO2R,CAAY,CAAE/Y,sBAChC,EAAkCK,oBAAS,GAA3C,mBAAO2Y,EAAP,KAAkBC,EAAlB,KACA,EAAgC5Y,oBAAS,GAAzC,mBAAOwS,EAAP,KAAiBqG,EAAjB,KACA,EAAwC7Y,qBAAxC,mBAAOwH,EAAP,KAAqBC,EAArB,KACMqR,EAAgBlS,mBACd1H,EAAO6Z,eAAP7Z,GACFmI,EAAUC,eApCG,4CAuQnB,8BAAAjH,EAAA,+EAEUC,EAAsBX,GAFhC,uBAIUS,IAJV,OAKIiH,EAAQa,KAAR,gBAAsB9I,EAAWQ,MALrC,iDAOI,UAAI,KAAIuI,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,SACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SAElCX,EAAgB,iCAVtB,0DAvQmB,+BAuRJuR,EAvRI,8EAuRnB,WAAuCC,GAAvC,iBAAA5Y,EAAA,+EAEUC,EAAsB2Y,GAFhC,uDAII,UAAI,KAAI9Q,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,SACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SAElCX,EAAgB,iCAPtB,yDAvRmB,sBAuTnB,OAjRAhH,qBAAU,WAAM,4CACd,WAAoCvB,GAApC,eAAAmB,EAAA,+EAEsBC,EAAmBpB,GAFzC,QAEUqB,EAFV,QAGYC,MACNgY,EAAqBjY,EAAIC,MAJ/B,gDAOI6G,EAAQa,KAAK,cAPjB,0DADc,sBAgBe,IAAD,EAJxBhJ,GAZW,SAAD,2BAaZga,CAAqBha,IAEyB,IAA1C8C,OAAOC,SAASC,KAAKkO,QAAQ,QAC1BlQ,KAGH,OACEd,QADF,IACEA,GADF,UACEA,EAAYyV,oBADd,aACE,EAA0BsE,MACxB,SAACC,GAAD,OAAmBA,IAAkBla,MAGvC2Z,GAAY,GAGZxR,EAAQa,KAAK,WAKjB2Q,GAAY,KAIdL,EAAqBT,GACrBc,GAAY,MAEb,CACD3Z,EACAmI,EACAjI,EACAc,EACA6X,EACA1Q,EAAQpF,SACRuW,IAoOA,mCACGtY,EACC,cAAC,GAAD,IAEA,sCAGId,GAAcuZ,GAAanG,GAC3B,eAAC/J,GAAA,EAAD,CACEpG,QAAQ,OACRqG,QAAS,kBAAMkQ,GAAa,IAC5BjQ,aAAW,EACX/K,UAAU,4BAJZ,UAME,cAAC,KAAD,CAAcA,UAAU,SAN1B,0BAOE,cAAC6K,GAAA,EAAMzF,KAAP,CAAYd,KAAK,SAAStE,UAAU,OAApC,oBAPF,KAWE,cAAC6K,GAAA,EAAMzF,KAAP,CAAYd,KAAK,UAAUtE,UAAU,OAArC,qBAEc,IAbhB,gCAkBD4J,GACC,eAACiB,GAAA,EAAD,CACEpG,QAAQ,SACRsG,aAAW,EACXD,QAAS,kBAAMjB,EAAgB,OAC/B7J,UAAU,4BAJZ,UAME,cAAC,KAAD,CAAkBA,UAAU,SAC3B4J,KAKL,eAAC0B,GAAA,EAAD,WACGsJ,GACC,cAACrJ,GAAA,EAAD,CAAKvE,GAAI,EAAT,SACE,cAAC0B,GAAD,CAAYC,OAAK,EAAjB,SACE,cAAC,GAAD,CACEuK,MA5QlB,SAAoBuI,GAClBb,GACE,SAACc,GACC,IAAMC,EAAeD,EAAY/H,SACjC8H,EAAW9O,MAAQ0H,WAAWoH,EAAW9O,OAAOsD,QAAQ,GACxDwL,EAAWna,GAAKyV,eAGhB,IAAMjF,EAAgB,aAAI4J,EAAYzO,QAAQC,KAAI,SAACC,GACjD,OAAO,6BACFA,GADL,IAEE2G,YACE3G,EAAO2G,YAAc2H,EAAWxO,OAAOE,EAAOC,KAAKe,YAIzD,OAAO,6BACFuN,GADL,IAEE/H,SAAS,GAAD,oBAAMgI,GAAN,CAAoBF,IAC5BxO,OAAQ6E,OAGZ,SAACuJ,GACK/Z,GAAI8Z,EAAwBC,OAsPpBlK,IAAK+J,EACLnZ,kBAAmBA,QAK3B,cAACwJ,GAAA,EAAD,CAAKvE,GAAI4N,GAAY,EAArB,SACE,eAAClM,GAAD,CAAYC,OAAK,EAAC3I,UAAU,OAA5B,UACE,cAAC,GAAD,CACE+B,kBAAmBA,EACnByU,gBAvMhB,SAAuBoF,GACrBhB,GACE,SAACc,GACC,IAAI5J,EAAa,aAAO4J,EAAYzO,QAE9B4O,EAAkB,aAAIH,EAAY/H,UAAUH,QAAO,SAAClH,GAYxD,OAXIsP,IAAetP,EAAQhL,KAEzBwQ,EAAgBA,EAAc5E,KAAI,SAACC,GACjC,OAAO,6BACFA,GADL,IAEE2G,YACE3G,EAAO2G,YAAcxH,EAAQW,OAAOE,EAAOC,KAAKe,aAKjDyN,IAAetP,EAAQhL,MAGhC,OAAO,6BACFoa,GADL,IAEE/H,SAAUkI,EACV5O,OAAQ6E,OAGZ,SAACuJ,GACK/Z,GAAI8Z,EAAwBC,OA6KtBrD,cA3PhB,SAAqByD,GACnBb,GACE,SAACc,GACC,IAAI5J,EAAa,aAAO4J,EAAYzO,QAE9B4O,EAAkB,aAAIH,EAAY/H,UAAUzG,KAAI,SAACZ,GACrD,GAAIA,EAAQhL,KAAOma,EAAWna,GAC5B,OAAOgL,EAITwF,EAAgBA,EAAc5E,KAAI,SAACC,GACjC,OAAO,6BACFA,GADL,IAEE2G,YACE3G,EAAO2G,YAAcxH,EAAQW,OAAOE,EAAOC,KAAKe,YAItD,IAAM2E,EAAsBoI,EAAc/R,QAAQyI,qBAChD6J,GAGF,OAAO,6BACFA,GACA3I,MAaP,OARAhB,EAAgBA,EAAc5E,KAAI,SAACC,GACjC,OAAO,6BACFA,GADL,IAEE2G,YACE3G,EAAO2G,YAAc2H,EAAWxO,OAAOE,EAAOC,KAAKe,YAIlD,6BACFuN,GADL,IAEE/H,SAAUkI,EACV5O,OAAQ6E,OAGZ,SAACuJ,GACK/Z,GAAI8Z,EAAwBC,OA+MtBlC,uBAxKhB,SAA8B/M,GAC5B,IAAMrJ,EAAQqJ,EAAMmD,OAAOxM,MAAQqJ,EAAMmD,OAAOxM,MAAQ,WAExD6X,GAAqB,SAACc,GACpB,OAAO,6BAAKA,GAAZ,IAAyB/V,MAAO5C,QAqKpB6R,SAAUA,EACVgC,eAjKhB,SAAiC9E,GAC/B8I,GAAqB,SAACc,GAGpB,OAFAzM,QAAQC,IAAIwM,EAAYzO,QACxBgC,QAAQC,IAAI4C,GACL,6BACF4J,GADL,IAEEzO,OAAQ6E,QA4JEmH,wBA/EhB,WAGI4B,GACA9H,KAAKC,UAAU6H,EAAU9Y,qBACvBgR,KAAKC,UAAUjR,IAEjB6Y,GACE,SAACc,GACC,OAAO,gBAAKA,MAEd,SAACL,GACK/Z,GAAI8Z,EAAwBC,SAsEzB7Z,IAAeF,GACd,cAAChC,EAAD,CACEI,UAAQ,EACR2F,KAAK,KACLE,QA3XC,2CAwXH,mCCzYH,OAA0B,qCCsB1BuW,OAlBf,WAIE,OAFAjT,GAAiB,4BAGf,sBAAK7I,UAAU,iDAAf,UACE,oBAAIA,UAAU,mBAAd,4BACA,qBACEA,UAAU,uBACV8E,IAAKiX,GACL/W,MAAM,MACNC,OAAO,MACPJ,IAAI,a,8BChBNmX,GAAc,SAACC,GAAD,OAClB,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAQ,IAAIC,MAClBD,EAAME,iBAAiB,QAAQ,kBAAMJ,EAAQE,MAC7CA,EAAME,iBAAiB,SAAS,SAACvU,GAAD,OAAWoU,EAAOpU,MAClDqU,EAAMG,aAAa,cAAe,aAClCH,EAAMvX,IAAMmX,MAGhB,SAASQ,GAAeC,GACtB,OAAQA,EAAclM,KAAKmM,GAAM,IAS5B,SAAeC,GAAtB,qC,8CAAO,WAA+BC,EAAUC,GAAzC,uCAAAra,EAAA,6DAAoDsa,EAApD,+BAA+D,EAA/D,SACef,GAAYa,GAD3B,cACCR,EADD,OAECW,EAAS/T,SAASgU,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAExBC,EAAU5M,KAAKxG,IAAIqS,EAAMrX,MAAOqX,EAAMpX,QACtCoY,EAAiBD,EAAU,EAAK5M,KAAK8M,KAAK,GAA/B,EAIjBN,EAAOhY,MAAQqY,EACfL,EAAO/X,OAASoY,EAGhBH,EAAIK,UAAUF,EAAW,EAAGA,EAAW,GACvCH,EAAIM,OAAOf,GAAeM,IAC1BG,EAAIK,WAAWF,EAAW,GAAIA,EAAW,GAGzCH,EAAIO,UACFpB,EACAgB,EAAW,EAAkB,GAAdhB,EAAMrX,MACrBqY,EAAW,EAAmB,GAAfhB,EAAMpX,QAEjBrC,EAAOsa,EAAIQ,aAAa,EAAG,EAAGL,EAAUA,GAG9CL,EAAOhY,MAAQ8X,EAAU9X,MACzBgY,EAAO/X,OAAS6X,EAAU7X,OAG1BiY,EAAIS,aACF/a,EACA4N,KAAKtK,MAAM,EAAImX,EAAW,EAAkB,GAAdhB,EAAMrX,MAAc8X,EAAUc,GAC5DpN,KAAKtK,MAAM,EAAImX,EAAW,EAAmB,GAAfhB,EAAMpX,OAAe6X,EAAUe,IAlC1D,kBAsCEb,EAAOc,UAAU,eAtCnB,6C,sBAgDA,SAAeC,GAAtB,mC,8CAAO,WAA+BlB,GAA/B,iCAAApa,EAAA,6DAAyCsa,EAAzC,+BAAoD,EAApD,SACef,GAAYa,GAD3B,cACCR,EADD,OAECW,EAAS/T,SAASgU,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAGf,KAAbJ,IACc,KAAdA,GACa,MAAbA,IACc,MAAdA,GAEAC,EAAOhY,MAAQqX,EAAMpX,OACrB+X,EAAO/X,OAASoX,EAAMrX,QAEtBgY,EAAOhY,MAAQqX,EAAMrX,MACrBgY,EAAO/X,OAASoX,EAAMpX,QAGxBiY,EAAIK,UAAUP,EAAOhY,MAAQ,EAAGgY,EAAO/X,OAAS,GAChDiY,EAAIM,OAAQT,EAAWvM,KAAKmM,GAAM,KAClCO,EAAIO,UAAUpB,GAAQA,EAAMrX,MAAQ,GAAIqX,EAAMpX,OAAS,GApBlD,kBAsBE,IAAIiX,SAAQ,SAACC,GAClBa,EAAOgB,QAAO,SAACC,GACb9B,EAAQ+B,IAAIC,gBAAgBF,MAC3B,iBAzBA,6C,sDC1CDhb,GAASC,YAAsB,CACnCC,QAAS,CAACC,IAAWC,IAAcC,IAAgBC,OAG/C6a,GAAuB,CAC3B,EAAK,IACL,EAAK,GACL,GAAM,IAIFtU,GAAmBC,KAAW,CAClC/D,UAAW+D,OAERC,IAAI,GAAI,iCACRC,SAAS,YACZhE,SAAU8D,OAEPC,IAAI,GAAI,iCACRC,SAAS,YACZZ,MAAOU,OAAaV,MAAM,yBAAyBY,SAAS,YAC5DrE,aAAcmE,SAGhB,SAASsU,GAASJ,GAChB,OAAO,IAAI/B,SAAQ,SAACC,GAClB,IAAMmC,EAAS,IAAIC,WACnBD,EAAO/B,iBAAiB,QAAQ,kBAAMJ,EAAQmC,EAAOE,WAAS,GAC9DF,EAAOG,cAAcR,MA2QVS,OAvQf,SAAqBjf,GACnB,IAAMsE,EAAeD,qBAAWE,KAChC,EAAsC5B,qBAAtC,mBAAOuc,EAAP,KAAoBC,EAApB,KACA,EAAwBxc,mBAAS,CAAEwb,EAAG,EAAGC,EAAG,IAA5C,mBAAOgB,EAAP,KAAaC,EAAb,KACA,EAAwB1c,mBAAS,GAAjC,mBAAO2c,EAAP,KAAaC,EAAb,KACA,EAAkD5c,qBAAlD,mBAAO6c,EAAP,KAA0BC,EAA1B,KACA,EAAkC9c,oBAAS,GAA3C,mBAAO4J,EAAP,KAAkBC,EAAlB,KAEA,EAAwC7J,oBAAS,GAAjD,mBAAO6B,EAAP,KAAqBC,EAArB,KAEMib,EAAkBnW,iBAAO,MACzBoW,EAAUpW,mBAEVqW,EAAuB,CAC3BC,OAAQ,YAAcvb,EAAawb,YACnCC,WAAYzb,EAAa6E,KACzBkI,MAAO/M,EAAa7D,KACpBuf,SAAU,WACVC,OAAQ,EACRC,MAAO,EACPC,aAAc,OAGVC,EAAsB,CAC1B7Z,UAAWvG,EAAM+B,WAAWwE,UAC5BC,SAAUxG,EAAM+B,WAAWyE,SAC3BoD,MAAO5J,EAAM+B,WAAW6H,MACxBzD,aAAcnG,EAAM+B,WAAWoE,cAG3Bka,EAAgB,uCAAG,WAAOhS,GAAP,qBAAArL,EAAA,2DACnBqL,EAAEyB,OAAOwQ,OAASjS,EAAEyB,OAAOwQ,MAAM5P,OAAS,GADvB,oBAEf8N,EAAOnQ,EAAEyB,OAAOwQ,MAAM,KACX9B,EAAK5Y,KAAO,KAAO,KAGrB,GANM,gBAOnB5F,EAAMoK,gBAAgB,8CAPH,uCASMwU,GAASJ,GATf,cASf+B,EATe,iBAYOC,0BAAehC,GAZtB,WAYbiC,EAZa,SAabnD,EAAWqB,GAAqB8B,IAbnB,kCAeInC,GAAgBiC,EAAcjD,GAflC,QAejBiD,EAfiB,eAkBnBpB,EAAeoB,GACf/T,GAAa,GAnBM,QAsBrB6B,EAAEyB,OAAOxM,MAAQ,KAtBI,4CAAH,sDA0BhBod,EAAiB1F,uBAAY,SAAC2F,EAAanB,GAC/CC,EAAqBD,KACpB,IAEGoB,EAAkB5F,sBAAW,sBAAC,gCAAAhY,EAAA,+EAELma,GACzB+B,EACAM,GAJ8B,OAE1BqB,EAF0B,OAQhClB,EAAQjW,QAAQoX,cAAc,eAAgBD,GAAc,GAR5B,iDAUhC,UAAI,KAAI/V,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,SACtB/K,EAAMoK,gBAAgB,KAAIU,SAAS3H,KAAK4H,SAExC/K,EAAMoK,gBAAgB,iCAbQ,yDAgBjC,CAACpK,EAAOkf,EAAaM,IAExB,SAAS/S,IACP0S,IACA3S,GAAa,GAGf,OACE,qCACE,cAAC,KAAD,CACEnC,iBAAkBA,GAClBkB,cAAe6U,EACfW,SAAUpB,EACVnU,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAA+B,EAAhBsV,UAClChhB,EAAMihB,yBAAyBxV,GAAQyV,MAAK,WAC1CxV,GAAc,OANpB,SAUG,gBAAGd,EAAH,EAAGA,aAAce,EAAjB,EAAiBA,aAAcF,EAA/B,EAA+BA,OAAQqV,EAAvC,EAAuCA,cAAvC,OACC,eAAC/Y,GAAA,EAAD,CAAM6D,YAAU,EAACJ,SAAUZ,EAA3B,UACE,eAACiB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKxE,GAAI,CAAEjH,KAAM,GAAI8gB,MAAO,GAAK5Z,GAAI,CAAElH,KAAM,EAAG8gB,MAAO,GAAvD,UAEE,cAAC,GAAD,CAAe9Z,MAAM,aAAaf,KAAK,cAGvC,cAAC,GAAD,CAAee,MAAM,YAAYf,KAAK,aAGtC,cAAC,GAAD,CAAee,MAAM,QAAQf,KAAK,aAEpC,cAACwF,GAAA,EAAD,CAAKxE,GAAI,CAAEjH,KAAM,GAAI8gB,MAAO,GAAK5Z,GAAI,CAAElH,KAAM,EAAG8gB,MAAO,GAAvD,SACE,eAACpZ,GAAA,EAAKC,MAAN,WACE,cAACD,GAAA,EAAKE,MAAN,4BACA,sBAAKmJ,MAAO,CAAEgQ,QAAS,OAAQC,eAAgB,UAA/C,UACE,cAAC,GAAD,CACEzb,KAAM,IACNP,IAAKoG,EAAOtF,aACZC,SAAUpG,EAAM+B,WAAWqE,SAC3BC,WAAYrG,EAAM+B,WAAWsE,WAC7BC,KAAI,UAAKtG,EAAM+B,WAAWwE,UAAtB,YAAmCvG,EAAM+B,WAAWyE,UACxDC,OAAO,EACPlG,UAAU,OACV6Q,MAAO,CAAEkQ,KAAM,cAEjB,eAAC1T,GAAA,EAAD,CACEjH,KAAMnC,EACNoC,aAAc,WACZnC,GAAgB,IAElBoC,aAAc,WACZpC,GAAgB,IANpB,UASE,cAACmJ,GAAA,EAAS3I,OAAV,CACEmM,MAAOwO,EACP2B,SAAS,YAFX,SAIE,sBAAKhhB,UAAU,4BAAf,UACE,cAAC,KAAD,CAAQA,UAAU,SADpB,aAKF,eAACqN,GAAA,EAAS4T,KAAV,WACE,cAAC5T,GAAA,EAAS/H,KAAV,CACEC,QAAS,SAACuI,GAGRqR,EAAgBhW,QAAQ+X,SAJ5B,4BASA,cAAC7T,GAAA,EAAS/H,KAAV,CACEC,QAAS,SAACuI,GACRA,EAAEqF,iBAEA/O,OAAO+c,QACL,wDAGFZ,EAAc,eAAgB,MAAM,IAR1C,mCAeF,cAAC/Y,GAAA,EAAK4Z,KAAN,CACEC,OAAO,UACPtb,KAAK,eACLoG,SAAU2T,EACV3O,IAAKgO,EACLmC,QAAM,kBAQlB,cAAChiB,EAAD,CACEI,UAAQ,EACRyI,KAAK,SACLnI,UAAU,OACVqF,KAAK,KACLoG,SAAUL,EALZ,SAOGA,EAAe,aAAe,eAMvC,eAACO,GAAD,CAAavF,KAAM4F,EAAW2C,OAAQzC,EAAtC,UACE,cAACP,GAAYiD,OAAb,CAAoBC,aAAW,EAA/B,SACE,cAAClD,GAAYmD,MAAb,CAAmBvI,GAAI,KAAvB,6CAIF,eAACoF,GAAYjB,KAAb,WACE,qBACEmG,MAAO,CACL4O,SAAU,WACVza,MAAO,OACPC,OAAQ,IACRua,WAAYzb,EAAawb,aAL7B,SAQE,cAAC,KAAD,CACElD,MAAOsC,EACPE,KAAMA,EACNE,KAAMA,EACNwC,OAAQ,EACRC,UAAU,QACVC,UAAU,EACVC,aAAc5C,EACdqB,eAAgBA,EAChBwB,aAAc3C,MAGlB,qBACEnO,MAAO,CACL+Q,QAAS,GACTf,QAAS,OACTgB,cAAe,SACfC,WAAY,WALhB,SAQE,eAACta,GAAA,EAAKC,MAAN,CACElB,GAAI+E,KACJuF,MAAO,CAAEgQ,QAAS,OAAQE,KAAM,IAAKe,WAAY,UAFnD,UAIE,cAACta,GAAA,EAAKE,MAAN,CAAYqa,QAAM,EAAChJ,GAAG,IAAtB,kBAGA,cAACxN,GAAA,EAAD,CAAKwN,GAAG,IAAR,SACE,cAAC,KAAD,CACEhW,MAAOgc,EACPnS,IAAK,EACL5C,IAAK,EACLgY,KAAM,GACN7V,SAAU,SAAC2B,EAAGiR,GAAJ,OAAaC,EAAQD,IAC/BkD,QAAQ,MACRxd,QAAQ,UACRoM,MAAO,CAAE+Q,QAAS,WAAYM,WAAY,aAKlD,cAAC5iB,EAAD,CACEmF,QAAQ,UACRc,QAAS,WACP8a,IACAnU,KAEFvB,OAAK,EANP,4BCvSJb,GAAmBC,KAAW,CAClCoY,gBAAiBpY,OAAaE,SAAS,YACvCmY,YAAarY,OAAaE,SAAS,YACnCoY,mBAAoBtY,OAEjBG,KAAK,kBAAmB,wBAAwB,SAAUnH,GACzD,OAAOoH,KAAKC,OAAOgY,cAAgBrf,OAInCuf,GAAkB,CACtBH,gBAAiB,GACjBC,YAAa,GACbC,mBAAoB,IAgEPE,OA7Df,SAAsB9iB,GACpB,OACE,mCACE,cAAC,KAAD,CACEqK,iBAAkBA,GAClBkB,cAAesX,GACfrX,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAesV,EAAgB,EAAhBA,UAClChhB,EAAM+iB,qBAAqBtX,GAAQyV,MAAK,WACtCxV,GAAc,GACdsV,EAAU6B,QANhB,SAUG,gBAAGjY,EAAH,EAAGA,aAAce,EAAjB,EAAiBA,aAAuBqX,GAAxC,EAA+BC,QAA/B,EAAwCD,QAAQvX,EAAhD,EAAgDA,OAAhD,OACC,eAAC1D,GAAA,EAAD,CAAM6D,YAAU,EAACJ,SAAUZ,EAA3B,UACE,eAAC7C,GAAA,EAAK8D,IAAN,WACE,cAAC,GAAD,CACE/E,GAAIgF,KACJvE,GAAI,EACJF,MAAM,mBACNf,KAAK,kBACLoC,KAAK,aAGP,cAAC,GAAD,CACE5B,GAAIgF,KACJvE,GAAI,EACJF,MAAM,eACNf,KAAK,cACLoC,KAAK,WACLua,SAAUD,EAAOJ,oBAAsBnX,EAAOkX,cAGhD,cAAC,GAAD,CACE7b,GAAIgF,KACJvE,GAAI,EACJF,MAAM,uBACNf,KAAK,qBACLoC,KAAK,WACLua,SACGD,EAAOJ,oBAAsBnX,EAAOmX,wBAM3C,cAAC/iB,EAAD,CACEI,UAAQ,EACRyI,KAAK,SACLnI,UAAU,OACVqF,KAAK,KACLoG,SAAUL,EALZ,SAOGA,EAAe,aAAe,kB,UCoE9BuX,OAhIf,WACE,MAAmD7e,qBAAW7B,GAAtDT,EAAR,EAAQA,WAAYgB,EAApB,EAAoBA,2BACduB,EAAeD,qBAAWE,KAEhC,EAAkC5B,oBAAS,GAA3C,mBAAO4J,EAAP,KAAkBC,EAAlB,KACA,EAAwC7J,qBAAxC,mBAAOwH,EAAP,KAAqBC,EAArB,KACA,EAA0CzH,mBACxC,+BADF,mBAAOmX,EAAP,KAAsBqJ,EAAtB,KANkB,4CAclB,WAAwCC,GAAxC,iBAAApgB,EAAA,+EAEUC,EAAA,6BAAoBlB,GAAeqhB,IAF7C,OAGIrgB,IACAyJ,GAAa,GAJjB,iDAMI,UAAI,KAAI1B,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,UACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SAPxC,0DAdkB,kEA0BlB,WAAoClB,GAApC,iBAAA7G,EAAA,+EAEUC,EAAmB4G,GAF7B,OAGI2C,GAAa,GAHjB,gDAKI,UAAI,KAAI1B,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,UACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SANxC,yDA1BkB,sBAsClB,SAASsY,EAAaC,GACpBH,EAAiB,kBAAD,OAAmBG,IACnClZ,EAAgB,MAIlB,SAASqC,IACPrC,EAAgB,MAChBoC,GAAa,GAGf,SAAS+W,IACP,OAAOpZ,EACL,eAACiB,GAAA,EAAD,CACEpG,QAAQ,SACRqG,QAAS,kBAAMjB,EAAgB,OAC/B7J,UAAU,4BACV+K,aAAW,EAJb,UAME,cAAC,KAAD,CAAkB/K,UAAU,SAC3B4J,KAED,KAGN,OApDAf,GAAiB0Q,GAqDf,qCACE,cAAC7Q,GAAD,CAAYC,OAAK,EAAjB,SACE,cAACsa,GAAA,EAAI1a,UAAL,CAAe2a,iBAAiB,eAAhC,SACE,eAAC5X,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEwN,GAAI,EACJlI,MAAO,CAAEsS,YAAa,YAAcpf,EAAawb,aAFnD,SAIE,eAACpa,EAAA,EAAD,CAAKV,QAAQ,QAAQzE,UAAU,cAA/B,UACE,cAACmF,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAU2d,SAAS,eAAezV,SAAUwV,EAA5C,uBAIF,cAAC3d,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAU2d,SAAS,kBAAkBzV,SAAUwV,EAA/C,6BAMN,cAACvX,GAAA,EAAD,CAAKwN,GAAI,EAAG/Y,UAAU,OAAtB,SACE,eAACijB,GAAA,EAAIG,QAAL,WACE,eAACH,GAAA,EAAII,KAAL,CAAUN,SAAS,eAAnB,UACE,oBAAI/iB,UAAU,OAAd,0BACA,uBACA,cAACgjB,EAAD,IACA,cAAC,GAAD,CACExhB,WAAYA,EACZqI,gBAAiBA,EACjB6W,yBA9FA,iDAiGJ,eAACuC,GAAA,EAAII,KAAL,CAAUN,SAAS,kBAAnB,UACE,oBAAI/iB,UAAU,OAAd,6BACA,uBACA,cAACgjB,EAAD,IACA,cAAC,GAAD,CAAcR,qBArGZ,6DA8Gd,eAAC7W,GAAD,CAAavF,KAAM4F,EAAW2C,OAAQzC,EAAkB7G,KAAK,KAA7D,UACE,cAACsG,GAAYjB,KAAb,UACE,sBAAK1K,UAAU,cAAf,UACE,cAAC,KAAD,CAAaA,UAAU,OAAOqF,KAAM,KAEpC,oBAAIrF,UAAU,YAAd,iDAGJ,cAAC2L,GAAYqF,OAAb,UACE,cAAC1R,EAAD,CAAcmF,QAAQ,YAAYc,QAAS2G,EAA3C,yBCzIK,OAA0B,mCCsR1BoX,OApQf,SAAc7jB,GACZ,IAAQ6B,EAAO6Z,eAAP7Z,GACR,EAAsCc,qBAAtC,mBAAOmhB,EAAP,KAAoBC,EAApB,KACA,EAA0CphB,mBACxC,+BADF,mBAAOmX,EAAP,KAAsBqJ,EAAtB,KAGA,EAA0DxgB,mBAAS,MAAnE,mBAAOqhB,EAAP,KAA8BC,EAA9B,KACA,EAA8BthB,oBAAS,GAAvC,mBAAOuhB,EAAP,KAAgBC,EAAhB,KACA,EAAkCxhB,oBAAS,GAA3C,mBAAO4J,EAAP,KAAkBC,EAAlB,KACA,EAAwC7J,qBAAxC,mBAAOwH,EAAP,KAAqBC,EAArB,KACMJ,EAAUC,eAEhB7G,qBAAU,WAAM,4CACd,WAA6BvB,GAA7B,eAAAmB,EAAA,+EAEsBC,EAAYpB,GAFlC,QAEUqB,EAFV,QAGYC,OACN4gB,EAAe7gB,EAAIC,MACnBggB,EAAiB,GAAD,OACXjgB,EAAIC,KAAKoD,UADE,oCAIlB4d,GAAW,GATf,gDAWIna,EAAQa,KAAK,cAXjB,0DADc,uBAAC,SAAD,2BAgBduZ,CAAcviB,KACb,CAACA,EAAImI,IAGRZ,GAAiB0Q,GAEjB,IAAMrN,EAAmB,WACvBwX,EAAyB,MACzBzX,GAAa,IAYT6X,EAAuB,uCAAG,gCAAArhB,EAAA,0DAC1BghB,EAD0B,wBAGtBM,EAAsBR,EAAYtM,aAGxCuM,GAAe,SAACpQ,GACd,OAAO,6BACFA,GADL,IAEE6D,aAAc8M,EAAoBvQ,QAChC,SAACwQ,GAAD,OAAiBA,EAAYhiB,MAAQyhB,UAVf,kBAiBpB/gB,EAAsB+gB,GAjBF,uDAoB1BD,GAAe,SAACpQ,GACd,OAAO,6BACFA,GADL,IAEE6D,aAAc8M,QAIlB,UAAI,KAAIxZ,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,SACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SAElCX,EAAgB,yCA9BQ,yDAAH,qDAoCrBwN,EAAcC,UAAdD,UAOFF,EAAU,CACd,CAAEzC,UAAW,MAAO4M,OAAQ,QAC5B,CACE5M,UAAW,QACXxU,KAAM,OACN2U,MAAM,EACNC,UAAW,SAACC,EAAMc,GAAP,OACT,cAACvW,EAAD,CAAcU,UAAU,YAAYyE,QAAQ,OAA5C,SACGsQ,KAGLkP,OAAQ,CACN1e,QAAS,SAACuI,EAAGiU,EAAQmC,EAAarO,EAAKC,GACrCrM,EAAQa,KAAK,gBAAkBuL,EAAI7T,QAIzC,CACE0S,UAAW,YACXxU,KAAM,UACNiI,KAAM,OACN0I,MA3Bc,CAChB0D,WAAY,SACZC,aAAc,WACdC,SAAU,UAyBRI,MAAM,EACNC,UAAW,SAACC,GACV,IAAIC,EAAUD,EAId,MAHoB,kBAATA,IACTC,EAAU,IAAIC,KAAKF,IAEf,GAAN,QAAW,KAAOC,EAAQE,cAAgB,IAAIC,OAAO,GAArD,aACE,IAAMH,EAAQI,cACdD,OAAO,GAFT,YAEeH,EAAQK,oBAG3B,CACEX,UAAW,eACXxU,KAAM,GACNikB,cAAc,EACdxP,UAAU,EACVuB,YAAY,EACZD,MAAO,QACPpF,MAAO,CACLuT,aAAc,QAEhBtP,UAAW,SAACY,EAAaG,GACvB,OACE,qCACE,cAAChW,EAAD,CACE0F,QAAS,kBA9FK,SAACjE,GACzBmI,EAAQa,KAAR,uBAA6BhJ,EAA7B,UA6FyB+iB,CAAkBxO,EAAI7T,MACrChC,UAAU,OAFZ,SAIE,cAAC,KAAD,MAEF,cAACH,EAAD,CACEM,SAAO,EACPoF,QAAS,kBA1GG,WAA2B,IAA1BiW,EAAyB,uDAAT,KACnCA,GAAekI,EAAyBlI,GAC5CvP,GAAa,GAwGYqY,CAAgBzO,EAAI7T,MAFrC,SAIE,cAAC,IAAD,YAQZ,OACE,mCACG2hB,EACC,cAAC,GAAD,IAEA,qCAEG/Z,GACC,eAACiB,GAAA,EAAD,CACEpG,QAAQ,SACRqG,QAAS,kBAAMjB,EAAgB,OAC/B7J,UAAU,4BACV+K,aAAW,EAJb,UAME,cAAC,KAAD,CAAkB/K,UAAU,SAC3B4J,KAIL,cAAClB,GAAD,CAAYC,OAAK,EAAjB,SACE,cAAC,KAAD,CACE6P,SAAS,MACTC,YAAY,EACZ7V,KAAM2gB,EAAYtM,aAClBE,QAASA,EACT0B,QAAM,EALR,SAOG,SAACpZ,GAAD,OACC,gCACE,qBAAIO,UAAU,OAAd,UACGujB,EAAYvd,UADf,qBAGA,qBAAKhG,UAAU,mBAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAACqX,EAAD,cACErX,UAAU,mBACNP,EAAM2Z,kBAKhB,cAAC,KAAD,6BACM3Z,EAAM+Z,WADZ,IAEEC,UAAU,EACVC,WAAS,EACTC,iBAAkB,kBAChB,gCACE,oBAAI3Z,UAAU,OAAd,SACGP,EAAM2Z,YAAYQ,WACf,oBACA,+BAEJna,EAAM2Z,YAAYQ,YAClB,cAAC,OAAD,CAAMhV,GAAG,IAAT,SACE,sBAAM5E,UAAU,OAAhB,sCAIJ,qBACEA,UAAU,uBACV8E,IAAKyf,GACLvf,MAAM,MACNC,OAAO,MACPJ,IAAI,6CAUpB,eAAC8G,GAAD,CAAavF,KAAM4F,EAAW2C,OAAQzC,EAAtC,UACE,cAACP,GAAYiD,OAAb,CAAoBC,aAAW,EAA/B,SACE,cAAClD,GAAYmD,MAAb,iCAGF,cAACnD,GAAYjB,KAAb,UACE,gGAKF,eAACiB,GAAYqF,OAAb,WACE,cAAC1R,EAAD,CAAcmF,QAAQ,YAAYc,QAAS2G,EAA3C,oBAGA,cAAC5M,EAAD,CACEmF,QAAQ,SACRc,QAAS,WACPue,IACA5X,KAJJ,gCCrPR9C,GAAkB,CACtBC,MAAO,GACPC,SAAU,IA8LGkb,I,GAAAA,GA3Lf,SAAwB/kB,GACtB,MAA8C2C,mBAAS3C,EAAM+L,iBAA7D,mBAAOA,EAAP,KAAwBiZ,EAAxB,KACA,EAA4BriB,oBAAS,GAArC,mBAAOsiB,EAAP,KAAeC,EAAf,KACA,EAAwCviB,qBAAxC,mBAAOwH,EAAP,KAAqBC,EAArB,KACQ3I,EAAUia,eAAVja,MACFuI,EAAUC,eACV0V,EAAUpW,mBAGV4b,EAASpZ,EACXzB,KAAW,CACTT,SAAUS,OAAaE,SAAS,YAChCV,gBAAiBQ,OAEdG,KAAK,kBAAmB,wBAAwB,SAAUnH,GACzD,OAAOoH,KAAKC,OAAOd,WAAavG,OAGtCgH,KAAW,CACTV,MAAOU,OAAaV,MAAM,yBAAyBY,SAAS,cAsBlE,SAASI,EAAa5J,GAChB+K,EA1CuB,oCA2CzBvK,CAAcR,GA3CW,oCA6CzBO,CAAeP,GA7CU,4CAiD7B,WAA6BA,GAA7B,iBAAAgC,EAAA,+EAEUC,EAAkBjC,EAAUS,GAFtC,OAGIke,EAAQjW,QAAQgC,eAAc,GAC9B1B,EAAQa,KAAR,iBAAuBpJ,EAAvB,UAJJ,iDAMI,UAAI,KAAIqJ,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,UACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SAPxC,0DAjD6B,kEA6D7B,WAA8B/J,GAA9B,iBAAAgC,EAAA,+EAEUC,EAAmBjC,GAF7B,OAGI2e,EAAQjW,QAAQgC,eAAc,GAC9B1B,EAAQa,KAAK,gBAJjB,iDAMI,UAAI,KAAIC,gBAAR,iBAAI,EAAc3H,YAAlB,aAAI,EAAoB4H,UACtBX,EAAgB,KAAIU,SAAS3H,KAAK4H,SAPxC,0DA7D6B,sBAyE7B,OAlDA3H,qBAAU,WACR4hB,EAAmBhlB,EAAM+L,mBACxB,CAAC/L,EAAM+L,kBAGV3I,qBAAU,YACsC,IAA1CuB,OAAOC,SAASC,KAAKkO,QAAQ,QAC/BmS,GAAU,GAEVA,GAAU,KAEX,CAAClb,EAAQpF,WAGZwE,GAAiB,kBAAD,OACI2C,EAAkB,QAAU,SADhC,cAqCd,eAAC/C,GAAD,WACE,cAACgC,GAAA,EAAKC,KAAN,UACE,qBACE1K,UAAU,uBACV8E,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPJ,IAAI,WAKP+E,GACC,eAACiB,GAAA,EAAD,CACEpG,QAAQ,SACRqG,QAAS,kBAAMjB,EAAgB,OAC/B7J,UAAU,4BAHZ,UAKE,cAAC,KAAD,CAAkBA,UAAU,SAC3B4J,KAGL,eAAClB,GAAD,WACGgc,EACC,iDAAoBlZ,EAAkB,WAAa,UAEnD,+BAAKA,EAAkB,QAAU,SAAjC,eAEF,wBACEkZ,IAAWlZ,GACX,mBAAGxL,UAAU,QAAb,0EAKD0kB,EACClZ,EACE,4DAEA,sNAOF,cAAC,KAAD,CACE1B,iBAAkB8a,EAClB5Z,cAAe5B,GACf6B,SAAU,SAACC,EAAD,GAA+B,EAApBC,cACnBd,EAAaa,IAEfsV,SAAUpB,EANZ,SAQG,gBAAG/U,EAAH,EAAGA,aAAce,EAAjB,EAAiBA,aAAcqX,EAA/B,EAA+BA,OAAQvX,EAAvC,EAAuCA,OAAvC,OACC,eAAC1D,GAAA,EAAD,CAAM6D,YAAU,EAACJ,SAAUZ,EAA3B,UAEGmB,EACC,gCACE,cAAC,GAAD,CACEzF,KAAK,WACLe,MAAM,eACNqB,KAAK,WACLua,SAAUD,EAAOlZ,iBAAmB2B,EAAO5B,WAG7C,cAAC,GAAD,CACEvD,KAAK,kBACLe,MAAM,uBACNqB,KAAK,WACLnI,UAAU,OACV0iB,SACGD,EAAOlZ,iBAAmB2B,EAAO3B,qBAKxC,cAAC,GAAD,CAAexD,KAAK,QAAQe,MAAM,UAGpC,cAACxH,EAAD,CACEI,UAAQ,EACRyI,KAAK,SACL9C,KAAK,KACLrF,UAAU,OACV2K,OAAK,EACLc,SAAUL,EANZ,SAQGA,EACG,aACAI,EACA,kBACA,mCAMd,cAAC,OAAD,CAAM5G,GAAG,SAAT,SACE,cAACtF,EAAD,CACEmF,QAASigB,EAAS,UAAY,OAC9Brf,KAAK,KACLsF,OAAK,EACL3K,UAAW0kB,EAAS,OAAS,YAJ/B,oCChMGG,GAAeC,YAAH,kuEAMC,qBAAG7kB,MAAkBuf,cAChC,qBAAGvf,MAAkBC,QAcrB,qBAAGD,MAAkBC,QACH,qBAAGD,MAAkBsf,eAI5B,qBAAGtf,MAAkBsf,eAClB,qBAAGtf,MAAkBsf,eAIxB,qBAAGtf,MAAkBsf,eAIrB,qBAAGtf,MAAkB2I,QAChC,qBAAG3I,MAAkBC,QAYV,qBAAGD,MAAkB2I,QAShC,qBAAG3I,MAAkBC,QAarB,qBAAGD,MAAkBC,QAKV,qBAAGD,MAAkB8kB,WC7ElCC,GAAa,CACxBxF,WAAY,UACZtf,KAAM,UACN0I,KAAM,QACNlF,OAAQ,UACRqJ,aAAc,eACdtH,MAAO,eACP8Z,YAAa,UACbxL,eAAgB,UAChBC,gBAAiB,UACjB+Q,QAAS,WAGEE,GAAY,CACvBzF,WAAY,UACZtf,KAAM,UACN0I,KAAM,UACNlF,OAAQ,UACRqJ,aAAc,gBACdtH,MAAO,eACP8Z,YAAa,UACbxL,eAAgB,UAChBC,gBAAiB,UACjB+Q,QAAS,W,SCmFIG,OAnFf,WACE,MCtByB,WACzB,MAA0B9iB,mBAAS,SAAnC,mBAAOnC,EAAP,KAAcklB,EAAd,KACA,EAAgD/iB,oBAAS,GAAzD,mBAAOgjB,EAAP,KAAyBC,EAAzB,KAEMC,EAAU,SAAC3N,GACfvT,OAAO+K,aAAaC,QAAQ,QAASuI,GACrCwN,EAASxN,IAaX,OANA9U,qBAAU,WACR,IAAM0iB,EAAanhB,OAAO+K,aAAa8D,QAAQ,SAC/CsS,GAAcJ,EAASI,GACvBF,GAAoB,KACnB,IAEI,CAACplB,EAVa,WACCqlB,EAAV,UAAVrlB,EAA4B,OAAkB,UASnBmlB,GDGmBI,GAAhD,mBAAOvlB,EAAP,KAAcwlB,EAAd,KAA4BL,EAA5B,KACMM,EAAsB,UAAVzlB,EAAoB+kB,GAAaC,GAEnD,EAA0CnhB,qBAAW7B,GAA7CT,EAAR,EAAQA,WAAYc,EAApB,EAAoBA,kBAEpB,OAAK8iB,EAEH,mCACG9iB,EACC,cAACgG,GAAD,UACE,qBAAKuI,MAAO,CAAE5L,OAAQ,SAAtB,SACE,cAAC,GAAD,QAIJ,cAAC,KAAD,CAAgB0gB,kBAAkB,sCAAlC,SACE,eAAC,IAAD,CAAe1lB,MAAOylB,EAAtB,UACE,cAACb,GAAD,IACA,eAAC,gBAAD,WACE,cAAC,GAAD,CAAe5kB,MAAOA,EAAOuF,YAAaigB,IAC1C,cAACnd,GAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOsd,OAAK,EAACC,KAAK,IAAIC,UAAW5L,KACjC,cAAC,KAAD,CAAO2L,KAAK,SAAZ,SACGrkB,EACC,cAAC,KAAD,CAAUoD,GAAG,MAEb,cAAC,GAAD,CAAMgC,UAAU,MAGpB,cAAC,KAAD,CAAOif,KAAK,UAAZ,SACGrkB,EACC,cAAC,KAAD,CAAUoD,GAAG,MAEb,cAAC,GAAD,CAAMgC,UAAU,MAGpB,cAAC,KAAD,CAAOif,KAAK,iBAAZ,SACIrkB,EAAwC,cAAC,GAAD,IAA3B,cAAC,KAAD,CAAUoD,GAAG,aAE9B,cAAC,KAAD,CAAOihB,KAAK,YAAYC,UAAWxC,KACnC,cAAC,KAAD,CAAOuC,KAAK,wBAAwBC,UAAW5L,KAC/C,cAAC,KAAD,CAAO2L,KAAK,mBAAmBC,UAAW5L,KAC1C,cAAC,KAAD,CAAO2L,KAAK,UAAZ,SACGrkB,EACC,cAAC,KAAD,CAAUoD,GAAG,MAEb,cAAC,GAAD,CAAgB4G,iBAAiB,MAGrC,cAAC,KAAD,CAAOqa,KAAK,eAAZ,SACGrkB,EACC,cAAC,KAAD,CAAUoD,GAAG,MAEb,cAAC,GAAD,CAAgB4G,iBAAiB,MAGrC,cAAC,KAAD,CAAOqa,KAAK,gBAAZ,SACGrkB,EACC,cAAC,KAAD,CAAUoD,GAAG,MAEb,cAAC,GAAD,CAAgB4G,iBAAiB,MAGrC,cAAC,KAAD,CAAOqa,KAAK,qBAAZ,SACGrkB,EACC,cAAC,KAAD,CAAUoD,GAAG,MAEb,cAAC,GAAD,CAAgB4G,iBAAiB,MAGrC,cAAC,KAAD,CAAOsa,UAAWhK,oBAlEJ,yBExBhCiK,IAASC,OACP,cAAC,EAAD,UACE,cAAC,GAAD,MAEF/c,SAASgd,eAAe,W","file":"static/js/main.f0e26067.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b61851f5.svg\";","import Button from \"react-bootstrap/Button\";\nimport styled from \"styled-components\";\n\nexport const StyledButton = styled(Button)`\n  font-size: 1rem;\n\n  // Primary button\n  ${(props) =>\n    props.$primary &&\n    `\n    background-color: #56B65B !important;\n    border-color: #56B65B;\n\n    &:hover, &:visited {\n      background-color: #4da452 !important;\n      border-color: #4da452;\n    }\n    &:active, &:focus {\n      background-color: #459249 !important;\n      border-color: #459249;\n    }\n    `}\n\n  // Google button\n  ${(props) =>\n    props.$google &&\n    `\n    background-color: #ea4335 !important;\n    border-color: #ea4335;\n    color: white;\n\n    &:active, &:hover, &:focus, &:visited {\n      color: white;\n      background-color: #d33c30 !important;\n      border-color: #d33c30;\n    }\n\n    `}\n\n  // Facebook button\n  ${(props) =>\n    props.$facebook &&\n    `\n    border-color: #3b5998;\n    color: white;\n    background-color: #3b5998 !important;\n    &:active, &:hover, &:focus, &:visited {\n      color: white;\n      background-color: #355089 !important;\n      border-color: #355089;\n    }\n    `}\n`;\n\nexport const StyledIconButtonSpan = styled.span.attrs(() => ({\n  className: \"btn btn-default py-0 px-0\",\n}))`\n  color: ${({ theme }) => theme.text};\n  &:active,\n  &:hover,\n  &:focus,\n  &:visited {\n    opacity: 95%;\n  }\n\n  ${(props) =>\n    props.$delete &&\n    `\n    color: #ea4335;\n    &:active,\n    &:hover,\n    &:focus,\n    &:visited {\n      color: #d33c30;\n    }\n  `}\n`;\n","import axios from \"axios\";\n\nconst API = axios.create({ baseURL: \"http://localhost:4000\" });\n\n// Auth\n// withCredentials tells axios to send cookies in requests\nexport const login = (formData) =>\n  API.post(\"/auth/login\", formData, { withCredentials: true });\nexport const signUp = (formData) =>\n  API.post(\"/auth/signup\", formData, { withCredentials: true });\nexport const logout = () => API.get(\"/auth/logout\", { withCredentials: true });\nexport const getAuthenticatedUser = () =>\n  API.get(\"/auth/getuser\", { withCredentials: true });\nexport const forgotPassword = (formData) => API.post(\"/auth/forgot\", formData);\nexport const resetPassword = (formData, token) =>\n  API.post(`/auth/reset/${token}`, formData);\nexport const updatePassword = (formData) =>\n  API.put(`/auth/reset`, formData, { withCredentials: true });\n\n// User\nexport const getUser = (id) => API.get(\"/user/\" + id);\nexport const updateUser = (userObject) =>\n  API.put(\"/user/settings\", userObject, { withCredentials: true });\n\n// Calculation\nexport const createCalculation = (newCalculation) =>\n  API.post(\"/calculation/create\", newCalculation, { withCredentials: true });\nexport const getCalculation = (id) => API.get(`/calculation/${id}`);\nexport const deleteCalculation = (id) =>\n  API.delete(`/calculation/${id}/delete`, { withCredentials: true });\nexport const updateCalculation = (calculationObject) =>\n  API.put(`/calculation/${calculationObject._id}/edit`, calculationObject, {\n    withCredentials: true,\n  });\n","import React, { createContext, useEffect, useState } from \"react\";\nimport * as api from \"./api\";\n\nexport const UserContext = createContext();\n\nexport const UserProvider = (props) => {\n  const [userObject, setUserObject] = useState();\n  const [loadingUserObject, setLoadingUserObject] = useState(true);\n\n  async function getAuthenticatedUserObject() {\n    const res = await api.getAuthenticatedUser();\n\n    if (res.data) {\n      setUserObject(res.data);\n    }\n    setLoadingUserObject(false);\n  }\n\n  useEffect(() => {\n    getAuthenticatedUserObject();\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{\n        userObject,\n        setUserObject,\n        loadingUserObject,\n        getAuthenticatedUserObject,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport logo from \"../assets/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport styled from \"styled-components\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { StyledButton } from \"./Button\";\nimport { ThemeContext } from \"styled-components\";\nimport { UserContext } from \"../UserContext\";\nimport { FaPlus } from \"react-icons/fa\";\nimport * as api from \"../api\";\nimport {\n  createAvatarComponent,\n  SrcSource,\n  GoogleSource,\n  FacebookSource,\n  ValueSource,\n} from \"react-avatar\";\n\nconst Avatar = createAvatarComponent({\n  sources: [SrcSource, GoogleSource, FacebookSource, ValueSource], // image fallback order\n});\n\nconst StyledNavbar = styled(Navbar)`\n  background-color: ${({ theme }) => theme.navbar};\n  padding-top: 0.15rem;\n  padding-bottom: 0.15rem;\n  line-height: 2rem;\n  position: sticky;\n`;\n\nconst StyledNavbarBrand = styled(Navbar.Brand)`\n  font-family: Josefin Sans;\n  font-size: 2rem;\n`;\n\nfunction NavigationBar(props) {\n  const { userObject } = useContext(UserContext);\n  const themeContext = useContext(ThemeContext);\n\n  // Toggle dropdown on hover\n  const [showDropdown, setShowDropdown] = useState(false);\n  function handleOpen() {\n    setShowDropdown(true);\n  }\n  function handleClose() {\n    setShowDropdown(false);\n  }\n\n  async function logout() {\n    const res = await api.logout();\n\n    if (res.status === 200) {\n      window.location.href = \"/\";\n    }\n  }\n\n  return (\n    <StyledNavbar fixed=\"top\" expand=\"md\" variant=\"dark\">\n      <StyledNavbar.Toggle\n        className=\"border-0 pb-0\"\n        aria-controls=\"basic-navbar-nav\"\n      />\n      {/* Logo */}\n      <LinkContainer to=\"/\">\n        <StyledNavbarBrand>\n          <img\n            alt=\"logo\"\n            src={logo}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top ml-3\"\n          />{\" \"}\n          receipt hero\n        </StyledNavbarBrand>\n      </LinkContainer>\n\n      <StyledNavbar.Collapse id=\"basic-navbar-nav\">\n        {/* Left Navbar */}\n        <Nav className=\"mr-auto\">\n          {/* Create Button */}\n          <LinkContainer to=\"/\">\n            <Nav.Link>\n              <StyledButton $primary size=\"sm\">\n                <div className=\"d-flex align-items-center\">\n                  <FaPlus className=\"mr-1\" /> Create\n                </div>\n              </StyledButton>\n            </Nav.Link>\n          </LinkContainer>\n        </Nav>\n\n        {/* Right Navbar */}\n        <Nav className=\"mr-2\">\n          {/* Dark mode toggle */}\n          <Nav.Item className=\"d-flex align-items-center mr-4\">\n            <button className=\"as-text\" onClick={props.toggleTheme}>\n              {themeContext.emoji}\n            </button>\n          </Nav.Item>\n\n          {/* Auth Buttons */}\n          {userObject ? (\n            // User is logged in\n              <NavDropdown\n                title={\n                  <Avatar\n                    src={userObject.profileImage}\n                    googleId={userObject.googleId}\n                    facebookId={userObject.facebookId}\n                    name={`${userObject.firstName} ${userObject.lastName}`}\n                    round={true}\n                    size=\"33\"\n                    className=\"mr-1\"\n                  />\n                }\n                id=\"navbarScrollingDropdown\"\n                alignRight\n                show={showDropdown}\n                onMouseEnter={handleOpen}\n                onMouseLeave={handleClose}\n                className=\"mr-3\"\n              >\n                <NavDropdown.Item as={Link} to={\"/user/\" + userObject._id}>\n                  My Calculations\n                </NavDropdown.Item>\n\n                <NavDropdown.Item as={Link} to=\"/user/settings\">\n                  Settings\n                </NavDropdown.Item>\n\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={logout}>Log Out</NavDropdown.Item>\n              </NavDropdown>\n          ) : (\n            // User is not logged in\n            <>\n              <LinkContainer\n                to={{\n                  pathname: \"/login\",\n                  state: { isSignup: false },\n                }}\n              >\n                <Nav.Link>\n                  <StyledButton\n                    size=\"sm\"\n                    variant=\"outline-light\"\n                    className=\"px-3\"\n                  >\n                    Log in\n                  </StyledButton>\n                </Nav.Link>\n              </LinkContainer>\n\n              <LinkContainer\n                to={{\n                  pathname: \"/signup\",\n                  state: { isSignUp: true },\n                }}\n              >\n                <Nav.Link>\n                  <StyledButton size=\"sm\" variant=\"light\" className=\"px-3\">\n                    Sign up\n                  </StyledButton>\n                </Nav.Link>\n              </LinkContainer>\n            </>\n          )}\n        </Nav>\n      </StyledNavbar.Collapse>\n    </StyledNavbar>\n  );\n}\n\nexport default NavigationBar;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { useField } from \"formik\";\n\nexport const FormTextField = ({\n  label,\n  as,\n  xs,\n  md,\n  lg,\n  inputGroupPrepend,\n  inputGroupAppend,\n  inputGroupSize,\n  ...props\n}) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <Form.Group as={as} xs={xs} md={md} lg={lg}>\n      {label && <Form.Label htmlFor={props.name}>{label}</Form.Label>}\n      <InputGroup size={inputGroupSize}>\n        {inputGroupPrepend}\n        <Form.Control\n          {...field}\n          // isValid={meta.touched && !meta.error}\n          isInvalid={meta.touched && meta.error}\n          feedback={meta.error}\n          {...props}\n        />\n        {meta.touched && meta.error ? (\n          <Form.Control.Feedback type=\"invalid\">\n            {meta.error}\n          </Form.Control.Feedback>\n        ) : null}\n        {inputGroupAppend}\n      </InputGroup>\n    </Form.Group>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Separator = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #9d9a9a;\n  :before,\n  :after {\n    content: \"\";\n    flex: 1;\n    border-bottom: 1px solid #9d9a9a;\n  }\n\n  :not(:empty):before {\n    margin-right: 0.4em;\n  }\n\n  :not(:empty):after {\n    margin-left: 0.4em;\n  }\n`;\n","import styled from \"styled-components\";\nimport Container from \"react-bootstrap/Container\";\n\nexport const Wrapper = styled(Container).attrs(() => ({\n  fluid: \"true\",\n  className: \"mt-4\",\n}))`\n  padding: 0 3%;\n`;\n\nexport const SignInContainer = styled(Container)`\n  width: 100%;\n  max-width: 400px;\n  padding: 15px;\n  margin: auto;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledCard = styled.div`\n  padding: 1.75rem;\n  margin-right: 0;\n  margin-left: 0;\n  margin-bottom: ${(props) => (props.$main ? \"1rem\" : \"0\")};\n  border-width: 1px;\n  border-radius: 0.35rem;\n  box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\n  background-color: ${({ theme }) => theme.body};\n  color: ${({ theme }) => theme.text};\n`;\n","import { useState, useRef, useEffect, useCallback } from \"react\";\n\n// Provides the previous props / state.\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n// Similar to a setState callback but for react hooks.\n// sets the state and then calls the callback in the second param with updated state.\nexport function useStateCallback(initialState) {\n  const [state, setState] = useState(initialState);\n  const cbRef = useRef(null); // mutable ref to store current callback\n\n  const setStateCallback = useCallback((state, cb) => {\n    cbRef.current = cb; // store passed callback to ref\n    setState(state);\n  }, []);\n\n  useEffect(() => {\n    // cb.current is `null` on initial render, so we only execute cb on state *updates*\n    if (cbRef.current) {\n      cbRef.current(state);\n      cbRef.current = null; // reset callback after execution\n    }\n  }, [state]);\n\n  return [state, setStateCallback];\n}\n\n// Dynamically sets the document.title for a page.\nexport function useDocumentTitle(title, retainOnUnmount = false) {\n  const defaultTitle = useRef(document.title);\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    const defaultTitleCurrent = defaultTitle.current;\n    return () => {\n      if (!retainOnUnmount) {\n        document.title = defaultTitleCurrent;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { FormTextField } from \"../components/Form\";\nimport { Separator } from \"../components/Separator\";\nimport { SignInContainer } from \"../components/Container\";\nimport { StyledCard } from \"../components/Card\";\nimport { StyledButton } from \"../components/Button\";\nimport logo from \"../assets/logo.svg\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { Link } from \"react-router-dom\";\nimport * as api from \"../api\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport { useDocumentTitle } from \"../hooks\";\n\nconst defaultFormData = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nfunction Auth(props) {\n  const { setUserObject, getAuthenticatedUserObject } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const [isSignUp, setIsSignUp] = useState(props.isSignUp);\n  const [errorMessage, setErrorMessage] = useState();\n\n  // Formik validation schema\n  const validationSchema = isSignUp\n    ? yup.object({\n        firstName: yup\n          .string()\n          .max(15, \"Must be 15 characters or less\")\n          .required(\"Required\"),\n        lastName: yup\n          .string()\n          .max(20, \"Must be 20 characters or less\")\n          .required(\"Required\"),\n        email: yup.string().email(\"Invalid email address\").required(\"Required\"),\n        password: yup.string().required(\"Required\"),\n        confirmPassword: yup\n          .string()\n          .test(\"passwords-match\", \"Passwords must match\", function (value) {\n            return this.parent.password === value;\n          }),\n      })\n    : yup.object({\n        email: yup.string().email(\"Invalid email address\").required(\"Required\"),\n        password: yup.string().required(\"Required\"),\n      });\n\n  // Update authentication page based on props.isSignUp change.\n  useEffect(() => {\n    setIsSignUp(props.isSignUp);\n  }, [props.isSignUp]);\n\n  // Sets the document title\n  useDocumentTitle(`Receipt Hero - ${isSignUp ? \"Sign Up\" : \"Log In\"}`);\n\n  function handleSubmit(formData) {\n    if (isSignUp) {\n      signUp(formData);\n    } else {\n      login(formData);\n    }\n  }\n\n  async function signUp(formData) {\n    try {\n      const res = await api.signUp(formData);\n      setUserObject(res.data.userObject);\n      getAuthenticatedUserObject();\n      history.push(\"/\");\n    } catch (err) {\n      if (err.response?.data?.message)\n        setErrorMessage(err.response.data.message);\n    }\n  }\n\n  async function login(formData) {\n    try {\n      const res = await api.login(formData);\n      setUserObject(res.data.userObject);\n      getAuthenticatedUserObject();\n      history.push(\"/\");\n    } catch (err) {\n      if (err.response?.data?.message)\n        setErrorMessage(err.response.data.message);\n    }\n  }\n\n  function googleLogin() {\n    window.open(\"http://localhost:4000/auth/google\", \"_self\"); // TODO update URL\n  }\n\n  function facebookLogin() {\n    window.open(\"http://localhost:4000/auth/facebook\", \"_self\"); // TODO update URL\n  }\n\n  function switchMode() {\n    setIsSignUp((prevIsSignup) => !prevIsSignup);\n  }\n\n  return (\n    <SignInContainer>\n      <Card.Body>\n        <img\n          className=\"mx-auto d-block mb-3\"\n          src={logo}\n          width=\"72\"\n          height=\"72\"\n          alt=\"logo\"\n        />\n\n        {/* Social buttons */}\n\n        <StyledButton\n          $google\n          size=\"lg\"\n          block\n          className=\"mb-3\"\n          onClick={googleLogin}\n        >\n          <i className=\"fab fa-google\"></i>{\" \"}\n          {isSignUp ? \" Sign up \" : \" Log in \"}\n          with Google\n        </StyledButton>\n        <StyledButton $facebook size=\"lg\" block onClick={facebookLogin}>\n          <i className=\"fab fa-facebook-square\"></i>\n          {isSignUp ? \" Sign up \" : \" Log in \"} with Facebook\n        </StyledButton>\n\n        <Separator className=\"my-3\">or</Separator>\n\n        {/* Alert Error Message */}\n        {errorMessage && (\n          <Alert\n            variant=\"danger\"\n            onClose={() => setErrorMessage(null)}\n            dismissible\n            className=\"d-flex align-items-center\"\n          >\n            <IoWarningOutline className=\"mr-2\" />\n            {errorMessage}\n          </Alert>\n        )}\n\n        <StyledCard>\n          <Formik\n            validationSchema={validationSchema}\n            initialValues={defaultFormData}\n            onSubmit={(values, { setSubmitting }) => {\n              handleSubmit(values);\n              setSubmitting(false);\n            }}\n          >\n            {({ handleSubmit, isSubmitting }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                {/* Name */}\n                {isSignUp && (\n                  <Form.Row>\n                    <FormTextField\n                      as={Col}\n                      name=\"firstName\"\n                      label=\"First Name\"\n                    />\n\n                    <FormTextField as={Col} name=\"lastName\" label=\"Last Name\" />\n                  </Form.Row>\n                )}\n\n                {/* Email */}\n                <FormTextField name=\"email\" label=\"Email\" type=\"email\" />\n\n                {/* Password */}\n                <FormTextField\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                />\n\n                {!isSignUp && (\n                  <div className=\"mb-4\">\n                    <Link\n                      to={{\n                        pathname: \"/forgot\",\n                        state: { isResetPassword: false },\n                      }}\n                    >\n                      Forgot password?\n                    </Link>\n                  </div>\n                )}\n                {/* Submit button */}\n                <StyledButton\n                  $primary\n                  type=\"submit\"\n                  size=\"lg\"\n                  block\n                  disabled={isSubmitting}\n                  className=\"mt-4\"\n                >\n                  {isSignUp ? \"Sign up\" : \"Log in\"}\n                </StyledButton>\n              </Form>\n            )}\n          </Formik>\n        </StyledCard>\n      </Card.Body>\n\n      {/* Have an account message */}\n      <div className=\"d-flex align-items-center justify-content-center\">\n        {isSignUp ? \"Already\" : \"Don't\"} have an account?\n        <Link\n          to={{\n            pathname: isSignUp ? \"/login\" : \"/signup\",\n            state: { isSignUp: !isSignUp },\n          }}\n        >\n          <StyledButton className=\"py-0\" variant=\"link\" onClick={switchMode}>\n            {isSignUp ? \"Log in\" : \"Sign up\"}\n          </StyledButton>\n        </Link>\n      </div>\n    </SignInContainer>\n  );\n}\n\nexport default Auth;\n","import Modal from \"react-bootstrap/Modal\";\nimport styled from \"styled-components\";\n\nexport const StyledModal = styled(Modal)`\n  .modal-content {\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n\n  .modal-header {\n    border: none;\n  }\n\n  .modal-footer {\n    border: none;\n  }\n\n  .close {\n    color: ${({ theme }) => theme.text};\n  }\n\n  .list-group-item {\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n`;\n","import React, { useContext, useState } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { FormTextField } from \"../../components/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { StyledButton } from \"../Button\";\nimport { ThemeContext } from \"styled-components\";\nimport { StyledModal } from \"../Modal\";\nimport * as api from \"../../api\";\n\n// Formik validation schema\nconst validationSchema = yup.object({\n  taxRate: yup\n    .number()\n    .test(\n      \"validNumberRange\",\n      \"Number must be between 0 and 100\",\n      (value) => 0 < value && value <= 100\n    )\n    .test(\n      \"maxDigitsAfterDecimal\",\n      \"Number must have 2 digits after decimal or less\",\n      (number) => /^\\d+(\\.\\d{1,2})?$/.test(number)\n    )\n    .required(),\n});\n\nfunction CalculatorForm(props) {\n  // Called in CalculatorForm when taxRate input is submitted.\n  const handleTaxRateSubmit = (taxRate) => {\n    if (props.userObject) {\n      try {\n        api.updateUser({ ...props.userObject, taxRate: taxRate });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      window.localStorage.setItem(\"taxRate\", taxRate);\n    }\n\n    handleCloseModal();\n    props.setTaxRate(taxRate);\n\n    // Update the deductions input field with the new tax rate.\n    const dummyEvent = {\n      target: {\n        name: null,\n        value: null,\n        type: \"checkbox\",\n        checked: props.deduction.isTaxed,\n      },\n    };\n    props.onDeductionInputChange(dummyEvent);\n  };\n\n  const themeContext = useContext(ThemeContext);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShowModal = (personIdx) => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Form.Row>\n        {/* Date of Purchase */}\n        <Form.Group as={Col} lg=\"6\">\n          <Form.Control\n            label=\"Purchase Date\"\n            name=\"purchaseDate\"\n            onChange={(event) => props.onInputChange(event)}\n            value={props.receipt.purchaseDate}\n            type=\"date\"\n            required\n            size=\"sm\"\n          />\n        </Form.Group>\n\n        {/* Store Name */}\n        <Form.Group as={Col} lg=\"6\">\n          <Form.Control\n            label=\"Store Name\"\n            name=\"storeName\"\n            onChange={(event) => props.onInputChange(event)}\n            value={props.receipt.storeName}\n            required\n            size=\"sm\"\n          />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        {/* Receipt Total */}\n        <Form.Group as={Col} lg=\"6\">\n          <Form.Label>Receipt Total</Form.Label>\n          <InputGroup size=\"sm\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>$</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              name=\"total\"\n              onChange={(event) => props.onInputChange(event)}\n              value={props.receipt.total || \"\"}\n              type=\"number\"\n              min=\"0.01\"\n              required\n              placeholder=\"0.00\"\n            />\n          </InputGroup>\n        </Form.Group>\n\n        {/* Buyer */}\n        <Form.Group as={Col} lg=\"6\">\n          <Form.Label>Who Paid?</Form.Label>\n          <DropdownButton\n            name=\"buyer\"\n            size=\"sm\"\n            variant={themeContext.toggleButton}\n            value={props.receipt.buyer}\n            title={props.receipt.buyer}\n          >\n            {props.receipt.people.map((person, idx) => (\n              <Dropdown.Item\n                key={idx}\n                onSelect={() => props.onBuyerChange(person)}\n              >\n                {person.name}\n              </Dropdown.Item>\n            ))}\n          </DropdownButton>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        {/* Personal Deductions */}\n        <Form.Group as={Col}>\n          <Form.Label>Deductions</Form.Label>\n          <OverlayTrigger\n            placement=\"bottom\"\n            delay={{ show: 0, hide: 0 }}\n            overlay={\n              <Tooltip>Deduct any unshared items from the receipt.</Tooltip>\n            }\n          >\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>$</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                name=\"amount\"\n                onChange={(e) => props.onDeductionInputChange(e)}\n                value={\n                  props.deduction.isTaxed\n                    ? props.deduction.amountWithTax !== \"0.00\"\n                      ? props.deduction.amountWithTax\n                      : \"\"\n                    : props.deduction.amount || \"\"\n                }\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"0.00\"\n              />\n              <Form.Control\n                name=\"itemName\"\n                onChange={(e) => props.onDeductionInputChange(e)}\n                value={props.deduction.itemName}\n                placeholder=\"Item name\"\n              />\n              <DropdownButton\n                name=\"personIdx\"\n                as={InputGroup.Append}\n                variant={themeContext.toggleButton}\n                value={props.receipt.people[props.deduction.personIdx].name}\n                title={props.receipt.people[props.deduction.personIdx].name}\n              >\n                {props.receipt.people.map((person, idx) => (\n                  <Dropdown.Item\n                    key={idx}\n                    onSelect={(e) => props.onDeductionInputChange(e, person)}\n                  >\n                    {person.name}\n                  </Dropdown.Item>\n                ))}\n              </DropdownButton>\n              <InputGroup.Append>\n                <StyledButton\n                  variant={themeContext.toggleButton}\n                  onClick={() => {\n                    props.deduction.amount && props.onDeductionAdd();\n                  }}\n                >\n                  Add\n                </StyledButton>\n              </InputGroup.Append>\n            </InputGroup>\n          </OverlayTrigger>\n\n          <Form.Check className=\"mt-1 text-muted\">\n            <div className=\"d-flex align-items-center\">\n              <Form.Check.Input\n                id=\"taxRateCheckbox\"\n                type=\"checkbox\"\n                checked={props.deduction.isTaxed}\n                onChange={(e) => {\n                  props.onDeductionInputChange(e);\n                }}\n              />\n              <Form.Check.Label htmlFor=\"taxRateCheckbox\" className=\"mt-1\">\n                Include{\" \"}\n                <StyledButton\n                  variant=\"link\"\n                  className=\"py-0 px-0 pb-1\"\n                  onClick={handleShowModal}\n                >\n                  tax\n                </StyledButton>{\" \"}\n                with item price\n              </Form.Check.Label>\n            </div>\n          </Form.Check>\n        </Form.Group>\n      </Form.Row>\n\n      {/* Modal - Edit tax rate */}\n      <StyledModal show={showModal} onHide={handleCloseModal} size=\"sm\">\n        <StyledModal.Header closeButton>\n          <StyledModal.Title>Edit tax rate</StyledModal.Title>\n        </StyledModal.Header>\n        <StyledModal.Body>\n          <Formik\n            validationSchema={validationSchema}\n            initialValues={{ taxRate: props.initialTaxRate }}\n            onSubmit={(values) => handleTaxRateSubmit(values.taxRate)}\n          >\n            {({ handleSubmit }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                <FormTextField\n                  type=\"number\"\n                  name=\"taxRate\"\n                  className=\"text-right\"\n                  autoFocus\n                  onFocus={(e) => {\n                    e.target.select();\n                  }}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") {\n                      handleSubmit();\n                    }\n                  }}\n                  inputGroupPrepend={\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>%</InputGroup.Text>\n                    </InputGroup.Prepend>\n                  }\n                />\n\n                <StyledButton\n                  type=\"submit\"\n                  // type=\"button\"\n                  // onClick={handleSubmit}\n                  variant=\"secondary\"\n                  className=\"mt-4 mb-1 float-right\"\n                >\n                  Done\n                </StyledButton>\n              </Form>\n            )}\n          </Formik>\n        </StyledModal.Body>\n      </StyledModal>\n    </>\n  );\n}\n\nexport default CalculatorForm;\n","import React, { useState } from \"react\";\nimport { StyledButton, StyledIconButtonSpan } from \"../../components/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { StyledModal } from \"../Modal\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Row from \"react-bootstrap/Row\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { Separator } from \"../Separator\";\nimport { FaTrashAlt } from \"react-icons/fa\";\n\nfunction CalculatorDisplay(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [modalOpenIndex, setModalOpenIndex] = useState(0);\n\n  const handleShowModal = (personIdx) => {\n    setModalOpenIndex(personIdx);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <h6>Calculation:</h6>\n\n      <Container fluid>\n        <Row>\n          <Col md={5}>\n            <small>Receipt total:</small>\n          </Col>\n          <Col md={7} className=\"text-right\">\n            $ {props.receipt.total.toFixed(2)}\n          </Col>\n        </Row>\n\n        {props.receipt.people.map((person, idx) => {\n          return person.deductions.length ? (\n            <Row key={idx}>\n              <Col md={5}>\n                <small>\n                  {idx === 0 ? \"Your\" : `${person.name}'s`} deductions:\n                </small>\n              </Col>\n              <Col md={7} className=\"text-right\">\n                - ${\" \"}\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  delay={{ show: 0, hide: 0 }}\n                  overlay={<Tooltip>Edit</Tooltip>}\n                >\n                  <StyledButton\n                    size=\"sm\"\n                    variant=\"link\"\n                    className=\"px-0\"\n                    onClick={() => handleShowModal(person.idx)}\n                  >\n                    {props.calculateDeductionsSum(person.deductions).toFixed(2)}\n                  </StyledButton>\n                </OverlayTrigger>\n              </Col>\n            </Row>\n          ) : null;\n        })}\n\n        <Separator className=\"my-2\" />\n\n        <Row>\n          <Col md={6}>\n            <small>Shared total: </small>\n          </Col>\n          <Col className=\"text-right\" md={6}>\n            $ {props.receipt.sharedTotal.toFixed(2)}\n          </Col>\n        </Row>\n\n        <Separator className=\"mt-2 mb-3\" />\n\n        <Row>\n          <Col md={6}>\n            {props.receipt.settlement.doesOwe\n              ? `You owe ${props.receipt.buyer}:`\n              : \"You lent:\"}\n          </Col>\n          <Col className=\"text-right\">\n            <h5>$ {Math.abs(props.receipt.settlement.amount).toFixed(2)}</h5>\n          </Col>\n        </Row>\n      </Container>\n\n      {/* Modal - Edit deduction */}\n      <StyledModal show={showModal} onHide={handleCloseModal} size=\"sm\">\n        <StyledModal.Header closeButton>\n          <StyledModal.Title>\n            {props.receipt.people[modalOpenIndex].name}'s deductions\n          </StyledModal.Title>\n        </StyledModal.Header>\n        <StyledModal.Body>\n          <ListGroup variant=\"flush\">\n            {props.receipt.people[modalOpenIndex].deductions.map(\n              (item, idx) => (\n                <ListGroup.Item key={idx} action>\n                  <div>\n                    $ {item.amount.toFixed(2)}{\" \"}\n                    {item.isTaxed ? (\n                      <span style={{ color: \"grey\" }}>(T)</span>\n                    ) : null}{\" \"}\n                    {item.itemName ? \"- \" + item.itemName : null}{\" \"}\n                    <StyledIconButtonSpan\n                      $delete\n                      className=\"float-right\"\n                      onClick={() =>\n                        props.onDeductionDelete(\n                          props.receipt.people[modalOpenIndex].idx,\n                          idx\n                        )\n                      }\n                    >\n                      <FaTrashAlt />\n                    </StyledIconButtonSpan>\n                  </div>\n                </ListGroup.Item>\n              )\n            )}\n          </ListGroup>\n        </StyledModal.Body>\n        <StyledModal.Footer>\n          <StyledButton variant=\"secondary\" onClick={handleCloseModal}>\n            Done\n          </StyledButton>\n        </StyledModal.Footer>\n      </StyledModal>\n    </>\n  );\n}\n\nexport default CalculatorDisplay;\n","import React, {\n  useState,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n  useContext,\n} from \"react\";\nimport CalculatorForm from \"./CalculatorForm\";\nimport CalculatorDisplay from \"./CalculatorDisplay\";\nimport { StyledButton } from \"../../components/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { ThemeContext } from \"styled-components\";\nimport { UserContext } from \"../../UserContext\";\n\nconst Calculator = forwardRef((props, ref) => {\n  const themeContext = useContext(ThemeContext);\n\n  const defaultReceiptState = {\n    id: 0,\n    purchaseDate: \"\",\n    storeName: \"\",\n    total: 0,\n    sharedTotal: 0,\n    buyer: props.calculationObject.people[0].name,\n    settlement: { amount: 0 },\n    people: props.calculationObject.people.map((person) => ({\n      idx: person.idx,\n      name: person.name,\n      amount: 0,\n      isBuyer: person.idx === 0 ? true : false,\n      deductions: [],\n    })),\n  };\n\n  const [receipt, setReceipt] = useState(defaultReceiptState);\n  const [taxRate, setTaxRate] = useState(9.25);\n\n  const defaultDeductionState = {\n    id: null,\n    amount: 0,\n    amountWithTax: 0,\n    itemName: \"\",\n    personIdx: 0,\n    isTaxed: false,\n  };\n\n  const [deduction, setDeduction] = useState(defaultDeductionState);\n\n  useImperativeHandle(ref, () => ({\n    calculateBalanceOwed: calculateBalanceOwed,\n  }));\n\n  // Adds every number in the list and returns the sum.\n  function calculateDeductionsSum(list) {\n    return list.reduce(\n      (acc, item) =>\n        acc * 1 + (item.isTaxed ? item.amountWithTax : item.amount) * 1,\n      0\n    );\n  }\n\n  function calculateBalanceOwed(receiptToCalculate) {\n    // Calculate the credit/debit balance of each user\n    let updatedPeople = receiptToCalculate.people;\n    let sharedCost = receiptToCalculate.total;\n    const numPeople = receiptToCalculate.people.length;\n\n    for (var i = 0; i < numPeople; i++) {\n      let person = updatedPeople[i];\n\n      // Buyer has a positive amount, which means they spent that much.\n      // Other people have a 0 amount because they didn't spend anything.\n      updatedPeople[i].amount = person.isBuyer ? receiptToCalculate.total : 0;\n\n      // Subtract any personal deductions from each person and the total receipt.\n      const personDeductionTotal = calculateDeductionsSum(person.deductions);\n      updatedPeople[i].amount -= 1 * personDeductionTotal;\n      sharedCost -= 1 * personDeductionTotal;\n    }\n\n    const splitReceiptCost = sharedCost / numPeople;\n\n    // Subtract the shared cost from each person who is not the buyer.\n    // This calculates how much each person owes the buyer.\n    for (i = 0; i < numPeople; i++) {\n      updatedPeople[i].amount -= (1 * splitReceiptCost).toFixed(2);\n    }\n\n    // Person 0 is always 'you'.\n    const selfAmount = updatedPeople[0].amount;\n    let selfDoesOwe = selfAmount < 0;\n    const settlement = {\n      message: selfDoesOwe\n        ? `You owe ${receiptToCalculate.buyer} $${Math.abs(selfAmount).toFixed(\n            2\n          )}`\n        : `You lent $${Math.abs(selfAmount).toFixed(2)}`,\n      amount: Math.abs(selfAmount).toFixed(2),\n      doesOwe: selfDoesOwe,\n    };\n\n    return {\n      sharedTotal: sharedCost,\n      people: updatedPeople,\n      settlement: settlement,\n    };\n  }\n\n  useEffect(() => {\n    const updatedCalculations = calculateBalanceOwed(receipt);\n    setReceipt((prevReceipt) => {\n      return {\n        ...prevReceipt,\n        ...updatedCalculations,\n      };\n    });\n    // eslint-disable-next-line\n  }, [\n    receipt.total,\n    receipt.deductions,\n    receipt.buyer,\n    // eslint-disable-next-line\n    JSON.stringify(receipt.people),\n  ]);\n\n  // Updates the name of receipt's people when a calculationObject's person name changes.\n  useEffect(() => {\n    setReceipt((prevReceipt) => {\n      let updatedPeople = [...prevReceipt.people];\n      for (var i = 0; i < updatedPeople.length; i++) {\n        updatedPeople[i].name = props.calculationObject.people[i].name;\n\n        if (\n          updatedPeople[i].isBuyer &&\n          updatedPeople[i].name !== prevReceipt.buyer\n        ) {\n          handleBuyerChange(updatedPeople[i]);\n        }\n      }\n      return { ...prevReceipt, people: updatedPeople };\n    });\n    // eslint-disable-next-line\n  }, [JSON.stringify(props.calculationObject.people)]);\n\n  function formatFloat(value) {\n    let formattedFloat =\n      value.indexOf(\".\") >= 0\n        ? value.substr(0, value.indexOf(\".\")) +\n          value.substr(value.indexOf(\".\"), 3)\n        : value;\n\n    if (formattedFloat < 0) {\n      formattedFloat *= -1;\n    } else {\n      formattedFloat *= 1;\n    }\n\n    return formattedFloat;\n  }\n\n  // Used for setting receipt's purchaseDate, storeName, and receipt total.\n  function handleInputChange(event) {\n    const { name, value, type } = event.target;\n\n    setReceipt((prevValue) => {\n      // Handle number input.\n      if (type === \"number\") {\n        // Update regular number input.\n        return {\n          ...prevValue,\n          [name]: formatFloat(value),\n        };\n      }\n      // Handle date / string input.\n      else {\n        return { ...prevValue, [name]: value };\n      }\n    });\n  }\n\n  // Sets the receipt's buyer and marks the buyers isBuyer to True.\n  function handleBuyerChange(selectedPerson) {\n    setReceipt((prevReceipt) => {\n      let updatedPeople = [...prevReceipt.people];\n      for (var i = 0; i < updatedPeople.length; i++) {\n        updatedPeople[i].isBuyer = i === selectedPerson.idx ? true : false;\n      }\n\n      return {\n        ...prevReceipt,\n        buyer: selectedPerson.name,\n        people: updatedPeople,\n      };\n    });\n  }\n\n  // Adds a deduction object to the person's deductions list.\n  function handleDeductionAdd() {\n    setReceipt((prevReceipt) => {\n      let updatedPeople = [...prevReceipt.people];\n      updatedPeople[deduction.personIdx].deductions.push(deduction);\n      return { ...prevReceipt, people: updatedPeople };\n    });\n\n    setDeduction(defaultDeductionState);\n  }\n\n  // Deletes a deduction item from the person's deductions list.\n  function handleDeductionDelete(personIdx, idxToDelete) {\n    setReceipt((prevReceipt) => {\n      let updatedPeople = [...prevReceipt.people];\n      updatedPeople[personIdx].deductions = updatedPeople[\n        personIdx\n      ].deductions.filter((ele, idx) => {\n        return idx !== idxToDelete;\n      });\n\n      return { ...prevReceipt, people: updatedPeople };\n    });\n\n    setDeduction(defaultDeductionState);\n  }\n\n  // Updates the deduction object's state.\n  function handleDeductionInputChange(event, dropDownValue = null) {\n    setDeduction((prevDeduction) => {\n      // Set the deduction name from the dropdown.\n      if (dropDownValue) {\n        return {\n          ...prevDeduction,\n          personIdx: dropDownValue.idx,\n        };\n      }\n\n      const { name, value, type, checked } = event.target;\n\n      if (type === \"number\") {\n        let amount = 0;\n        let amountWithTax = 0;\n\n        // Update amount and amountWithTax according to current isTaxed state.\n        if (prevDeduction.isTaxed) {\n          amountWithTax = formatFloat(value);\n          amount = (amountWithTax / (taxRate / 100 + 1)).toFixed(2);\n        } else {\n          amount = formatFloat(value);\n          amountWithTax = (amount * (taxRate / 100 + 1)).toFixed(2);\n        }\n\n        return {\n          ...prevDeduction,\n          amount: amount,\n          amountWithTax: amountWithTax,\n        };\n      } else if (type === \"checkbox\") {\n        const amountWithTax = 1 * (prevDeduction.amount * (taxRate / 100 + 1));\n\n        return {\n          ...prevDeduction,\n          amountWithTax: amountWithTax.toFixed(2),\n          isTaxed: checked,\n        };\n      } else {\n        return { ...prevDeduction, [name]: value };\n      }\n    });\n  }\n\n  // Tax Rate\n  const { userObject } = useContext(UserContext);\n\n  // Set taxRate based on userObject's taxRate or local storage taxRate if available.\n  useEffect(() => {\n    if (userObject?.taxRate) {\n      setTaxRate(userObject.taxRate);\n    } else if (window.localStorage.getItem(\"taxRate\")) {\n      setTaxRate(window.localStorage.getItem(\"taxRate\"));\n    }\n  }, [userObject]);\n\n  return (\n    <Form\n      onSubmit={(event) => {\n        props.onAdd(receipt);\n        event.preventDefault();\n        setReceipt(defaultReceiptState);\n      }}\n    >\n      <h4>Add a Receipt</h4>\n      <hr />\n      <CalculatorForm\n        receipt={receipt}\n        deduction={deduction}\n        onInputChange={handleInputChange}\n        onBuyerChange={handleBuyerChange}\n        onDeductionInputChange={handleDeductionInputChange}\n        onDeductionAdd={handleDeductionAdd}\n        initialTaxRate={taxRate}\n        setTaxRate={setTaxRate}\n        userObject={userObject}\n      />\n\n      <hr />\n\n      <CalculatorDisplay\n        receipt={receipt}\n        calculateDeductionsSum={calculateDeductionsSum}\n        onDeductionDelete={handleDeductionDelete}\n      />\n\n      {/* Add Button */}\n      <StyledButton\n        variant={themeContext.toggleButton}\n        type=\"submit\"\n        block\n        className=\"mt-2\"\n      >\n        Add\n      </StyledButton>\n    </Form>\n  );\n});\n\nexport default Calculator;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\nfunction TotalBalance(props) {\n  const themeContext = useContext(ThemeContext);\n\n  function generateTotalBalance(props) {\n    // If there are only two people, only display one message of who owes what.\n    if (props.calculationObject.people.length === 2) {\n      let self = props.calculationObject.people[0];\n      let otherPerson = props.calculationObject.people[1];\n\n      if (self.totalAmount > 0) {\n        return (\n          <h6 style={{ color: themeContext.cellColorGreen }}>\n            {otherPerson.name} owes you $\n            {Math.abs(otherPerson.totalAmount).toFixed(2)}\n          </h6>\n        );\n      } else if (otherPerson.totalAmount > 0) {\n        return (\n          <h5 style={{ color: themeContext.cellColorOrange }}>\n            You owe {otherPerson.name} ${Math.abs(self.totalAmount).toFixed(2)}\n          </h5>\n        );\n      }\n\n      return null;\n    }\n  }\n\n  return props.calculationObject.receipts.length ? (\n    <div>\n      <h4>Total balance:</h4>\n      {generateTotalBalance(props)}\n    </div>\n  ) : null;\n}\n\nexport default TotalBalance;\n","export default __webpack_public_path__ + \"static/media/empty-table.2b29fc38.svg\";","import { useContext } from \"react\";\nimport { Type } from \"react-bootstrap-table2-editor\";\nimport { FaTrashAlt } from \"react-icons/fa\";\n// import { MdEdit } from \"react-icons/md\";\nimport { StyledIconButtonSpan } from \"../../components/Button\";\nimport { ThemeContext } from \"styled-components\";\n\n// Returns the formatted table data columns to populate BootstrapTable with.\nfunction ReceiptsTableData(props) {\n  const themeContext = useContext(ThemeContext);\n\n  function formatMonetaryCell(content) {\n    return content ? \"$ \" + parseFloat(content).toFixed(2) : \"\";\n  }\n\n  const cellStyle = {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n  };\n\n  return [\n    {\n      dataField: \"purchaseDate\",\n      text: \"Date\",\n      type: \"date\",\n      editable: props.editMode,\n      style: cellStyle,\n      sort: true,\n      formatter: (cell) => {\n        let dateObj = cell;\n        if (typeof cell !== \"object\") {\n          dateObj = new Date(cell);\n        }\n        return `${(\"0\" + (dateObj.getUTCMonth() + 1)).slice(-2)}/${(\n          \"0\" + dateObj.getUTCDate()\n        ).slice(-2)}/${dateObj.getUTCFullYear()}`;\n      },\n      csvFormatter: (cell) => {\n        let dateObj = cell;\n        if (typeof cell !== \"object\") {\n          dateObj = new Date(cell);\n        }\n        return `${(\"0\" + (dateObj.getUTCMonth() + 1)).slice(-2)}/${(\n          \"0\" + dateObj.getUTCDate()\n        ).slice(-2)}/${dateObj.getUTCFullYear()}`;\n      },\n      editor: {\n        type: Type.DATE,\n      },\n    },\n    {\n      dataField: \"storeName\",\n      text: \"Name\",\n      style: cellStyle,\n      sort: true,\n      editable: props.editMode,\n    },\n    {\n      dataField: \"buyer\",\n      text: \"Buyer\",\n      style: cellStyle,\n      sort: true,\n      editable: false,\n    },\n    {\n      dataField: \"total\",\n      text: \"Receipt Total\",\n      type: \"number\",\n      sort: true,\n      editable: props.editMode,\n      style: cellStyle,\n      formatter: (cellContent) => {\n        return formatMonetaryCell(cellContent);\n      },\n      csvFormatter: (cellContent) => {\n        return formatMonetaryCell(cellContent);\n      },\n      csvType: Number,\n    },\n    {\n      dataField: \"settlement.message\",\n      text: \"Settlement\",\n      sort: true,\n      editable: false,\n      style: function callback(cell, row, rowIndex, colIndex) {\n        return {\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n          color: row.settlement.doesOwe\n            ? themeContext.cellColorOrange\n            : themeContext.cellColorGreen,\n        };\n      },\n    },\n    {\n      dataField: \"id\",\n      text: \"\",\n      align: \"center\",\n      editable: false,\n      searchable: false,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"8%\" };\n      },\n      formatExtraData: props.editMode, // pass state as extraData to formatter.\n      formatter: (cellContent, row, index, extraData) => {\n        return extraData ? (\n          <div className=\"text-nowrap\">\n            {/* <StyledIconButtonSpan\n              onClick={() => props.onShowReceiptModal()}\n              className=\"mr-3\"\n              >\n              <MdEdit />\n            </StyledIconButtonSpan> */}\n            <StyledIconButtonSpan\n              $delete\n              className=\"hide-on-print\"\n              onClick={() => props.onDeleteReceipt(row.id)}\n            >\n              <FaTrashAlt />\n            </StyledIconButtonSpan>\n          </div>\n        ) : null;\n      },\n      csvType: Number,\n      csvFormatter: (cellContent) => {\n        return \"\";\n      },\n    },\n  ];\n}\n\nexport default ReceiptsTableData;\n","import React from \"react\";\nimport { StyledModal } from \"../Modal\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik, FieldArray } from \"formik\";\nimport * as yup from \"yup\";\nimport { FormTextField } from \"../../components/Form\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { StyledButton, StyledIconButtonSpan } from \"../../components/Button\";\nimport { v1 as uuidv1 } from \"uuid\";\n\n// Formik validation schema\nconst validationSchema = yup.object({\n  people: yup.array().of(\n    yup.object({\n      name: yup\n        .string()\n        .max(20, \"Must be 20 characters or less\")\n        .required(\"Required\"),\n    })\n  ),\n});\n\nfunction EditPeopleModal(props) {\n  return (\n    <StyledModal show={props.showModal} onHide={props.onCloseModal} size=\"sm\">\n      <StyledModal.Header closeButton>\n        <StyledModal.Title as={\"h5\"}>Split between</StyledModal.Title>\n      </StyledModal.Header>\n      <StyledModal.Body>\n        <Formik\n          initialValues={{ people: props.calculationObject.people }}\n          validationSchema={validationSchema}\n          onSubmit={(values) => {\n            props.onUpdatePeople(values.people);\n            props.onCloseModal();\n          }}\n        >\n          {({ handleSubmit, values }) => (\n            <Form noValidate>\n              <FieldArray name=\"people\">\n                {({ remove, push }) => (\n                  <div>\n                    {values.people.map((person, idx) => (\n                      <ListGroup variant=\"flush\" key={idx}>\n                        <ListGroup.Item className=\"pb-0\">\n                          <Form.Row>\n                            <FormTextField\n                              autoFocus\n                              as={Col}\n                              xs={10}\n                              name={`people.${idx}.name`}\n                              onFocus={(e) => {\n                                e.target.select();\n                              }}\n                              onKeyPress={(e) => {\n                                if (e.key === \"Enter\") {\n                                  handleSubmit();\n                                }\n                              }}\n                              // TODO disabled field needs to be set based on accessibility\n                            />\n\n                            <Col xs={2}>\n                              {(!props.id ||\n                                (props.isUsersCalculation &&\n                                props.editMode)) && (\n                                  <div className=\"mt-1 text-right\">\n                                    {idx === 0 && (\n                                      <p className=\"text-muted mr-3 mb-0\">{`(You)`}</p>\n                                    )}\n                                    {idx >= 2 && (\n                                      <StyledIconButtonSpan\n                                        $delete\n                                        onClick={() => {\n                                          remove(idx);\n                                        }}\n                                      >\n                                        <FaTrashAlt />\n                                      </StyledIconButtonSpan>\n                                    )}\n                                  </div>\n                                )}\n                            </Col>\n                          </Form.Row>\n                        </ListGroup.Item>\n                      </ListGroup>\n                    ))}\n\n                    <StyledButton\n                      block\n                      variant=\"link\"\n                      onClick={() => {\n                        push({\n                          idx: uuidv1(), // Creates an RFC version 1 (timestamp) UUID.,\n                          name: \"\",\n                          totalAmount: 0,\n                        });\n                      }}\n                    >\n                      Add another person\n                    </StyledButton>\n                  </div>\n                )}\n              </FieldArray>\n              <StyledButton\n                type=\"button\"\n                onClick={handleSubmit}\n                variant=\"secondary\"\n                className=\"mt-4 mb-1 float-right\"\n              >\n                Done\n              </StyledButton>\n            </Form>\n          )}\n        </Formik>\n      </StyledModal.Body>\n    </StyledModal>\n  );\n}\n\nexport default EditPeopleModal;\n","import React, { useState, useRef, useContext } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css\";\nimport { FaFileCsv, FaPrint } from \"react-icons/fa\";\nimport { BsFillPeopleFill } from \"react-icons/bs\";\nimport { MdEdit } from \"react-icons/md\";\nimport { StyledButton, StyledIconButtonSpan } from \"../../components/Button\";\nimport TotalBalance from \"../../components/TotalBalance\";\nimport ReactToPrint from \"react-to-print\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport emptyTable from \"../../assets/empty-table.svg\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport ReceiptsTableData from \"./ReceiptsTableData\";\nimport { ThemeContext } from \"styled-components\";\nimport { UserContext } from \"../../UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport PeopleModal from \"./PeopleModal\";\n\nfunction ReceiptsTable(props) {\n  const themeContext = useContext(ThemeContext);\n  const { userObject } = useContext(UserContext);\n  const history = useHistory();\n\n  const isUsersCalculation =\n    userObject &&\n    userObject.calculations &&\n    userObject.calculations.includes(props.calculationObject._id);\n\n  // Table properties\n  const columns = ReceiptsTableData(props);\n  const printComponentRef = useRef();\n  const { SearchBar } = Search;\n  const ExportCSVButton = (props) => {\n    const handleClick = () => {\n      props.onExport();\n    };\n    return (\n      <StyledButton className=\"btn-sm\" variant=\"link\" onClick={handleClick}>\n        <div className=\"d-flex align-items-center\">\n          <FaFileCsv className=\"mr-1\" /> Export CSV\n        </div>\n      </StyledButton>\n    );\n  };\n  const cellEdit = cellEditFactory({\n    mode: \"click\",\n    blurToSave: true,\n    afterSaveCell: (oldValue, newValue, row) => {\n      props.onEditReceipt(row);\n    },\n  });\n\n  // Table save / edits\n  const [editTitle, setEditTitle] = useState(false);\n\n  function toggleEditTitle() {\n    setEditTitle((prevEditTitle) => !prevEditTitle);\n  }\n\n  // Modal\n  const [showPeopleModal, setShowPeopleModal] = useState(false);\n\n  function handleShowPeopleModal(personIdx) {\n    setShowPeopleModal(true);\n  }\n  function handleClosePeopleModal() {\n    setShowPeopleModal(false);\n  }\n\n  return (\n    <>\n      <ToolkitProvider\n        keyField=\"id\"\n        bootstrap4={true}\n        data={props.calculationObject.receipts}\n        columns={columns}\n        exportCSV={{\n          fileName: props.calculationObject.title + \".csv\",\n          ignoreFooter: false,\n        }}\n        search\n      >\n        {(toolkitprops) => (\n          <div ref={printComponentRef}>\n            <Container fluid className=\"px-0\">\n              {/* Title */}\n              <Row>\n                <Col xs={12} sm={6}>\n                  <div className=\"d-inline-flex\">\n                    {/* Title  */}\n                    {editTitle ? (\n                      <OutsideClickHandler\n                        onOutsideClick={(e) => {\n                          props.onSaveCalculationObject();\n                          setEditTitle(false);\n                        }}\n                      >\n                        <Form.Group>\n                          <Form.Control\n                            autoFocus\n                            defaultValue={props.calculationObject.title}\n                            onChange={(e) => props.onEditCalculationTitle(e)}\n                            onKeyPress={(e) => {\n                              if (e.key === \"Enter\") {\n                                props.onSaveCalculationObject();\n                                toggleEditTitle();\n                              }\n                            }}\n                            onFocus={(e) => {\n                              e.target.select();\n                            }}\n                          />\n                        </Form.Group>\n                      </OutsideClickHandler>\n                    ) : (\n                      <>\n                        <h4\n                          onClick={() => {\n                            if (props.editMode) toggleEditTitle();\n                          }}\n                        >\n                          {props.calculationObject.title}\n                        </h4>\n                        {props.editMode && (\n                          <StyledIconButtonSpan\n                            onClick={toggleEditTitle}\n                            className=\"hide-on-print\"\n                          >\n                            <MdEdit className=\"ml-2\" />\n                          </StyledIconButtonSpan>\n                        )}\n                      </>\n                    )}\n                  </div>\n                </Col>\n                <Col xs={12} sm={6}>\n                  {/* Show the edit calculation button only if user is logged in\n                  and owns the calculation */}\n                  {isUsersCalculation && !props.editMode && (\n                    <div className=\"float-right\">\n                      <StyledButton\n                        variant={themeContext.toggleButton}\n                        className=\"hide-on-print\"\n                        size=\"sm\"\n                        onClick={() => {\n                          history.push(\n                            `/calculation/${props.calculationObject._id}/edit`\n                          );\n                        }}\n                      >\n                        <div className=\"d-flex align-items-center\">\n                          <MdEdit className=\"mr-1\" /> Edit\n                        </div>\n                      </StyledButton>\n                    </div>\n                  )}\n                </Col>\n              </Row>\n              {/* People button */}\n              <Row className=\"pb-1 mb-2\">\n                <Col xs={12} sm={6}>\n                  <StyledButton\n                    className=\"btn-sm px-0 py-0\"\n                    variant=\"link\"\n                    onClick={handleShowPeopleModal}\n                  >\n                    <div className=\"d-flex align-items-center\">\n                      <BsFillPeopleFill className=\"mr-1\" />{\" \"}\n                      {props.calculationObject.people.length} people\n                    </div>\n                  </StyledButton>\n                </Col>\n              </Row>\n              {/* Search Bar and Print/Export Buttons */}\n              <Row className=\"mb-3 hide-on-print\">\n                <Col xs={12} sm={6}>\n                  <div className=\"form-inline\">\n                    <div className=\"form-group\">\n                      <SearchBar\n                        className=\"form-control-sm\"\n                        {...toolkitprops.searchProps}\n                      />\n                    </div>\n                  </div>\n                </Col>\n                <Col xs={12} sm={6}>\n                  <div className=\"float-right\">\n                    <ExportCSVButton {...toolkitprops.csvProps} />\n                    <ReactToPrint\n                      trigger={() => (\n                        <StyledButton size=\"sm\" variant=\"link\">\n                          <div className=\"d-flex align-items-center\">\n                            <FaPrint className=\"mr-1\" /> Print\n                          </div>\n                        </StyledButton>\n                      )}\n                      content={() => printComponentRef.current}\n                      documentTitle={props.calculationObject.title}\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <BootstrapTable\n                    {...toolkitprops.baseProps}\n                    cellEdit={cellEdit}\n                    bordered={false}\n                    condensed\n                    noDataIndication={() => (\n                      <div>\n                        <h4 className=\"mt-4\">\n                          {toolkitprops.searchProps.searchText\n                            ? \"No records found.\"\n                            : props.editMode\n                            ? \"Add a receipt to begin.\"\n                            : \"No receipts to show.\"}\n                        </h4>\n                        <img\n                          className=\"mx-auto d-block mt-3\"\n                          src={emptyTable}\n                          width=\"270\"\n                          height=\"270\"\n                          alt=\"Empty table.\"\n                        />\n                      </div>\n                    )}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <div>\n                    <TotalBalance calculationObject={props.calculationObject} />\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        )}\n      </ToolkitProvider>\n\n      {/* Modals - Edit people */}\n      <PeopleModal\n        {...props}\n        showModal={showPeopleModal}\n        isUsersCalculation={isUsersCalculation}\n        onCloseModal={handleClosePeopleModal}\n      />\n    </>\n  );\n}\n\nexport default ReceiptsTable;\n","import Spinner from \"react-bootstrap/Spinner\";\n\nexport const StyledSpinner = () => {\n  return (\n    <div className=\"d-flex justify-content-center align-items-center h-75\">\n      <Spinner animation=\"grow\" variant=\"success\" />\n    </div>\n  );\n};\n","import React, { useState, useRef, useContext, useEffect, useMemo } from \"react\";\nimport Calculator from \"../components/Calculator\";\nimport ReceiptsTable from \"../components/ReceiptsTable\";\nimport { StyledButton } from \"../components/Button\";\nimport { StyledCard } from \"../components/Card\";\nimport { StyledSpinner } from \"../components/Spinner\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { UserContext } from \"../UserContext\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport * as api from \"../api\";\nimport { useStateCallback, usePrevious } from \"../hooks\";\nimport { v1 as uuidv1 } from \"uuid\";\n\nfunction Home(props) {\n  const {\n    userObject,\n    loadingUserObject,\n    getAuthenticatedUserObject,\n  } = useContext(UserContext);\n\n  const defaultCalculationObject = useMemo(() => {\n    return {\n      title: \"Untitled\",\n      _id: null,\n      receipts: [],\n      people: [\n        {\n          idx: 0,\n          name: \"Me\",\n          totalAmount: 0,\n        },\n        {\n          idx: 1,\n          name: \"User 2\",\n          totalAmount: 0,\n        },\n      ],\n    };\n  }, []);\n\n  const [calculationObject, setCalculationObject] = useStateCallback(\n    defaultCalculationObject\n  );\n  const prevState = usePrevious({ calculationObject });\n  const [showAlert, setShowAlert] = useState(true);\n  const [editMode, setEditMode] = useState(true);\n  const [errorMessage, setErrorMessage] = useState();\n  const calculatorRef = useRef(); // Used to calculate balance owed\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    async function getCalculationObject(id) {\n      try {\n        const res = await api.getCalculation(id);\n        if (res.data) {\n          setCalculationObject(res.data);\n        }\n      } catch (err) {\n        history.push(\"/not-found\");\n      }\n    }\n\n    if (id) {\n      getCalculationObject(id);\n      // Check if URL contains 'edit'\n      if (window.location.href.indexOf(\"edit\") !== -1) {\n        if (!loadingUserObject) {\n          // If the user is logged in and the calculation id is owned by user,\n          // allow the user to edit.\n          if (\n            userObject?.calculations?.some(\n              (calculationId) => calculationId === id\n            )\n          ) {\n            setEditMode(true);\n          } else {\n            // Else redirect to login page.\n            history.push(\"/login\");\n          }\n        }\n      } else {\n        // Show a created calculation page.\n        setEditMode(false);\n      }\n    } else {\n      // Show a brand new calculate page.\n      setCalculationObject(defaultCalculationObject);\n      setEditMode(true);\n    }\n  }, [\n    id,\n    history,\n    userObject,\n    loadingUserObject,\n    defaultCalculationObject,\n    history.location, // This tracks URL name change (i.e. from edit to not edit)\n    setCalculationObject,\n  ]);\n\n  // Adds a new receipt to the calculation's receipts list.\n  function addReceipt(newReceipt) {\n    setCalculationObject(\n      (prevCalcObj) => {\n        const prevReceipts = prevCalcObj.receipts;\n        newReceipt.total = parseFloat(newReceipt.total).toFixed(2);\n        newReceipt.id = uuidv1(); // Creates an RFC version 1 (timestamp) UUID.\n\n        // Add the new receipt's people amount to the calc object's people's totalAmount.\n        const updatedPeople = [...prevCalcObj.people].map((person) => {\n          return {\n            ...person,\n            totalAmount:\n              person.totalAmount + newReceipt.people[person.idx].amount,\n          };\n        });\n\n        return {\n          ...prevCalcObj,\n          receipts: [...prevReceipts, newReceipt],\n          people: updatedPeople,\n        };\n      },\n      (latestCalcObjectState) => {\n        if (id) updateCalculationObject(latestCalcObjectState);\n      }\n    );\n  }\n\n  // Edits a receipt in the receipts list with updated balance calculation.\n  function editReceipt(newReceipt) {\n    setCalculationObject(\n      (prevCalcObj) => {\n        let updatedPeople = [...prevCalcObj.people];\n\n        const updatedReceipts = [...prevCalcObj.receipts].map((receipt) => {\n          if (receipt.id !== newReceipt.id) {\n            return receipt;\n          }\n\n          // Remove from totalAmount for each person the old receipt value.\n          updatedPeople = updatedPeople.map((person) => {\n            return {\n              ...person,\n              totalAmount:\n                person.totalAmount - receipt.people[person.idx].amount,\n            };\n          });\n\n          const updatedCalculations = calculatorRef.current.calculateBalanceOwed(\n            newReceipt\n          );\n\n          return {\n            ...newReceipt,\n            ...updatedCalculations,\n          };\n        });\n\n        // Add to totalAmount for each person the new receipt value.\n        updatedPeople = updatedPeople.map((person) => {\n          return {\n            ...person,\n            totalAmount:\n              person.totalAmount + newReceipt.people[person.idx].amount,\n          };\n        });\n\n        return {\n          ...prevCalcObj,\n          receipts: updatedReceipts,\n          people: updatedPeople,\n        };\n      },\n      (latestCalcObjectState) => {\n        if (id) updateCalculationObject(latestCalcObjectState);\n      }\n    );\n  }\n\n  // Deletes a receipt from the calculation's receipts list.\n  function deleteReceipt(idToDelete) {\n    setCalculationObject(\n      (prevCalcObj) => {\n        let updatedPeople = [...prevCalcObj.people];\n\n        const updatedReceipts = [...prevCalcObj.receipts].filter((receipt) => {\n          if (idToDelete === receipt.id) {\n            // Update the totalAmount for each person.\n            updatedPeople = updatedPeople.map((person) => {\n              return {\n                ...person,\n                totalAmount:\n                  person.totalAmount - receipt.people[person.idx].amount,\n              };\n            });\n          }\n\n          return idToDelete !== receipt.id;\n        });\n\n        return {\n          ...prevCalcObj,\n          receipts: updatedReceipts,\n          people: updatedPeople,\n        };\n      },\n      (latestCalcObjectState) => {\n        if (id) updateCalculationObject(latestCalcObjectState);\n      }\n    );\n  }\n\n  // Sets the calculationObject's title.\n  function editCalculationTitle(event) {\n    const value = event.target.value ? event.target.value : \"Untitled\";\n\n    setCalculationObject((prevCalcObj) => {\n      return { ...prevCalcObj, title: value };\n    });\n  }\n\n  // TODO needs to update receipts people\n  function updateCalculationPeople(updatedPeople) {\n    setCalculationObject((prevCalcObj) => {\n      console.log(prevCalcObj.people);\n      console.log(updatedPeople);\n      return {\n        ...prevCalcObj,\n        people: updatedPeople,\n      };\n    });\n  }\n\n  // Called when a calculationObject person's name changes.\n  // function editPersonName(event, personIdx) {\n  //   const value = event.target.value;\n  //\n  //   setCalculationObject(\n  //     (prevCalcObj) => {\n  //       // Change the name of the person in calculationObject.people array.\n  //       let updatedPeople = [...prevCalcObj.people];\n  //       updatedPeople[personIdx].name = value;\n  //\n  //       // Change every occurence of the name in calculationObject's receipts.people.\n  //       const updatedReceipts = [...prevCalcObj.receipts].map((receipt) => {\n  //         let updatedReceiptPeople = [...receipt.people];\n  //         let updatedReceiptBuyer = receipt.buyer;\n  //\n  //         updatedReceiptPeople[personIdx].name = value;\n  //\n  //         // Update the buyer's name if need be.\n  //         if (updatedReceiptPeople[personIdx].isBuyer) {\n  //           updatedReceiptBuyer = value;\n  //         }\n  //\n  //         return {\n  //           ...receipt,\n  //           people: updatedReceiptPeople,\n  //           buyer: updatedReceiptBuyer,\n  //         };\n  //       });\n  //\n  //       return {\n  //         ...prevCalcObj,\n  //         people: updatedPeople,\n  //         receipts: updatedReceipts,\n  //       };\n  //     },\n  //     (latestCalcObjectState) => {\n  //       if (id) updateCalculationObject(latestCalcObjectState);\n  //     }\n  //   );\n  // }\n\n  // Creates and saves a calculation object for the user.\n  async function createCalculationObject() {\n    try {\n      await api.createCalculation(calculationObject);\n      // Refresh the userObject when making changes to it.\n      await getAuthenticatedUserObject();\n      history.push(`/user/${userObject._id}`);\n    } catch (err) {\n      if (err.response?.data?.message) {\n        setErrorMessage(err.response.data.message);\n      } else {\n        setErrorMessage(\"An unexpected error occurred.\");\n      }\n    }\n  }\n\n  // Updates the user's calculation object.\n  async function updateCalculationObject(latestCalcObjectState) {\n    try {\n      await api.updateCalculation(latestCalcObjectState);\n    } catch (err) {\n      if (err.response?.data?.message) {\n        setErrorMessage(err.response.data.message);\n      } else {\n        setErrorMessage(\"An unexpected error occurred.\");\n      }\n    }\n  }\n\n  // Sets the current calculation object's state in the DB.\n  // Called when user is done editing the calculation title.\n  function saveCurrentCalculationObject() {\n    // Only save to the database if the calcObject state actually got updated.\n    if (\n      prevState &&\n      JSON.stringify(prevState.calculationObject) !==\n        JSON.stringify(calculationObject)\n    ) {\n      setCalculationObject(\n        (prevCalcObj) => {\n          return { ...prevCalcObj };\n        },\n        (latestCalcObjectState) => {\n          if (id) updateCalculationObject(latestCalcObjectState);\n        }\n      );\n    }\n  }\n\n  return (\n    <>\n      {loadingUserObject ? (\n        <StyledSpinner />\n      ) : (\n        <>\n          {/* Alert message - login/signup */}\n          {/* Show alert only when user is not logged and is in the homepage. */}\n          {!userObject && showAlert && editMode && (\n            <Alert\n              variant=\"info\"\n              onClose={() => setShowAlert(false)}\n              dismissible\n              className=\"d-flex align-items-center\"\n            >\n              <BsInfoCircle className=\"mr-2\" /> You are not logged in.\n              <Alert.Link href=\"/login\" className=\"mx-1\">\n                Log in\n              </Alert.Link>\n              or\n              <Alert.Link href=\"/signup\" className=\"mx-1\">\n                sign up\n              </Alert.Link>{\" \"}\n              to save your calculations.\n            </Alert>\n          )}\n\n          {errorMessage && (\n            <Alert\n              variant=\"danger\"\n              dismissible\n              onClose={() => setErrorMessage(null)}\n              className=\"d-flex align-items-center\"\n            >\n              <IoWarningOutline className=\"mr-2\" />\n              {errorMessage}\n            </Alert>\n          )}\n\n          {/* Main dashboard */}\n          <Row>\n            {editMode && (\n              <Col md={4}>\n                <StyledCard $main>\n                  <Calculator\n                    onAdd={addReceipt}\n                    ref={calculatorRef}\n                    calculationObject={calculationObject}\n                  />\n                </StyledCard>\n              </Col>\n            )}\n            <Col md={editMode && 8}>\n              <StyledCard $main className=\"pb-3\">\n                <ReceiptsTable\n                  calculationObject={calculationObject}\n                  onDeleteReceipt={deleteReceipt}\n                  onEditReceipt={editReceipt}\n                  onEditCalculationTitle={editCalculationTitle}\n                  editMode={editMode}\n                  onUpdatePeople={updateCalculationPeople}\n                  onSaveCalculationObject={saveCurrentCalculationObject}\n                />\n\n                {userObject && !id && (\n                  <StyledButton\n                    $primary\n                    size=\"lg\"\n                    onClick={createCalculationObject}\n                  >\n                    Publish\n                  </StyledButton>\n                )}\n              </StyledCard>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/spaceman.7cfe5c57.svg\";","import React from \"react\";\nimport spaceman from \"../assets/spaceman.svg\";\nimport { useDocumentTitle } from \"../hooks\";\n\nfunction NoMatch() {\n  // Set the document title\n  useDocumentTitle(\"Receipt Hero - Not Found\");\n\n  return (\n    <div className=\"d-flex flex-column justify-content-center mt-5\">\n      <h1 className=\"text-center mt-5\">Page not found</h1>\n      <img\n        className=\"mx-auto d-block mt-4\"\n        src={spaceman}\n        width=\"270\"\n        height=\"270\"\n        alt=\"logo\"\n      />\n    </div>\n  );\n}\n\nexport default NoMatch;\n","const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", (error) => reject(error));\n    image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url;\n  });\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport async function getCroppedImage(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const maxSize = Math.max(image.width, image.height);\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea;\n  canvas.height = safeArea;\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  );\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  );\n\n  // As Base64 string\n  return canvas.toDataURL(\"image/jpeg\");\n\n  // As a blob\n  // return new Promise((resolve) => {\n  //   canvas.toBlob((file) => {\n  //     resolve(URL.createObjectURL(file));\n  //   }, \"image/png\");\n  // });\n}\n\nexport async function getRotatedImage(imageSrc, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const orientationChanged =\n    rotation === 90 ||\n    rotation === -90 ||\n    rotation === 270 ||\n    rotation === -270;\n  if (orientationChanged) {\n    canvas.width = image.height;\n    canvas.height = image.width;\n  } else {\n    canvas.width = image.width;\n    canvas.height = image.height;\n  }\n\n  ctx.translate(canvas.width / 2, canvas.height / 2);\n  ctx.rotate((rotation * Math.PI) / 180);\n  ctx.drawImage(image, -image.width / 2, -image.height / 2);\n\n  return new Promise((resolve) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file));\n    }, \"image/png\");\n  });\n}\n","import React, { useState, useCallback, useContext, useRef } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { FormTextField } from \"../../components/Form\";\nimport Cropper from \"react-easy-crop\";\nimport { getOrientation } from \"get-orientation/browser\";\nimport { getCroppedImage, getRotatedImage } from \"./canvasUtils\";\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\nimport { StyledButton } from \"../../components/Button\";\nimport { StyledModal } from \"../../components/Modal\";\nimport { ThemeContext } from \"styled-components\";\nimport { MdEdit } from \"react-icons/md\";\nimport {\n  createAvatarComponent,\n  SrcSource,\n  GoogleSource,\n  FacebookSource,\n  ValueSource,\n} from \"react-avatar\";\n\nconst Avatar = createAvatarComponent({\n  sources: [SrcSource, GoogleSource, FacebookSource, ValueSource], // image fallback order\n});\n\nconst ORIENTATION_TO_ANGLE = {\n  \"3\": 180,\n  \"6\": 90,\n  \"8\": -90,\n};\n\n// Formik validation schema\nconst validationSchema = yup.object({\n  firstName: yup\n    .string()\n    .max(15, \"Must be 15 characters or less\")\n    .required(\"Required\"),\n  lastName: yup\n    .string()\n    .max(20, \"Must be 20 characters or less\")\n    .required(\"Required\"),\n  email: yup.string().email(\"Invalid email address\").required(\"Required\"),\n  profileImage: yup.mixed(),\n});\n\nfunction readFile(file) {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => resolve(reader.result), false);\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction ProfilePane(props) {\n  const themeContext = useContext(ThemeContext);\n  const [imageSource, setImageSource] = useState();\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState();\n  const [showModal, setShowModal] = useState(false); // \"Crop Image\" modal\n  // Toggle dropdown on hover\n  const [showDropdown, setShowDropdown] = useState(false);\n  // Create a reference to the hidden file input element\n  const hiddenFileInput = useRef(null);\n  const formRef = useRef(); // Attached to <Formik>\n\n  const editImageButtonStyle = {\n    border: \"1px solid\" + themeContext.borderColor,\n    background: themeContext.body,\n    color: themeContext.text,\n    position: \"absolute\",\n    bottom: 0, // 10 for left\n    right: 0, // 140 for left\n    borderRadius: \"10%\",\n  };\n\n  const defaultUserSettings = {\n    firstName: props.userObject.firstName,\n    lastName: props.userObject.lastName,\n    email: props.userObject.email,\n    profileImage: props.userObject.profileImage,\n  };\n\n  const handleFileChange = async (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0];\n      const fileSize = file.size / 1024 / 1024; // in MiB\n\n      // Check file size is under 1 MB.\n      if (fileSize > 1) {\n        props.setErrorMessage(\"Please upload a picture smaller than 1 MB.\");\n      } else {\n        let imageDataUrl = await readFile(file);\n\n        // apply rotation if needed\n        const orientation = await getOrientation(file);\n        const rotation = ORIENTATION_TO_ANGLE[orientation];\n        if (rotation) {\n          imageDataUrl = await getRotatedImage(imageDataUrl, rotation);\n        }\n\n        setImageSource(imageDataUrl);\n        setShowModal(true);\n      }\n\n      e.target.value = null; // Clear the file from the file input\n    }\n  };\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  const setCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImage(\n        imageSource,\n        croppedAreaPixels\n      );\n\n      // Sets Formik \"profileImage\" key.\n      formRef.current.setFieldValue(\"profileImage\", croppedImage, false);\n    } catch (err) {\n      if (err.response?.data?.message) {\n        props.setErrorMessage(err.response.data.message);\n      } else {\n        props.setErrorMessage(\"An unexpected error occurred.\");\n      }\n    }\n  }, [props, imageSource, croppedAreaPixels]);\n\n  function handleCloseModal() {\n    setImageSource();\n    setShowModal(false);\n  }\n\n  return (\n    <>\n      <Formik\n        validationSchema={validationSchema}\n        initialValues={defaultUserSettings}\n        innerRef={formRef}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          props.handleSubmitUserSettings(values).then(() => {\n            setSubmitting(false);\n          });\n        }}\n      >\n        {({ handleSubmit, isSubmitting, values, setFieldValue }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Row>\n              <Col xs={{ span: 12, order: 2 }} md={{ span: 7, order: 1 }}>\n                {/* First Name */}\n                <FormTextField label=\"First Name\" name=\"firstName\" />\n\n                {/* Last Name */}\n                <FormTextField label=\"Last Name\" name=\"lastName\" />\n\n                {/* Email */}\n                <FormTextField label=\"Email\" name=\"email\" />\n              </Col>\n              <Col xs={{ span: 12, order: 1 }} md={{ span: 5, order: 2 }}>\n                <Form.Group>\n                  <Form.Label>Profile Image</Form.Label>\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Avatar\n                      size={200}\n                      src={values.profileImage}\n                      googleId={props.userObject.googleId}\n                      facebookId={props.userObject.facebookId}\n                      name={`${props.userObject.firstName} ${props.userObject.lastName}`}\n                      round={true}\n                      className=\"my-2\"\n                      style={{ flex: \"0 0 auto\" }} // Prevents crushing Avatar circle on shrink.\n                    />\n                    <Dropdown\n                      show={showDropdown}\n                      onMouseEnter={() => {\n                        setShowDropdown(true);\n                      }}\n                      onMouseLeave={() => {\n                        setShowDropdown(false);\n                      }}\n                    >\n                      <Dropdown.Toggle\n                        style={editImageButtonStyle}\n                        bsPrefix=\"py-0 px-1\"\n                      >\n                        <div className=\"d-flex align-items-center\">\n                          <MdEdit className=\"mr-1\" /> Edit\n                        </div>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onClick={(e) => {\n                            // Programatically click the hidden file input element\n                            // when the Button component is clicked\n                            hiddenFileInput.current.click();\n                          }}\n                        >\n                          Upload a photo\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (\n                              window.confirm(\n                                \"Are you sure you want to reset your current avatar?\"\n                              )\n                            ) {\n                              setFieldValue(\"profileImage\", null, false);\n                            }\n                          }}\n                        >\n                          Revert to original\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                      <Form.File\n                        accept=\"image/*\"\n                        name=\"profileImage\"\n                        onChange={handleFileChange}\n                        ref={hiddenFileInput}\n                        hidden\n                      />\n                    </Dropdown>\n                  </div>\n                </Form.Group>\n              </Col>\n            </Row>\n            {/* Save Button */}\n            <StyledButton\n              $primary\n              type=\"submit\"\n              className=\"mt-2\"\n              size=\"lg\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? \"Loading...\" : \"Save\"}\n            </StyledButton>\n          </Form>\n        )}\n      </Formik>\n      {/* Modal - Crop image */}\n      <StyledModal show={showModal} onHide={handleCloseModal}>\n        <StyledModal.Header closeButton>\n          <StyledModal.Title as={\"h5\"}>\n            Crop your new profile picture\n          </StyledModal.Title>\n        </StyledModal.Header>\n        <StyledModal.Body>\n          <div\n            style={{\n              position: \"relative\",\n              width: \"100%\",\n              height: 400,\n              background: themeContext.borderColor,\n            }}\n          >\n            <Cropper\n              image={imageSource}\n              crop={crop}\n              zoom={zoom}\n              aspect={1 / 1}\n              cropShape=\"round\"\n              showGrid={false}\n              onCropChange={setCrop}\n              onCropComplete={onCropComplete}\n              onZoomChange={setZoom}\n            />\n          </div>\n          <div\n            style={{\n              padding: 16,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"stretch\",\n            }}\n          >\n            <Form.Group\n              as={Row}\n              style={{ display: \"flex\", flex: \"1\", alignItems: \"center\" }}\n            >\n              <Form.Label column sm=\"4\">\n                Zoom\n              </Form.Label>\n              <Col sm=\"8\">\n                <RangeSlider\n                  value={zoom}\n                  min={1}\n                  max={3}\n                  step={0.1}\n                  onChange={(e, zoom) => setZoom(zoom)}\n                  tooltip=\"off\"\n                  variant=\"success\"\n                  style={{ padding: \"22px 0px\", marginLeft: 16 }}\n                />\n              </Col>\n            </Form.Group>\n          </div>\n          <StyledButton\n            variant=\"success\"\n            onClick={() => {\n              setCroppedImage();\n              handleCloseModal();\n            }}\n            block\n          >\n            Done\n          </StyledButton>\n        </StyledModal.Body>\n      </StyledModal>\n    </>\n  );\n}\n\nexport default ProfilePane;\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { FormTextField } from \"../../components/Form\";\nimport { StyledButton } from \"../../components/Button\";\n\n// Formik validation schema\nconst validationSchema = yup.object({\n  currentPassword: yup.string().required(\"Required\"),\n  newPassword: yup.string().required(\"Required\"),\n  confirmNewPassword: yup\n    .string()\n    .test(\"passwords-match\", \"Passwords must match\", function (value) {\n      return this.parent.newPassword === value;\n    }),\n});\n\nconst defaultPassword = {\n  currentPassword: \"\",\n  newPassword: \"\",\n  confirmNewPassword: \"\",\n};\n\nfunction PasswordPane(props) {\n  return (\n    <>\n      <Formik\n        validationSchema={validationSchema}\n        initialValues={defaultPassword}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          props.handleSubmitPassword(values).then(() => {\n            setSubmitting(false);\n            resetForm(defaultPassword);\n          });\n        }}\n      >\n        {({ handleSubmit, isSubmitting, isValid, errors, values }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Row>\n              <FormTextField\n                as={Col}\n                md={7}\n                label=\"Current Password\"\n                name=\"currentPassword\"\n                type=\"password\"\n              />\n\n              <FormTextField\n                as={Col}\n                md={7}\n                label=\"New Password\"\n                name=\"newPassword\"\n                type=\"password\"\n                isValid={!errors.confirmNewPassword && values.newPassword}\n              />\n\n              <FormTextField\n                as={Col}\n                md={7}\n                label=\"Confirm New Password\"\n                name=\"confirmNewPassword\"\n                type=\"password\"\n                isValid={\n                  !errors.confirmNewPassword && values.confirmNewPassword\n                }\n              />\n            </Form.Row>\n\n            {/* Save Button */}\n            <StyledButton\n              $primary\n              type=\"submit\"\n              className=\"mt-2\"\n              size=\"lg\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? \"Loading...\" : \"Save\"}\n            </StyledButton>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\nexport default PasswordPane;\n","import React, { useState, useContext } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Row from \"react-bootstrap/Row\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { StyledButton } from \"../../components/Button\";\nimport { StyledCard } from \"../../components/Card\";\nimport { UserContext } from \"../../UserContext\";\nimport { ThemeContext } from \"styled-components\";\nimport ProfilePane from \"./ProfilePane\";\nimport PasswordPane from \"./PasswordPane\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { FcCheckmark } from \"react-icons/fc\";\nimport { StyledModal } from \"../../components/Modal\";\nimport * as api from \"../../api\";\nimport { useDocumentTitle } from \"../../hooks\";\n\nfunction Settings() {\n  const { userObject, getAuthenticatedUserObject } = useContext(UserContext);\n  const themeContext = useContext(ThemeContext);\n\n  const [showModal, setShowModal] = useState(false); // \"Successfully Saved\" modal\n  const [errorMessage, setErrorMessage] = useState();\n  const [documentTitle, setDocumentTitle] = useState(\n    \"Receipt Hero - Edit Profile\"\n  );\n\n  // Sets the document title\n  useDocumentTitle(documentTitle);\n\n  // Saves userSettings to backend.\n  async function handleSubmitUserSettings(userSettings) {\n    try {\n      await api.updateUser({ ...userObject, ...userSettings });\n      getAuthenticatedUserObject();\n      setShowModal(true);\n    } catch (err) {\n      if (err.response?.data?.message)\n        setErrorMessage(err.response.data.message);\n    }\n  }\n\n  // Saves new password to backend.\n  async function handleSubmitPassword(password) {\n    try {\n      await api.updatePassword(password);\n      setShowModal(true);\n    } catch (err) {\n      if (err.response?.data?.message) {\n        setErrorMessage(err.response.data.message);\n      }\n    }\n  }\n\n  // Called when a tab is pressed.\n  function handleSelect(eventKey) {\n    setDocumentTitle(`Receipt Hero - ${eventKey}`);\n    setErrorMessage(null);\n  }\n\n  // Closes the \"Successfully saved\" modal.\n  function handleCloseModal() {\n    setErrorMessage(null);\n    setShowModal(false);\n  }\n\n  function AlertMessage() {\n    return errorMessage ? (\n      <Alert\n        variant=\"danger\"\n        onClose={() => setErrorMessage(null)}\n        className=\"d-flex align-items-center\"\n        dismissible\n      >\n        <IoWarningOutline className=\"mr-2\" />\n        {errorMessage}\n      </Alert>\n    ) : null;\n  }\n\n  return (\n    <>\n      <StyledCard $main>\n        <Tab.Container defaultActiveKey=\"Edit Profile\">\n          <Row>\n            <Col\n              sm={3}\n              style={{ borderRight: \"1px solid\" + themeContext.borderColor }}\n            >\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"Edit Profile\" onSelect={handleSelect}>\n                    Profile\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"Change Password\" onSelect={handleSelect}>\n                    Password\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm={9} className=\"pl-4\">\n              <Tab.Content>\n                <Tab.Pane eventKey=\"Edit Profile\">\n                  <h3 className=\"mb-2\">Edit Profile</h3>\n                  <hr />\n                  <AlertMessage />\n                  <ProfilePane\n                    userObject={userObject}\n                    setErrorMessage={setErrorMessage}\n                    handleSubmitUserSettings={handleSubmitUserSettings}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"Change Password\">\n                  <h3 className=\"mb-2\">Change Password</h3>\n                  <hr />\n                  <AlertMessage />\n                  <PasswordPane handleSubmitPassword={handleSubmitPassword} />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n      </StyledCard>\n\n      {/* Modal - Successful update */}\n      <StyledModal show={showModal} onHide={handleCloseModal} size=\"sm\">\n        <StyledModal.Body>\n          <div className=\"text-center\">\n            <FcCheckmark className=\"mt-3\" size={56} />\n\n            <h5 className=\"mt-4 mb-0\">Your settings have been saved.</h5>\n          </div>\n        </StyledModal.Body>\n        <StyledModal.Footer>\n          <StyledButton variant=\"secondary\" onClick={handleCloseModal}>\n            OK\n          </StyledButton>\n        </StyledModal.Footer>\n      </StyledModal>\n    </>\n  );\n}\n\nexport default Settings;\n","export default __webpack_public_path__ + \"static/media/inkpot.ccc12094.svg\";","import React, { useEffect, useState } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css\";\nimport inkpot from \"../assets/inkpot.svg\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { StyledButton, StyledIconButtonSpan } from \"../components/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { StyledCard } from \"../components/Card\";\nimport { StyledSpinner } from \"../components/Spinner\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { MdEdit } from \"react-icons/md\";\nimport { StyledModal } from \"../components/Modal\";\nimport { useDocumentTitle } from \"../hooks\";\nimport * as api from \"../api\";\n\nfunction User(props) {\n  const { id } = useParams();\n  const [userProfile, setUserProfile] = useState();\n  const [documentTitle, setDocumentTitle] = useState(\n    \"Calculations - Receipt Hero\"\n  );\n  const [calculationIdToDelete, setCalculationIdToDelete] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  useEffect(() => {\n    async function getUserObject(id) {\n      try {\n        const res = await api.getUser(id);\n        if (res.data) {\n          setUserProfile(res.data);\n          setDocumentTitle(\n            `${res.data.firstName}'s Calculations - Receipt Hero`\n          );\n        }\n        setLoading(false);\n      } catch (err) {\n        history.push(\"/not-found\");\n      }\n    }\n\n    getUserObject(id);\n  }, [id, history]);\n\n  // Set the document title\n  useDocumentTitle(documentTitle);\n\n  const handleCloseModal = () => {\n    setCalculationIdToDelete(null);\n    setShowModal(false);\n  };\n\n  const handleShowModal = (calculationId = null) => {\n    if (calculationId) setCalculationIdToDelete(calculationId);\n    setShowModal(true);\n  };\n\n  const handleEditPressed = (id) => {\n    history.push(`/calculation/${id}/edit`);\n  };\n\n  const deleteCalculationObject = async () => {\n    if (calculationIdToDelete) {\n      // State, before deleting anything.\n      const currentCalculations = userProfile.calculations;\n\n      // Remove deleted item from state.\n      setUserProfile((prevValue) => {\n        return {\n          ...prevValue,\n          calculations: currentCalculations.filter(\n            (calculation) => calculation._id !== calculationIdToDelete\n          ),\n        };\n      });\n\n      try {\n        // Fire delete API.\n        await api.deleteCalculation(calculationIdToDelete);\n      } catch (err) {\n        // Something went wrong. Revert back to original state.\n        setUserProfile((prevValue) => {\n          return {\n            ...prevValue,\n            calculations: currentCalculations,\n          };\n        });\n\n        if (err.response?.data?.message) {\n          setErrorMessage(err.response.data.message);\n        } else {\n          setErrorMessage(\"Whoops! An unexpected error occurred.\");\n        }\n      }\n    }\n  };\n\n  const { SearchBar } = Search;\n  const cellStyle = {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n  };\n\n  const columns = [\n    { dataField: \"_id\", hidden: \"true\" },\n    {\n      dataField: \"title\",\n      text: \"Name\",\n      sort: true,\n      formatter: (cell, row) => (\n        <StyledButton className=\"py-0 px-0\" variant=\"link\">\n          {cell}\n        </StyledButton>\n      ),\n      events: {\n        onClick: (e, column, columnIndex, row, rowIndex) => {\n          history.push(\"/calculation/\" + row._id);\n        },\n      },\n    },\n    {\n      dataField: \"createdAt\",\n      text: \"Created\",\n      type: \"date\",\n      style: cellStyle,\n      sort: true,\n      formatter: (cell) => {\n        let dateObj = cell;\n        if (typeof cell !== \"object\") {\n          dateObj = new Date(cell);\n        }\n        return `${(\"0\" + (dateObj.getUTCMonth() + 1)).slice(-2)}/${(\n          \"0\" + dateObj.getUTCDate()\n        ).slice(-2)}/${dateObj.getUTCFullYear()}`;\n      },\n    },\n    {\n      dataField: \"deleteButton\",\n      text: \"\",\n      isDummyField: true,\n      editable: false,\n      searchable: false,\n      align: \"right\",\n      style: {\n        paddingRight: \"1rem\",\n      },\n      formatter: (cellContent, row) => {\n        return (\n          <>\n            <StyledIconButtonSpan\n              onClick={() => handleEditPressed(row._id)}\n              className=\"mr-3\"\n            >\n              <MdEdit />\n            </StyledIconButtonSpan>\n            <StyledIconButtonSpan\n              $delete\n              onClick={() => handleShowModal(row._id)}\n            >\n              <FaTrashAlt />\n            </StyledIconButtonSpan>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      {loading ? (\n        <StyledSpinner />\n      ) : (\n        <>\n          {/* Alert Error Message */}\n          {errorMessage && (\n            <Alert\n              variant=\"danger\"\n              onClose={() => setErrorMessage(null)}\n              className=\"d-flex align-items-center\"\n              dismissible\n            >\n              <IoWarningOutline className=\"mr-2\" />\n              {errorMessage}\n            </Alert>\n          )}\n\n          <StyledCard $main>\n            <ToolkitProvider\n              keyField=\"_id\"\n              bootstrap4={true}\n              data={userProfile.calculations}\n              columns={columns}\n              search\n            >\n              {(props) => (\n                <div>\n                  <h4 className=\"mb-4\">\n                    {userProfile.firstName}'s Calculations\n                  </h4>\n                  <div className=\"form-inline mb-3\">\n                    <div className=\"form-group\">\n                      <SearchBar\n                        className=\"form-control-sm\"\n                        {...props.searchProps}\n                      />\n                    </div>\n                  </div>\n\n                  <BootstrapTable\n                    {...props.baseProps}\n                    bordered={false}\n                    condensed\n                    noDataIndication={() => (\n                      <div>\n                        <h4 className=\"mt-4\">\n                          {props.searchProps.searchText\n                            ? \"No records found.\"\n                            : \"You have no calculations.\"}\n                        </h4>\n                        {!props.searchProps.searchText && (\n                          <Link to=\"/\">\n                            <span className=\"mt-3\">Create your first one.</span>\n                          </Link>\n                        )}\n\n                        <img\n                          className=\"mx-auto d-block my-4\"\n                          src={inkpot}\n                          width=\"270\"\n                          height=\"270\"\n                          alt=\"Create a new calculation.\"\n                        />\n                      </div>\n                    )}\n                  />\n                </div>\n              )}\n            </ToolkitProvider>\n          </StyledCard>\n\n          <StyledModal show={showModal} onHide={handleCloseModal}>\n            <StyledModal.Header closeButton>\n              <StyledModal.Title>Confirm deletion</StyledModal.Title>\n            </StyledModal.Header>\n\n            <StyledModal.Body>\n              <p>\n                Are you sure you want to permanently delete this calculation?\n              </p>\n            </StyledModal.Body>\n\n            <StyledModal.Footer>\n              <StyledButton variant=\"secondary\" onClick={handleCloseModal}>\n                Cancel\n              </StyledButton>\n              <StyledButton\n                variant=\"danger\"\n                onClick={() => {\n                  deleteCalculationObject();\n                  handleCloseModal();\n                }}\n              >\n                Delete\n              </StyledButton>\n            </StyledModal.Footer>\n          </StyledModal>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default User;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { FormTextField } from \"../components/Form\";\nimport logo from \"../assets/logo.svg\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { SignInContainer } from \"../components/Container\";\nimport { StyledButton } from \"../components/Button\";\nimport { StyledCard } from \"../components/Card\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport * as api from \"../api\";\nimport { useDocumentTitle } from \"../hooks\";\n\nconst defaultFormData = {\n  email: \"\",\n  password: \"\",\n};\n\nfunction ForgotPassword(props) {\n  const [isResetPassword, setIsResetPassword] = useState(props.isResetPassword);\n  const [isDone, setIsDone] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const { token } = useParams();\n  const history = useHistory();\n  const formRef = useRef(); // Attached to <Formik>\n\n  // Formik validation schema\n  const schema = isResetPassword\n    ? yup.object({\n        password: yup.string().required(\"Required\"),\n        confirmPassword: yup\n          .string()\n          .test(\"passwords-match\", \"Passwords must match\", function (value) {\n            return this.parent.password === value;\n          }),\n      })\n    : yup.object({\n        email: yup.string().email(\"Invalid email address\").required(\"Required\"),\n      });\n\n  // Update authentication page based on props.isSignUp change.\n  useEffect(() => {\n    setIsResetPassword(props.isResetPassword);\n  }, [props.isResetPassword]);\n\n  // Check URL to see if it contains \"done\". Set isDone based on URL.\n  useEffect(() => {\n    if (window.location.href.indexOf(\"done\") !== -1) {\n      setIsDone(true);\n    } else {\n      setIsDone(false);\n    }\n  }, [history.location]);\n\n  // Sets the document title\n  useDocumentTitle(\n    `Receipt Hero - ${isResetPassword ? \"Reset\" : \"Forgot\"} Password`\n  );\n\n  function handleSubmit(formData) {\n    if (isResetPassword) {\n      resetPassword(formData);\n    } else {\n      forgotPassword(formData);\n    }\n  }\n\n  async function resetPassword(formData) {\n    try {\n      await api.resetPassword(formData, token);\n      formRef.current.setSubmitting(false);\n      history.push(`/reset/${token}/done`);\n    } catch (err) {\n      if (err.response?.data?.message) {\n        setErrorMessage(err.response.data.message);\n      }\n    }\n  }\n\n  async function forgotPassword(formData) {\n    try {\n      await api.forgotPassword(formData);\n      formRef.current.setSubmitting(false);\n      history.push(\"/forgot/done\");\n    } catch (err) {\n      if (err.response?.data?.message) {\n        setErrorMessage(err.response.data.message);\n      }\n    }\n  }\n\n  return (\n    <SignInContainer>\n      <Card.Body>\n        <img\n          className=\"mx-auto d-block mb-3\"\n          src={logo}\n          width=\"72\"\n          height=\"72\"\n          alt=\"logo\"\n        />\n      </Card.Body>\n\n      {/* Alert Error Message */}\n      {errorMessage && (\n        <Alert\n          variant=\"danger\"\n          onClose={() => setErrorMessage(null)}\n          className=\"d-flex align-items-center\"\n        >\n          <IoWarningOutline className=\"mr-2\" />\n          {errorMessage}\n        </Alert>\n      )}\n      <StyledCard>\n        {isDone ? (\n          <h3>Password Reset {isResetPassword ? \"Complete\" : \"Sent\"}</h3>\n        ) : (\n          <h3>{isResetPassword ? \"Reset\" : \"Forgot\"} Password</h3>\n        )}\n        <hr />\n        {!isDone && !isResetPassword && (\n          <p className=\"small\">\n            Please enter the email address associated with your account.\n          </p>\n        )}\n\n        {isDone ? (\n          isResetPassword ? (\n            <p>Your password has been set.</p>\n          ) : (\n            <p>\n              If your submission matches our records, a link will be sent to the\n              provided email address with information on how to reset your\n              password. The link will only be valid for 15 minutes.\n            </p>\n          )\n        ) : (\n          <Formik\n            validationSchema={schema}\n            initialValues={defaultFormData}\n            onSubmit={(values, { setSubmitting }) => {\n              handleSubmit(values);\n            }}\n            innerRef={formRef}\n          >\n            {({ handleSubmit, isSubmitting, errors, values }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                {/* Reset Password or Confirm Email */}\n                {isResetPassword ? (\n                  <div>\n                    <FormTextField\n                      name=\"password\"\n                      label=\"New password\"\n                      type=\"password\"\n                      isValid={!errors.confirmPassword && values.password}\n                    />\n\n                    <FormTextField\n                      name=\"confirmPassword\"\n                      label=\"Confirm New Password\"\n                      type=\"password\"\n                      className=\"mb-3\"\n                      isValid={\n                        !errors.confirmPassword && values.confirmPassword\n                      }\n                    />\n                  </div>\n                ) : (\n                  <FormTextField name=\"email\" label=\"Email\" />\n                )}\n                {/* Submit button */}\n                <StyledButton\n                  $primary\n                  type=\"submit\"\n                  size=\"lg\"\n                  className=\"mt-4\"\n                  block\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting\n                    ? \"Loading...\"\n                    : isResetPassword\n                    ? \"Update password\"\n                    : \"Email me a recovery link\"}\n                </StyledButton>\n              </Form>\n            )}\n          </Formik>\n        )}\n        <Link to=\"/login\">\n          <StyledButton\n            variant={isDone ? \"success\" : \"link\"}\n            size=\"lg\"\n            block\n            className={isDone ? \"mt-4\" : \"pb-0 mt-3\"}\n          >\n            Back to login\n          </StyledButton>\n        </Link>\n      </StyledCard>\n    </SignInContainer>\n  );\n}\n\nexport default ForgotPassword;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n    html, body, #root, #root>div {\n      height: 100%;\n    }\n\n    body {\n      background-color: ${({ theme }) => theme.background};\n      color: ${({ theme }) => theme.text};\n      // font-family: \"Montserrat\", sans-serif;\n\n      // Makes text look sharper on the edges.\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    h1,h2,h3,h4,h5,h6,span {\n      font-family: \"Montserrat\";\n      font-weight: 500;\n    }\n\n    td, tr {\n      color: ${({ theme }) => theme.text};\n      border-bottom: 1px solid ${({ theme }) => theme.borderColor} !important;\n    }\n\n    th {\n      border-top-color: ${({ theme }) => theme.borderColor} !important;\n      border-bottom-color: ${({ theme }) => theme.borderColor} !important;\n    }\n\n    hr {\n      background-color: ${({ theme }) => theme.borderColor}\n    }\n\n    input, textarea {\n      background-color: ${({ theme }) => theme.body} !important;\n      color: ${({ theme }) => theme.text} !important;\n    }\n\n    .as-text {\n      background:none;\n      border:none;\n      margin:0;\n      padding:0;\n      cursor: pointer;\n    }\n\n    .dropdown-menu {\n      background-color: ${({ theme }) => theme.body};\n      box-shadow: 0 3px 3px rgba(0,0,0,0.2);\n    }\n\n    .dropdown-divider {\n      border-color: #aaa;\n    }\n\n    .dropdown-menu a {\n      color: ${({ theme }) => theme.text};\n    }\n\n    .dropdown-toggle,\n    .dropdown-menu {\n      width: 100%;\n    }\n\n    .list-group-item {\n      border: 1px solid #aaa;\n    }\n\n    .nav.nav-pills .nav-link {\n      color: ${({ theme }) => theme.text} !important;\n    }\n\n    .nav.nav-pills .nav-link.active {\n      color: #fff !important;\n      background-color: ${({ theme }) => theme.tabPane} !important;\n    }\n\n    /* Chrome, Safari, Edge, Opera - Removes increment button for number text input. */\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    /* Firefox */\n    input[type=number] {\n      -moz-appearance: textfield;\n    }\n\n    /* Print settings */\n\n    @page {\n      margin: 10%;\n    }\n\n    @media all {\n      .pagebreak {\n        display: none;\n      }\n    }\n\n    @media print {\n      .pagebreak {\n        page-break-before: always;\n      }\n\n      /* Receipts table print settings */\n\n      .hide-on-print, #deleteButton {\n        display: none;\n        visibility: hidden;\n      }\n\n      h1,h2,h3,h4,h5,h6,p,td,tr,th {\n        color: black !important;\n      }\n    }\n`;\n","export const lightTheme = {\n  background: \"#F4F3EF\",\n  text: \"#2B2B2B\",\n  body: \"white\",\n  navbar: \"#5b5656\",\n  toggleButton: \"outline-dark\",\n  emoji: \"🌙\",\n  borderColor: \"#d3d3d3\",\n  cellColorGreen: \"#49a94e\",\n  cellColorOrange: \"#FF5F1F\",\n  tabPane: \"#9d9a9a\",\n};\n\nexport const darkTheme = {\n  background: \"#1a1a1a\",\n  text: \"#DDDDDD\",\n  body: \"#313131\",\n  navbar: \"#3A3B3C\",\n  toggleButton: \"outline-light\",\n  emoji: \"☀️\",\n  borderColor: \"#636465\",\n  cellColorGreen: \"#39FF14\", //\"#59FF00\",\n  cellColorOrange: \"#FFA500\",\n  tabPane: \"#757677\",\n};\n","import React, { useContext } from \"react\";\nimport NavigationBar from \"./NavigationBar\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport NoMatch from \"../routes/NoMatch\";\nimport Settings from \"../routes/Settings/index\";\nimport User from \"../routes/User\";\nimport ForgotPassword from \"../routes/ForgotPassword\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"../styles/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"../styles/Themes\";\nimport { useDarkMode } from \"../styles/useDarkMode\";\nimport { Wrapper } from \"./Container\";\nimport { UserContext } from \"../UserContext\";\nimport { ConfigProvider } from \"react-avatar\";\nimport { StyledSpinner } from \"../components/Spinner\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  const { userObject, loadingUserObject } = useContext(UserContext);\n\n  if (!mountedComponent) return <div />;\n  return (\n    <>\n      {loadingUserObject ? (\n        <Wrapper>\n          <div style={{ height: \"100vh\" }}>\n            <StyledSpinner />\n          </div>\n        </Wrapper>\n      ) : (\n        <ConfigProvider avatarRedirectUrl=\"https://avatar-redirect.appspot.com\">\n          <ThemeProvider theme={themeMode}>\n            <GlobalStyles />\n            <Router>\n              <NavigationBar theme={theme} toggleTheme={themeToggler} />\n              <Wrapper>\n                <Switch>\n                  <Route exact path=\"/\" component={Home} />\n                  <Route path=\"/login\">\n                    {userObject ? (\n                      <Redirect to=\"/\" />\n                    ) : (\n                      <Auth isSignUp={false} />\n                    )}\n                  </Route>\n                  <Route path=\"/signup\">\n                    {userObject ? (\n                      <Redirect to=\"/\" />\n                    ) : (\n                      <Auth isSignUp={true} />\n                    )}\n                  </Route>\n                  <Route path=\"/user/settings\">\n                    {!userObject ? <Redirect to=\"/login\" /> : <Settings />}\n                  </Route>\n                  <Route path=\"/user/:id\" component={User} />\n                  <Route path=\"/calculation/edit/:id\" component={Home} />\n                  <Route path=\"/calculation/:id\" component={Home} />\n                  <Route path=\"/forgot\">\n                    {userObject ? (\n                      <Redirect to=\"/\" />\n                    ) : (\n                      <ForgotPassword isResetPassword={false} />\n                    )}\n                  </Route>\n                  <Route path=\"/forgot/done\">\n                    {userObject ? (\n                      <Redirect to=\"/\" />\n                    ) : (\n                      <ForgotPassword isResetPassword={false} />\n                    )}\n                  </Route>\n                  <Route path=\"/reset/:token\">\n                    {userObject ? (\n                      <Redirect to=\"/\" />\n                    ) : (\n                      <ForgotPassword isResetPassword={true} />\n                    )}\n                  </Route>\n                  <Route path=\"/reset/:token/done\">\n                    {userObject ? (\n                      <Redirect to=\"/\" />\n                    ) : (\n                      <ForgotPassword isResetPassword={true} />\n                    )}\n                  </Route>\n                  <Route component={NoMatch} />\n                </Switch>\n              </Wrapper>\n            </Router>\n          </ThemeProvider>\n        </ConfigProvider>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState(\"light\");\n  const [mountedComponent, setMountedComponent] = useState(false);\n\n  const setMode = (mode) => {\n    window.localStorage.setItem(\"theme\", mode);\n    setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\");\n    localTheme && setTheme(localTheme);\n    setMountedComponent(true);\n  }, []);\n\n  return [theme, themeToggler, mountedComponent];\n};\n\n// More info at: https://www.smashingmagazine.com/2020/04/dark-mode-react-apps-styled-components/\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { UserProvider } from \"./UserContext\";\n\nReactDOM.render(\n  <UserProvider>\n    <App />\n  </UserProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}